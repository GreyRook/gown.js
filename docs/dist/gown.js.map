{"version":3,"sources":["webpack:///webpack/bootstrap 7b32a6c218853c87731b","webpack:///./src/controls/ToggleButton.js","webpack:///./src/shapes/Shape.js","webpack:///./src/core/Control.js","webpack:///./~/eventemitter3/index.js","webpack:///./src/controls/Button.js","webpack:///./src/controls/InputControl.js","webpack:///./src/controls/Scrollable.js","webpack:///./src/core/Skinable.js","webpack:///./src/utils/roundToPrecision.js","webpack:///./src/controls/Scroller.js","webpack:///./src/layout/Layout.js","webpack:///./src/layout/LayoutAlignment.js","webpack:///./src/layout/TiledLayout.js","webpack:///./src/layout/utils/itemDimensions.js","webpack:///./src/controls/LayoutGroup.js","webpack:///./src/controls/List.js","webpack:///./src/controls/ScrollBar.js","webpack:///./src/controls/ScrollThumb.js","webpack:///./src/controls/TextInput.js","webpack:///./src/controls/renderers/DefaultListItemRenderer.js","webpack:///./src/data/ListCollection.js","webpack:///./src/skin/Theme.js","webpack:///./src/skin/ThemeFont.js","webpack:///./src/utils/InputWrapper.js","webpack:///./src/utils/ScaleContainer.js","webpack:///./src/utils/SliderData.js","webpack:///./src/utils/Tween.js","webpack:///./src/utils/mixin.js","webpack:///./src/utils/position.js","webpack:///./src/utils/resizeScaling.js","webpack:///(webpack)/buildin/global.js","webpack:///./src/controls/Application.js","webpack:///./src/controls/AutoComplete.js","webpack:///./src/controls/Check.js","webpack:///./src/controls/PickerList.js","webpack:///./src/controls/Radio.js","webpack:///./src/controls/ScrollContainer.js","webpack:///./src/controls/Slider.js","webpack:///./src/controls/TextArea.js","webpack:///./src/controls/ToggleGroup.js","webpack:///./src/core/index.js","webpack:///./src/interaction/KeyboardManager.js","webpack:///./src/interaction/ResizeManager.js","webpack:///./src/layout/HorizontalLayout.js","webpack:///./src/layout/TiledColumnsLayout.js","webpack:///./src/layout/TiledRowsLayout.js","webpack:///./src/layout/VerticalLayout.js","webpack:///./src/shapes/Arrow.js","webpack:///./src/shapes/Diamond.js","webpack:///./src/shapes/Ellipse.js","webpack:///./src/shapes/Line.js","webpack:///./src/shapes/Rect.js","webpack:///./src/skin/ThemeParser.js","webpack:///./src/utils/index.js","webpack:///./src/index.js","webpack:///./src/utils/roundDownToNearest.js","webpack:///./src/utils/roundToNearest.js","webpack:///./src/utils/roundUpToNearest.js"],"names":[],"mappings":";AAAA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;;AAGA;AACA;;AAEA;AACA;;AAEA;AACA,mDAA2C,cAAc;;AAEzD;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAK;AACL;AACA;;AAEA;AACA;AACA;AACA,mCAA2B,0BAA0B,EAAE;AACvD,yCAAiC,eAAe;AAChD;AACA;AACA;;AAEA;AACA,8DAAsD,+DAA+D;;AAErH;AACA;;AAEA;AACA;;;;;;;AChEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;;AAED;AACA;AACA;AACA,uCAAuC;AACvC;AACA,0DAA0D;AAC1D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,0BAA0B;AAC1B;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA,CAAC;;AAED;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,6CAA6C;AAC7C;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA,CAAC;;;;;;;ACpND;AACA;AACA;AACA;AACA;AACA;AACA;AACA,oCAAoC;AACpC,gDAAgD;AAChD,oCAAoC;AACpC,sCAAsC;AACtC;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA,CAAC;;AAED;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA,CAAC;;AAED;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA,CAAC;;AAED;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA,CAAC;;AAED;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA,CAAC;;AAED;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA,CAAC;;AAED;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA,CAAC;;AAED;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;;;;;;AC9PA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,+BAA+B;AAC/B;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA,CAAC;;AAED;;;;;;;;ACxFA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,WAAW,SAAS;AACpB,WAAW,MAAM;AACjB,WAAW,QAAQ;AACnB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA,WAAW,cAAc;AACzB,WAAW,QAAQ;AACnB,aAAa;AACb;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA,0DAA0D,OAAO;AACjE;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA,WAAW,cAAc;AACzB,aAAa,QAAQ;AACrB;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,yCAAyC,SAAS;AAClD;AACA;;AAEA;AACA,GAAG;AACH;AACA;;AAEA,eAAe,YAAY;AAC3B;;AAEA;AACA,2DAA2D;AAC3D,+DAA+D;AAC/D,mEAAmE;AACnE,uEAAuE;AACvE;AACA,0DAA0D,SAAS;AACnE;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA,WAAW,cAAc;AACzB,WAAW,SAAS;AACpB,WAAW,MAAM;AACjB,aAAa,aAAa;AAC1B;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA,WAAW,cAAc;AACzB,WAAW,SAAS;AACpB,WAAW,MAAM;AACjB,aAAa,aAAa;AAC1B;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA,WAAW,cAAc;AACzB,WAAW,SAAS;AACpB,WAAW,MAAM;AACjB,WAAW,QAAQ;AACnB,aAAa,aAAa;AAC1B;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH,2DAA2D,YAAY;AACvE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA,WAAW,cAAc;AACzB,aAAa,aAAa;AAC1B;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;;;;;;ACtTA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,wCAAwC;AACxC,+DAA+D;AAC/D;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mBAAmB,8BAA8B;AACjD;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA,mBAAmB,8BAA8B;AACjD;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,qCAAqC;AACrC;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;;AAEA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,KAAK,QAAQ;AACb;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,+BAA+B;AAC/B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;;AAED;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;;;;;;;ACldD;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,+CAA+C;AAC/C;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,4CAA4C;AAC5C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,kCAAkC;AAClC,8BAA8B;AAC9B,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,+BAA+B;AAC/B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,gCAAgC;AAChC;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;;AAEA;AACA;AACA;AACA,4CAA4C;AAC5C,wCAAwC;AACxC,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,+CAA+C;AAC/C,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,6CAA6C;AAC7C;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA,0DAA0D;AAC1D,kFAAkF;AAClF,aAAa,WAAW;AACxB;AACA;AACA;AACA;AACA,mBAAmB,kBAAkB;AACrC;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,aAAa,OAAO;AACpB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mBAAmB,iBAAiB;AACpC;AACA;;AAEA;AACA;AACA;AACA;AACA,mBAAmB,wBAAwB;AAC3C;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA,mBAAmB;;AAEnB;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,CAAC;;AAED;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,CAAC;;AAED;AACA;AACA;AACA;AACA,CAAC;;AAED;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA,CAAC;;AAED;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;;AAED;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;;;;;;;AC/zBD;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,8CAA8C;AAC9C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,+BAA+B;;AAE/B;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gCAAgC;;AAEhC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,0EAA0E;AAC1E,4EAA4E;AAC5E;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,yCAAyC;AACzC,yCAAyC;AACzC,aAAa,QAAQ;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,+BAA+B;AAC/B;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,kCAAkC;AAClC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,wDAAwD;AACxD,aAAa,OAAO;AACpB;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,iDAAiD;AACjD,aAAa,OAAO;AACpB;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,yDAAyD;AACzD;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;;AAED;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;;AAEA;AACA;AACA,aAAa;AACb;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;;AAED;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;;AAED;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA,CAAC;;AAED;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;;AAED;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;;;;;;;AC/mBD;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qDAAqD;AACrD;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,6BAA6B;;AAE7B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,+BAA+B;AAC/B;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,kCAAkC;AAClC,oEAAoE;AACpE;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;;AAED;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA,CAAC;;AAED;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;ACrOA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,4CAA4C;AAC5C,0DAA0D;AAC1D,YAAY,OAAO;AACnB;AACA;AACA;AACA;AACA;AACA;;;;;;;ACfA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,4BAA4B;;AAE5B;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;;AAED;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;;AAED;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;;AAED;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;;AAED;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;;AAED;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;;AAED;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;;AAED;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;;AAED;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;;AAED;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;;AAED;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;;AAED;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;;AAED;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;;AAED;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;;AAED;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;;AAED;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA,CAAC;;AAED;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA,CAAC;;AAED;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;;AAED;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA,CAAC;;AAED;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,4DAA4D;AAC5D;AACA;AACA,8DAA8D;AAC9D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;;AAEA;AACA,4EAA4E;AAC5E;AACA,KAAK;AACL;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,0BAA0B,OAAO;AACjC,qBAAqB,OAAO;AAC5B,oBAAoB,OAAO;AAC3B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;;;AAGA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;AC1uCA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;;AAED;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;;AAED;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA,CAAC;;AAED;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;;AAED;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;;AAED;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;;AAED;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;;AAED;AACA;AACA;AACA,6CAA6C;AAC7C,0BAA0B;AAC1B;AACA;AACA;AACA;;;;;;;ACnOA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mFAAmF;AACnF,yDAAyD;AACzD,6EAA6E;AAC7E;AACA;AACA;AACA;AACA,eAAe,eAAe;AAC9B;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mFAAmF;AACnF,qDAAqD;AACrD;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA,eAAe,eAAe;AAC9B;AACA;;AAEA;;AAEA;AACA;;AAEA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,uCAAuC;AACvC,4EAA4E;AAC5E;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,iDAAiD;AACjD,oDAAoD;AACpD,sDAAsD;AACtD;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,kBAAkB,kBAAkB;AACpC;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA,CAAC;;AAED;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA,CAAC;;;;;;;AC1QD;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,iDAAiD;AACjD,oDAAoD;AACpD,sDAAsD;AACtD;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA,cAAc,kBAAkB;AAChC;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,kBAAkB;AACjC;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS,OAAO;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA,aAAa,OAAO;AACpB;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS,OAAO;AAChB;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA,CAAC;;;;;;;ACxZD;AACA;;AAEA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;;AAEA;AACA;AACA,KAAK;AACL;AACA;;AAEA;AACA;;;;;;;AClBA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,kDAAkD;AAClD,qEAAqE;AACrE,uEAAuE;AACvE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA,WAAW,sBAAsB;AACjC,YAAY,mBAAmB;AAC/B;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA,WAAW,mBAAmB;AAC9B,WAAW,OAAO;AAClB,YAAY,mBAAmB;AAC/B;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,wCAAwC;AACxC;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,+DAA+D;AAC/D,gDAAgD;AAChD,gDAAgD;AAChD,uCAAuC;AACvC,yCAAyC;AACzC,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,gDAAgD;AAChD,gDAAgD;AAChD,uCAAuC;AACvC,yCAAyC;AACzC;AACA;AACA,wCAAwC,KAAK;AAC7C;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA,2BAA2B,0BAA0B;AACrD;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;;AAED;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA,2BAA2B,0BAA0B;AACrD;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;;;;;;;ACxOD;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,sCAAsC;AACtgCAAgC;AAChC,aAAa;AACb;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mBAAmB,gBAAgB;AACnC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,mCAAmC;AACnC;AACA;AACA;AACA;;;AAGA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,uBAAuB,+BAA+B;AACtD;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,mBAAmB,+BAA+B;AAClD;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL,mBAAmB,+BAA+B;AAClD;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA,CAAC;;AAED;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA,CAAC;;;AAGD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA,CAAC;;AAED;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,MAAM;AACN;AACA;AACA;AACA,EAAE;;AAEF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA,CAAC;;AAED;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA,CAAC;;AAED;;;;;;;AC7ZA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,+FAA+F;AAC/F,2CAA2C;AAC3C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA,CAAC;;AAED;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA,CAAC;;;;;;;ACnJD;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,sEAAsE;AACtE,8CAA8C;AAC9C,0EAA0E;AAC1E;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;;AAED;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,+CAA+C;AAC/C;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,oDAAoD;AACpD,oDAAoD;AACpD,aAAa,QAAQ;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;ACxNA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,4CAA4C;AAC5C,sEAAsE;AACtE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA,CAAC;;AAED;AACA;AACA;AACA,aAAa,QAAQ;AACrB;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,oCAAoC;AACpC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAGA;;;;;;;ACzHA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,yDAAyD;AACzD;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAM;AACN;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA,CAAC;;;;;;;ACzJD;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,kCAAkC;AAClC;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA,CAAC;;AAED;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;;AAED;AACA;AACA;AACA,gDAAgD;AAChD,aAAa,OAAO;AACpB;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,8BAA8B;AAC9B,aAAa,OAAO;AACpB;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,6BAA6B;AAC7B,wDAAwD;AACxD;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,gCAAgC;AAChC,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,mCAAmC;AACnC;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,yCAAyC;AACzC,mDAAmD;AACnD;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,iCAAiC;AACjC;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,gCAAgC;AAChC;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,kCAAkC;AAClC,aAAa,QAAQ;AACrB;AACA;AACA;AACA;;;;;;;AC1OA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,iEAAiE;AACjE,qFAAqF;AACrF,iFAAiF;AACjF;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,8CAA8C;AAC9C;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,6BAA6B;AAC7B,0CAA0C;AAC1C;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,0CAA0C;AAC1C;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,+CAA+C;AAC/C,yEAAyE;AACzE;AACA,0EAA0E;AAC1E;AACA,0EAA0E;AAC1E,YAAY;AACZ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,+CAA+C;AAC/C,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,oDAAoD;AACpD,uDAAuD;AACvD,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;;;;;;ACnNA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,sCAAsC;AACtC;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA,YAAY,eAAe;AAC3B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;;AAED;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA,CAAC;;AAED;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA,CAAC;;;;;;;AC7KD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,aAAa,iBAAiB;AAC9B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,SAAS;;AAET;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;;AAET;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,UAAU;AACV;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,gCAAgC;AAChC,6BAA6B;AAC7B;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,aAAa,SAAS;AACtB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,aAAa,OAAO;AACpB;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA,WAAW,OAAO,uBAAuB;AACzC;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,qCAAqC;AACrC;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,KAAK;AACL;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,kDAAkD;AAClD;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,aAAa,OAAO;AACpB;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;;;;;;;AC7OA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,oCAAoC;AACpC;AACA,4DAA4D;AAC5D;AACA,0EAA0E;AAC1E;AACA,0EAA0E;AAC1E;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,kBAAkB;AAClB;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,kBAAkB;AAClB;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,kBAAkB;AAClB;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,kBAAkB;AAClB;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,kBAAkB;AAClB;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,kBAAkB;AAClB;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,kBAAkB;AAClB;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,kBAAkB;AAClB;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,kBAAkB;AAClB;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,4BAA4B;AAC5B,4BAA4B;AAC5B,uBAAuB;AACvB,wBAAwB;AACxB,YAAY,YAAY;AACxB;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;;AAED;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;;AAED;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,4DAA4D;AAC5D,yCAAyC;AACzC,YAAY,oBAAoB;AAChC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;AC1WA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;;;;;;ACxBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mCAAmC;AACnC,uCAAuC;AACvC,sDAAsD;AACtD,oCAAoC;AACpC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,kCAAkC;AAClC;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,2CAA2C;AAC3C,YAAY,OAAO;AACnB;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA,yDAAyD;AACzD,YAAY;AACZ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,qDAAqD;AACrD,YAAY;AACZ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,YAAY,OAAO;AACnB;AACA;AACA;AACA;AACA,KAAK;AACL;AACA,KAAK;AACL;AACA;AACA;;AAEA;AACA;AACA;AACA,mCAAmC;AACnC,uCAAuC;AACvC,2CAA2C;AAC3C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA,kDAAkD,YAAY;AAC9D,KAAK;AACL;AACA;AACA;;AAEA;AACA;AACA;AACA,+BAA+B;AAC/B;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;AC1MA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,0CAA0C;AAC1C,+BAA+B;AAC/B,YAAY;AACZ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;;;;;;;ACjCA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,4BAA4B;AAC5B,+BAA+B;AAC/B;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,4BAA4B;AAC5B,+BAA+B;AAC/B;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,4BAA4B;AAC5B,+BAA+B;AAC/B;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,4BAA4B;AAC5B,+BAA+B;AAC/B;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,4BAA4B;AAC5B,+BAA+B;AAC/B;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;ACxEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,kCAAkC;;AAElC;AACA;;AAEA;AACA;AACA;AACA,KAAK;;AAEL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,KAAK;;AAEL;AACA;AACA;AACA;AACA,KAAK;;AAEL;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,SAAS;AACT;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,qDAAqD,OAAO;AAC5D;AACA;AACA;AACA,KAAK;;AAEL;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;AC/HA;;AAEA;AACA;AACA;AACA,CAAC;;AAED;AACA;AACA;AACA,CAAC;AACD;AACA;AACA;AACA;;AAEA;AACA;AACA,4CAA4C;;AAE5C;;;;;;;ACpBA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,oBAAoB,OAAO;AAC3B;AACA;AACA,6CAA6C,OAAO;AACpD,uDAAuD,OAAO;AAC9D,sBAAsB,OAAO;AAC7B,uBAAuB,OAAO;AAC9B,wBAAwB,OAAO;AAC/B,gDAAgD,uCAAuC;AACvF,wCAAwC,eAAe;AACvD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;;AAEA,oBAAoB;AACpB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mBAAmB,qBAAqB;AACxC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,mCAAmC,QAAQ;AAC3C,+BAA+B,QAAQ;AACvC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;;AAED;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;;AAED;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA,CAAC;;;;;;;ACjVD;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qCAAqC;AACrC,2CAA2C;AAC3C,4EAA4E;AAC5E;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,4CAA4C;AAC5C,8CAA8C;AAC9C,gDAAgD;AAChD,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA,SAAS,EAAE;AACX;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;;AAEA;AACA;AACA;AACA,mDAAmD;AACnD;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA,mBAAmB,yBAAyB;AAC5C;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA,6BAA6B;AAC7B;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,gCAAgC;AAChC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;;;AAGD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;;AAED;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;;AAED;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;;;;;;;ACzWD;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,wCAAwC;AACxC,6DAA6D;AAC7D;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;AC9BA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,6CAA6C;AAC7C;AACA;AACA;;AAEA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,sCAAsC;AACtC;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,sCAAsC;AACtC;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA,CAAC;;AAED;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA,CAAC;;AAED;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA,CAAC;;AAED;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,0CAA0C;AAC1C,iBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;ACzRA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,8CAA8C;AAC9C,oEAAoE;AACpE;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;;;;;;;AC/CD;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,kDAAkD;AAClD;AACA;AACA;AACA;;AAEA;AACA;AACA;;;;;;;;;;;;;AClBA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,wCAAwC;AACxC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;ACpCA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,2CAA2C;AAC3C,oEAAoE;AACpE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA,wCAAwC;AACxC,yDAAyD;AACzD,aAAa,WAAW;AACxB;AACA;AACA;AACA;AACA,mBAAmB,kBAAkB;AACrC;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;;AAEA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,sCAAsC;AACtC,kCAAkC;AAClC;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,kCAAkC,oBAAoB;AACtD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,aAAa,QAAQ;AACrB;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;;AAED;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;;;;;;;AChOD;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,sDAAsD;AACtD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,qDAAqD;AACrD;AACA;AACA;AACA;AACA;AACA,EAAE;AACF;AACA;AACA;;AAEA;AACA;AACA;AACA,sDAAsD;AACtD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;;AAED;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;;AAED;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;;;;;;;ACtLD;AACA;AACA;AACA;AACA,iBAAiB;AACjB;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;ACbA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,wDAAwD;AACxD,qBAAqB;AACrB,8CAA8C,QAAQ;AACtD;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,2DAA2D;AAC3D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,uDAAuD;AACvD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,uDAAuD;AACvD;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,oDAAoD;AACpD,YAAY;AACZ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,kEAAkE;AAClE;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,kEAAkE;AAClE;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,IAAI;AACJ;AACA,qDAAqD;AACrD;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA,mCAAmC,QAAQ;AAC3C;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,wDAAwD;AACxD,0EAA0E;AAC1E,2CAA2C;AAC3C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;;;;;;AC/PA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,wDAAwD;AACxD,qBAAqB;AACrB,+GAA+G;AAC/G,+GAA+G;AAC/G;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,gCAAgC;AAChC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT,KAAK;AACL;AACA;;AAEA;;AAEA;AACA;AACA;AACA,+BAA+B;AAC/B;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,yBAAyB;AACzB;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,wDAAwD;AACxD,0EAA0E;AAC1E,2CAA2C;AAC3C;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,IAAI;AACJ,8HAA8H;AAC9H;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;;AAEA,mCAAmC,QAAQ;AAC3C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;;;;;;AC3QA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;;;;;;ACzBA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA,CAAC;;;;;;;AC5CD;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA,CAAC;;;;;;;AC5CD;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;;;;;;ACzBA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,oCAAoC;AACpC,0CAA0C;AAC1C,6CAA6C;AAC7C,+CAA+C;AAC/C,oCAAoC;AACpC,sCAAsC;AACtC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;ACxDA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,4CAA4C;AAC5C,kDAAkD;AAClD,4CAA4C;AAC5C,8CAA8C;AAC9C;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;ACjCA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,4CAA4C;AAC5C,kDAAkD;AAClD,4CAA4C;AAC5C,8CAA8C;AAC9C;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;AC/BA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mCAAmC;AACnC,yCAAyC;AACzC,mCAAmC;AACnC,qCAAqC;AACrC,2CAA2C;AAC3C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA,CAAC;;;AAGD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;;;;;;ACzFA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gDAAgD;AAChD,sDAAsD;AACtD,gDAAgD;AAChD,kDAAkD;AAClD,kDAAkD;AAClD;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA,CAAC;;;;;;;AC5DD;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,+CAA+C;AAC/C,4DAA4D;AAC5D;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,6BAA6B;AAC7B,0CAA0C;AAC1C;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,6CAA6C;AAC7C,YAAY;AACZ;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,kCAAkC;AAClC,+BAA+B;AAC/B,aAAa,SAAS;AACtB;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,yEAAyE;AACzE,yDAAyD;AACzD,+DAA+D;AAC/D;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA,+BAA+B;AAC/B;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;ACnOA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;ACrBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;;AAED;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;;;;;;;AChFA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,2CAA2C;AAC3C,2DAA2D;AAC3D,YAAY,OAAO;AACnB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;ACnBA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,sCAAsC;AACtC,2DAA2D;AAC3D,YAAY,OAAO;AACnB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;ACpBA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,yCAAyC;AACzC,2DAA2D;AAC3D,YAAY,OAAO;AACnB;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"gown.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// identity function for calling harmony imports with the correct context\n \t__webpack_require__.i = function(value) { return value; };\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, {\n \t\t\t\tconfigurable: false,\n \t\t\t\tenumerable: true,\n \t\t\t\tget: getter\n \t\t\t});\n \t\t}\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 55);\n\n\n\n// WEBPACK FOOTER //\n// webpack/bootstrap 7b32a6c218853c87731b","var Button = require('./Button');\n\n/**\n * Basic button that has a selected state which indicates if the button\n * is pressed or not.\n *\n * @class ToggleButton\n * @extends GOWN.Button\n * @memberof GOWN\n * @constructor\n */\nfunction ToggleButton(theme, skinName) {\n    skinName = skinName || ToggleButton.SKIN_NAME;\n\n    /**\n     * The valid toggle button states\n     *\n     * @private\n     * @type String[]\n     * @default ToggleButton.stateNames\n     */\n    this._validStates = ToggleButton.stateNames;\n\n    Button.call(this, theme, skinName);\n\n    /**\n     * The pressed state of the Button\n     *\n     * @private\n     * @type Boolean\n     * @default false\n     */\n    this._selected = false;\n}\n\nToggleButton.prototype = Object.create( Button.prototype );\nToggleButton.prototype.constructor = ToggleButton;\nmodule.exports = ToggleButton;\n\n/**\n * Dispatched when the button is selected or deselected either\n * programmatically or as a result of user interaction.The value of the\n * <code>selected</code> property indicates whether the button is selected.\n * or not.\n *\n * @static\n * @final\n * @type String\n */\nToggleButton.CHANGE = 'change';\n\n/**\n * Default toggle button skin name\n *\n * @static\n * @final\n * @type String\n */\nToggleButton.SKIN_NAME = 'toggle_button';\n\n/**\n * Selected up state: mouse button is released or finger is removed from the screen + the toggle button is selected\n *\n * @static\n * @final\n * @type String\n */\nToggleButton.SELECTED_UP = 'selected_up';\n\n/**\n * Selected down state: mouse button is pressed or finger touches the screen + the toggle button is selected\n *\n * @static\n * @final\n * @type String\n */\nToggleButton.SELECTED_DOWN = 'selected_down';\n\n/**\n * Selected hover state: mouse pointer hovers over the button + the toggle button is selected\n * (ignored on mobile)\n *\n * @static\n * @final\n * @type String\n */\nToggleButton.SELECTED_HOVER = 'selected_hover';\n\n/**\n * Names of possible states for a toggle button\n *\n * @static\n * @final\n * @type String[]\n * @private\n */\nToggleButton.stateNames = Button.stateNames.concat([\n    ToggleButton.SELECTED_UP,\n    ToggleButton.SELECTED_DOWN,\n    ToggleButton.SELECTED_HOVER]);\n\n/**\n * @private\n */\nvar originalCurrentState = Object.getOwnPropertyDescriptor(Button.prototype, 'currentState');\n\n/**\n * The current state\n *\n * @name GOWN.ToggleButton#currentState\n * @type String\n */\nObject.defineProperty(ToggleButton.prototype, 'currentState',{\n    get: function() {\n        return this._currentState;\n    },\n    set: function(value) {\n        if (this._selected) {\n            value = 'selected_' + value;\n        }\n        originalCurrentState.set.call(this, value);\n    }\n});\n\n/**\n * Set the selection state\n *\n * @param selected value of selection {bool}\n * @param [emit] set to true if you want to emit the change signal\n *        (used to prevent infinite loop in ToggleGroup) {bool}\n * @private\n */\nToggleButton.prototype.setSelected = function(selected, emit) {\n    var state = this._currentState;\n    this.invalidState = this._selected !== selected || this.invalidState;\n    if (state.indexOf('selected_') === 0) {\n        state = state.substr(9, state.length);\n    }\n    if (this._selected !== selected) {\n        this._selected = selected;\n        if (emit) {\n            this.emit(ToggleButton.CHANGE, this, selected);\n        }\n    }\n    this._pressed = false; //to prevent toggling on touch/mouse up\n    this.currentState = state;\n};\n\n/**\n * Indicate if the button is selected (pressed)\n *\n * @name GOWN.ToggleButton#selected\n * @type Boolean\n * @default false\n */\nObject.defineProperty(ToggleButton.prototype, 'selected', {\n    set: function(selected) {\n        this.setSelected(selected, true);\n    },\n    get: function() {\n        return this._selected;\n    }\n});\n\n/**\n * Toggle the state\n */\nToggleButton.prototype.toggle = function() {\n    this.selected = !this._selected;\n};\n\n/**\n * @private\n */\nToggleButton.prototype.buttonHandleEvent = Button.prototype.handleEvent;\n\n/**\n * handle the touch/tap event\n *\n * @param type the type of the press/touch. {Object}\n * @protected\n **/\nToggleButton.prototype.handleEvent = function(type) {\n    if (!this._enabled) {\n        return;\n    }\n\n    if ((type === Button.UP && this._over) || (type === Button.TOUCHEND && this._pressed)) {\n        this.toggle();\n    }\n\n    this.buttonHandleEvent(type);\n};\n\n/**\n * The fallback skin if the other skin does not exist (e.g. if a mobile theme\n * that does not provide a \"hover\" state is used on a desktop system)\n *\n * @name GOWN.ToggleButton#skinFallback\n * @type String\n */\nObject.defineProperty(ToggleButton.prototype, 'skinFallback', {\n    get: function() {\n        var selected = '';\n        if (this._currentState && this._currentState.indexOf('selected_') === 0) {\n            selected = 'selected_';\n        }\n        return selected + this._skinFallback;\n    },\n    set: function(value) {\n        this._skinFallback = value;\n    }\n});\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/controls/ToggleButton.js\n// module id = 0\n// module chunks = 0","/**\n * Shape base class\n *\n * @class Shape\n * @extends PIXI.Graphics\n * @memberof GOWN.shapes\n * @constructor\n * @param color Color of the shape {Number}\n * @param [alpha=1.0] Alpha value of the shape {Number}\n * @param width Width of the shape {Number}\n * @param height Height of the shape {Number}\n */\nfunction Shape(color, alpha, width, height) {\n    PIXI.Graphics.call(this);\n\n    /**\n     * Color of the shape\n     *\n     * @private\n     * @type Number\n     */\n    this._color = color;\n\n    /**\n     * Alpha value of the shape\n     *\n     * @private\n     * @type Number\n     * @default 1.0\n     */\n    this._alpha = alpha || 1.0;\n\n    /**\n     * Width of the shape\n     *\n     * @private\n     * @type Number\n     */\n    this._width = width;\n\n    /**\n     * Height of the shape\n     *\n     * @private\n     * @type Number\n     */\n    this._height = height;\n\n    /**\n     * Alpha value of the border\n     *\n     * @private\n     * @type Number\n     * @default 1.0\n     */\n    this._borderAlpha = 1.0;\n\n    /**\n     * Invalidate shape so that it will be redrawn next time\n     *\n     * @private\n     * @type bool\n     * @default true\n     */\n    this.invalid = true;\n}\n\nShape.prototype = Object.create( PIXI.Graphics.prototype );\nShape.prototype.constructor = Shape;\nmodule.exports = Shape;\n\n/**\n * The width of the shape, setting this will redraw the component.\n *\n * @name GOWN.shapes.Shape#width\n * @type Number\n */\nObject.defineProperty(Shape.prototype, 'width', {\n    get: function() {\n        return this._width;\n    },\n    set: function(width) {\n        this._width = width;\n        this.invalid = true;\n    }\n});\n\n/**\n * The height of the shape, setting this will redraw the component.\n *\n * @name GOWN.shapes.Shape#height\n * @type Number\n */\nObject.defineProperty(Shape.prototype, 'height', {\n    get: function() {\n        return this._height;\n    },\n    set: function(height) {\n        this._height = height;\n        this.invalid = true;\n    }\n});\n\n/**\n * The fill color of the shape, setting this will redraw the component.\n *\n * Setting the color to a negative value or 'null', the shape will not be filled\n * (comes in handy when you only want to draw the border).\n *\n * @name GOWN.shapes.Shape#color\n * @type Number\n */\nObject.defineProperty(Shape.prototype, 'color', {\n    get: function() {\n        return this._color;\n    },\n    set: function(color) {\n        this._color = color;\n        this.invalid = true;\n    }\n});\n\n/**\n * The alpha of the shape, setting this will redraw the component.\n *\n * @name GOWN.shapes.Shape#alpha\n * @type Number\n * @default 1.0\n */\nObject.defineProperty(Shape.prototype, 'alpha', {\n    get: function() {\n        return this._alpha;\n    },\n    set: function(alpha) {\n        this._alpha = alpha;\n        this.invalid = true;\n    }\n});\n\n/**\n * Apply the color to the shape (called during redraw)\n *\n * @private\n */\nShape.prototype.applyColor = function() {\n    if (this.color > 0 && typeof this.color !== null) {\n        this.beginFill(this.color, this.alpha);\n    }\n};\n\n/**\n * Apply the border around shape (called during redraw)\n *\n * @private\n */\nShape.prototype.drawBorder = function() {\n    if (this.border) {\n        this.lineStyle(this.border, this.borderColor, this.borderAlpha);\n    }\n};\n\n/**\n * Change the border color of shape\n *\n * @property borderColor\n * @type Number\n */\nObject.defineProperty(Shape.prototype, 'borderColor', {\n    get: function() {\n        return this._borderColor;\n    },\n    set: function(borderColor) {\n        this._borderColor = borderColor;\n        this.invalid = true;\n    }\n});\n\n/**\n * Change the border alpha of shape (between 0.0 - 1.0)\n *\n * @property borderAlpha\n * @type Number\n * @default 1.0\n */\nObject.defineProperty(Shape.prototype, 'borderAlpha', {\n    get: function() {\n        return this._borderAlpha;\n    },\n    set: function(borderAlpha) {\n        this._borderAlpha = borderAlpha;\n        this.invalid = true;\n    }\n});\n\n/**\n * Change the border size\n *\n * @property border\n * @type Number\n */\nObject.defineProperty(Shape.prototype, 'border', {\n    get: function() {\n        return this._border;\n    },\n    set: function(border) {\n        this._border = border;\n        this.invalid = true;\n    }\n});\n\n/**\n * Draw the shape during redraw. Defaults to a simple rect.\n *\n * @private\n */\nShape.prototype._drawShape = function() {\n    // default shape is a rect\n    this.drawRect(\n        Math.min(this._width, 0),\n        Math.min(this._height, 0),\n        Math.abs(this._width),\n        Math.abs(this._height));\n};\n\n/**\n * PIXI method to update the object transform for rendering\n * Used to call redraw() before rendering\n *\n * @private\n */\nShape.prototype.updateTransform = function() {\n    this.redraw();\n\n    PIXI.Graphics.prototype.updateTransform.call(this);\n};\n\n\n/**\n * Update before draw call.\n * Redraw control for current state from theme\n *\n * @private\n */\nShape.prototype.redraw = function() {\n    if(!this.invalid) {\n        return;\n    }\n\n    this.clear();\n    this.applyColor();\n    this.drawBorder();\n    this._drawShape();\n\n    this.invalid = false;\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/shapes/Shape.js\n// module id = 1\n// module chunks = 0","var resizeScaling = require('../utils/resizeScaling');\nvar mixin = require('../utils/mixin');\n\n/**\n * Base for all UI controls.\n *\n * Based on pixi-DisplayContainer that supports adding children, so all\n * controls are container.\n * @class Control\n * @extends PIXI.Container\n * @memberof GOWN\n * @constructor\n */\nfunction Control() {\n    PIXI.Container.call(this);\n    this.enabled = this.enabled !== false;\n    // assume all controls are interactive\n    this.interactive = true;\n\n    this.initResizeScaling();\n}\n\nControl.prototype = Object.create( PIXI.Container.prototype );\nControl.prototype.constructor = Control;\nmodule.exports = Control;\n\n/**\n * Change the theme (every control can have a theme, even if it does not\n * inherit Skinable, e.g. if there is only some color in the skin that will\n * be taken or if it has some skinable components as children)\n *\n * @param theme the new theme {GOWN.Theme}\n */\nControl.prototype.setTheme = function(theme) {\n    if (theme === this.theme && theme) {\n        return;\n    }\n\n    this.theme = theme;\n    this.invalidSkin = true;\n};\n\n/**\n * @private\n */\nControl.prototype.updateTransformContainer = PIXI.Container.prototype.updateTransform;\n\n/**\n * PIXI method to update the object transform for rendering\n * Used to call redraw() before rendering\n *\n * @private\n */\nControl.prototype.updateTransform = function() {\n    if (!this.parent) {\n        return;\n    }\n    if (this.redraw) {\n        this.redraw();\n    }\n    this.updateTransformContainer();\n};\n\n/**\n * Get the local mouse position from PIXI.InteractionData\n *\n * @returns {PIXI.Point}\n */\nControl.prototype.mousePos = function(e) {\n    return e.data.getLocalPosition(this);\n};\n\n/**\n * Enables/Disables the control.\n * (not implemented yet)\n *\n * @name GOWN.Control#enabled\n * @type Boolean\n */\nObject.defineProperty(Control.prototype, 'enabled', {\n    get: function() {\n        return this._enabled;\n    },\n    set: function(value) {\n        this._enabled = value;\n    }\n});\n\nmixin(Control.prototype, resizeScaling);\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/core/Control.js\n// module id = 2\n// module chunks = 0","'use strict';\n\nvar has = Object.prototype.hasOwnProperty\n  , prefix = '~';\n\n/**\n * Constructor to create a storage for our `EE` objects.\n * An `Events` instance is a plain object whose properties are event names.\n *\n * @constructor\n * @api private\n */\nfunction Events() {}\n\n//\n// We try to not inherit from `Object.prototype`. In some engines creating an\n// instance in this way is faster than calling `Object.create(null)` directly.\n// If `Object.create(null)` is not supported we prefix the event names with a\n// character to make sure that the built-in object properties are not\n// overridden or used as an attack vector.\n//\nif (Object.create) {\n  Events.prototype = Object.create(null);\n\n  //\n  // This hack is needed because the `__proto__` property is still inherited in\n  // some old browsers like Android 4, iPhone 5.1, Opera 11 and Safari 5.\n  //\n  if (!new Events().__proto__) prefix = false;\n}\n\n/**\n * Representation of a single event listener.\n *\n * @param {Function} fn The listener function.\n * @param {Mixed} context The context to invoke the listener with.\n * @param {Boolean} [once=false] Specify if the listener is a one-time listener.\n * @constructor\n * @api private\n */\nfunction EE(fn, context, once) {\n  this.fn = fn;\n  this.context = context;\n  this.once = once || false;\n}\n\n/**\n * Minimal `EventEmitter` interface that is molded against the Node.js\n * `EventEmitter` interface.\n *\n * @constructor\n * @api public\n */\nfunction EventEmitter() {\n  this._events = new Events();\n  this._eventsCount = 0;\n}\n\n/**\n * Return an array listing the events for which the emitter has registered\n * listeners.\n *\n * @returns {Array}\n * @api public\n */\nEventEmitter.prototype.eventNames = function eventNames() {\n  var names = []\n    , events\n    , name;\n\n  if (this._eventsCount === 0) return names;\n\n  for (name in (events = this._events)) {\n    if (has.call(events, name)) names.push(prefix ? name.slice(1) : name);\n  }\n\n  if (Object.getOwnPropertySymbols) {\n    return names.concat(Object.getOwnPropertySymbols(events));\n  }\n\n  return names;\n};\n\n/**\n * Return the listeners registered for a given event.\n *\n * @param {String|Symbol} event The event name.\n * @param {Boolean} exists Only check if there are listeners.\n * @returns {Array|Boolean}\n * @api public\n */\nEventEmitter.prototype.listeners = function listeners(event, exists) {\n  var evt = prefix ? prefix + event : event\n    , available = this._events[evt];\n\n  if (exists) return !!available;\n  if (!available) return [];\n  if (available.fn) return [available.fn];\n\n  for (var i = 0, l = available.length, ee = new Array(l); i < l; i++) {\n    ee[i] = available[i].fn;\n  }\n\n  return ee;\n};\n\n/**\n * Calls each of the listeners registered for a given event.\n *\n * @param {String|Symbol} event The event name.\n * @returns {Boolean} `true` if the event had listeners, else `false`.\n * @api public\n */\nEventEmitter.prototype.emit = function emit(event, a1, a2, a3, a4, a5) {\n  var evt = prefix ? prefix + event : event;\n\n  if (!this._events[evt]) return false;\n\n  var listeners = this._events[evt]\n    , len = arguments.length\n    , args\n    , i;\n\n  if (listeners.fn) {\n    if (listeners.once) this.removeListener(event, listeners.fn, undefined, true);\n\n    switch (len) {\n      case 1: return listeners.fn.call(listeners.context), true;\n      case 2: return listeners.fn.call(listeners.context, a1), true;\n      case 3: return listeners.fn.call(listeners.context, a1, a2), true;\n      case 4: return listeners.fn.call(listeners.context, a1, a2, a3), true;\n      case 5: return listeners.fn.call(listeners.context, a1, a2, a3, a4), true;\n      case 6: return listeners.fn.call(listeners.context, a1, a2, a3, a4, a5), true;\n    }\n\n    for (i = 1, args = new Array(len -1); i < len; i++) {\n      args[i - 1] = arguments[i];\n    }\n\n    listeners.fn.apply(listeners.context, args);\n  } else {\n    var length = listeners.length\n      , j;\n\n    for (i = 0; i < length; i++) {\n      if (listeners[i].once) this.removeListener(event, listeners[i].fn, undefined, true);\n\n      switch (len) {\n        case 1: listeners[i].fn.call(listeners[i].context); break;\n        case 2: listeners[i].fn.call(listeners[i].context, a1); break;\n        case 3: listeners[i].fn.call(listeners[i].context, a1, a2); break;\n        case 4: listeners[i].fn.call(listeners[i].context, a1, a2, a3); break;\n        default:\n          if (!args) for (j = 1, args = new Array(len -1); j < len; j++) {\n            args[j - 1] = arguments[j];\n          }\n\n          listeners[i].fn.apply(listeners[i].context, args);\n      }\n    }\n  }\n\n  return true;\n};\n\n/**\n * Add a listener for a given event.\n *\n * @param {String|Symbol} event The event name.\n * @param {Function} fn The listener function.\n * @param {Mixed} [context=this] The context to invoke the listener with.\n * @returns {EventEmitter} `this`.\n * @api public\n */\nEventEmitter.prototype.on = function on(event, fn, context) {\n  var listener = new EE(fn, context || this)\n    , evt = prefix ? prefix + event : event;\n\n  if (!this._events[evt]) this._events[evt] = listener, this._eventsCount++;\n  else if (!this._events[evt].fn) this._events[evt].push(listener);\n  else this._events[evt] = [this._events[evt], listener];\n\n  return this;\n};\n\n/**\n * Add a one-time listener for a given event.\n *\n * @param {String|Symbol} event The event name.\n * @param {Function} fn The listener function.\n * @param {Mixed} [context=this] The context to invoke the listener with.\n * @returns {EventEmitter} `this`.\n * @api public\n */\nEventEmitter.prototype.once = function once(event, fn, context) {\n  var listener = new EE(fn, context || this, true)\n    , evt = prefix ? prefix + event : event;\n\n  if (!this._events[evt]) this._events[evt] = listener, this._eventsCount++;\n  else if (!this._events[evt].fn) this._events[evt].push(listener);\n  else this._events[evt] = [this._events[evt], listener];\n\n  return this;\n};\n\n/**\n * Remove the listeners of a given event.\n *\n * @param {String|Symbol} event The event name.\n * @param {Function} fn Only remove the listeners that match this function.\n * @param {Mixed} context Only remove the listeners that have this context.\n * @param {Boolean} once Only remove one-time listeners.\n * @returns {EventEmitter} `this`.\n * @api public\n */\nEventEmitter.prototype.removeListener = function removeListener(event, fn, context, once) {\n  var evt = prefix ? prefix + event : event;\n\n  if (!this._events[evt]) return this;\n  if (!fn) {\n    if (--this._eventsCount === 0) this._events = new Events();\n    else delete this._events[evt];\n    return this;\n  }\n\n  var listeners = this._events[evt];\n\n  if (listeners.fn) {\n    if (\n         listeners.fn === fn\n      && (!once || listeners.once)\n      && (!context || listeners.context === context)\n    ) {\n      if (--this._eventsCount === 0) this._events = new Events();\n      else delete this._events[evt];\n    }\n  } else {\n    for (var i = 0, events = [], length = listeners.length; i < length; i++) {\n      if (\n           listeners[i].fn !== fn\n        || (once && !listeners[i].once)\n        || (context && listeners[i].context !== context)\n      ) {\n        events.push(listeners[i]);\n      }\n    }\n\n    //\n    // Reset the array, or remove it completely if we have no more listeners.\n    //\n    if (events.length) this._events[evt] = events.length === 1 ? events[0] : events;\n    else if (--this._eventsCount === 0) this._events = new Events();\n    else delete this._events[evt];\n  }\n\n  return this;\n};\n\n/**\n * Remove all listeners, or those of the specified event.\n *\n * @param {String|Symbol} [event] The event name.\n * @returns {EventEmitter} `this`.\n * @api public\n */\nEventEmitter.prototype.removeAllListeners = function removeAllListeners(event) {\n  var evt;\n\n  if (event) {\n    evt = prefix ? prefix + event : event;\n    if (this._events[evt]) {\n      if (--this._eventsCount === 0) this._events = new Events();\n      else delete this._events[evt];\n    }\n  } else {\n    this._events = new Events();\n    this._eventsCount = 0;\n  }\n\n  return this;\n};\n\n//\n// Alias methods names because people roll like that.\n//\nEventEmitter.prototype.off = EventEmitter.prototype.removeListener;\nEventEmitter.prototype.addListener = EventEmitter.prototype.on;\n\n//\n// This function doesn't apply anymore.\n//\nEventEmitter.prototype.setMaxListeners = function setMaxListeners() {\n  return this;\n};\n\n//\n// Expose the prefix.\n//\nEventEmitter.prefixed = prefix;\n\n//\n// Allow `EventEmitter` to be imported as module namespace.\n//\nEventEmitter.EventEmitter = EventEmitter;\n\n//\n// Expose the module.\n//\nif ('undefined' !== typeof module) {\n  module.exports = EventEmitter;\n}\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/eventemitter3/index.js\n// module id = 3\n// module chunks = 0","var Skinable = require('../core/Skinable');\n\n/**\n * The basic Button with 3 states (up, down and hover) and a label that is\n * centered on it\n *\n * @class Button\n * @extends GOWN.Skinable\n * @memberof GOWN\n * @constructor\n * @param [theme] theme for the button {GOWN.Theme}\n * @param [skinName=Button.SKIN_NAME] name of the button skin {String}\n */\nfunction Button(theme, skinName) {\n    Skinable.call(this, theme);\n\n    /**\n     * The valid button states\n     *\n     * @private\n     * @type String[]\n     * @default Button.stateNames\n     */\n    this._validStates = this._validStates || Button.stateNames;\n\n    /**\n     * The skin name\n     *\n     * @type String\n     * @default Button.SKIN_NAME\n     */\n    this.skinName = skinName || Button.SKIN_NAME;\n\n    Button.prototype.handleEvent.call(this, Button.UP);\n\n    /**\n     * Invalidate label when the label text changed\n     * so that it will be redrawn next time\n     *\n     * @private\n     * @type bool\n     * @default true\n     */\n    this.updateLabel = true;\n\n    this.on('touchstart', this.onTouchStart, this);\n    this.on('mousedown', this.onDown, this);\n\n    this.on('mouseover', this.onHover, this);\n    this.on('touchmove', this.onTouchMove, this);\n}\n\nButton.prototype = Object.create( Skinable.prototype );\nButton.prototype.constructor = Button;\nmodule.exports = Button;\n\n/**\n * Default button skin name\n *\n * @static\n * @final\n * @type String\n */\nButton.SKIN_NAME = 'button';\n\n/**\n * Up state: mouse button is released or finger is removed from the screen\n *\n * @static\n * @final\n * @type String\n */\nButton.UP = 'up';\n\n/**\n * Down state: mouse button is pressed or finger touches the screen\n *\n * @static\n * @final\n * @type String\n */\nButton.DOWN = 'down';\n\n/**\n * Hover state: mouse pointer hovers over the button\n * (ignored on mobile)\n *\n * @static\n * @final\n * @type String\n */\nButton.HOVER = 'hover';\n\n/**\n * Out state: mouse pointer leaves the button\n * (ignored on mobile)\n *\n * @static\n * @final\n * @type String\n */\nButton.OUT = 'out';\n\n/**\n * Names of possible states for a button\n *\n * @static\n * @final\n * @type String[]\n * @private\n */\nButton.stateNames = [\n    Button.DOWN, Button.HOVER, Button.UP\n];\n\n/**\n * Dispatched when the button is triggered.\n *\n * @static\n * @final\n * @type String\n */\nButton.TRIGGERED = 'triggered';\n\n/**\n * Touchstart event: touch starts\n * Not to be used as a state\n *\n * @static\n * @final\n * @type String\n */\nButton.TOUCHSTART = 'touchstart';\n\n/**\n * Touchend event: touch ends\n * Not to be used as a state\n *\n * @static\n * @final\n * @type String\n */\nButton.TOUCHEND = 'touchend';\n\n/**\n * Initiate all skins first\n * (to prevent flickering)\n *\n * @protected\n */\nButton.prototype.preloadSkins = function() {\n    if (!this._validStates) {\n        return;\n    }\n    for (var i = 0; i < this._validStates.length; i++) {\n        var name = this._validStates[i];\n        this.fromSkin(name, this.skinLoaded);\n    }\n};\n\n/**\n * Skin has been loaded (see preloadSkins) and stored into the skinCache.\n * add to container, hide and resize\n *\n * @param skin the loaded skin\n * @protected\n */\nButton.prototype.skinLoaded = function(skin) {\n    this.addChildAt(skin, 0);\n    skin.alpha = 0.0;\n    if (this.width) {\n        skin.width = this.width;\n    } else if (skin.minWidth) {\n        this.width = skin.width = skin.minWidth;\n    }\n    if (this.height) {\n        skin.height = this.height;\n    } else if (skin.minHeight) {\n        this.height = skin.height = skin.minHeight;\n    }\n};\n\n/**\n * onDown callback\n *\n * @protected\n */\nButton.prototype.onDown = function() {\n    this.handleEvent(Button.DOWN);\n    this.on('mouseupoutside', this.onUp, this);\n    this.on('mouseup', this.onUp, this);\n\n    this.on('mouseout', this.onOut, this);\n};\n\n/**\n * onUp callback\n *\n * @protected\n */\nButton.prototype.onUp = function() {\n    this.handleEvent(Button.UP);\n\n    this.off('mouseupoutside', this.onUp, this);\n    this.off('mouseup', this.onUp, this);\n};\n\n/**\n * onHover callback\n *\n * @protected\n */\nButton.prototype.onHover = function() {\n    this.handleEvent(Button.HOVER);\n\n    this.on('mouseout', this.onOut, this);\n};\n\n/**\n * onOut callback\n *\n * @protected\n */\nButton.prototype.onOut = function() {\n    this.handleEvent(Button.OUT);\n    this.off('mouseout', this.onOut, this);\n};\n\n/**\n * onTouchStart callback\n *\n * @protected\n */\nButton.prototype.onTouchStart = function() {\n    this.handleEvent(Button.TOUCHSTART);\n    this.on('touchend', this.onTouchEnd, this);\n    this.on('touchendoutside', this.onTouchEndOutside, this);\n};\n\n/**\n * onTouchEnd callback\n *\n * @protected\n */\nButton.prototype.onTouchEnd = function() {\n    this.handleEvent(Button.TOUCHEND);\n\n    this.off('touchend', this.onTouchEnd, this);\n    this.off('touchendoutside', this.onTouchEndOutside, this);\n};\n\n/**\n * onTouchEndOutside callback\n *\n * @protected\n */\nButton.prototype.onTouchEndOutside = function(){\n    // we are definitely not over the element anymore\n    this._pressed = false;\n\n    this.onTouchEnd();\n};\n\n/**\n * onTouchMove callback\n *\n * @protected\n */\nButton.prototype.onTouchMove = function(eventData) {\n    // please note that if the user takes his finger from the screen when\n    // he is over the button, the button skin for \"hovered\" will be used.\n    // In a mobile UI you might not want to have any hovered skins/use the\n    // same skin for \"hover\" and \"up\".\n    if (eventData.data.target === this) {\n        this.handleEvent(Button.HOVER);\n    }\n};\n\n/**\n * Update width/height of the button\n *\n * @protected\n */\nButton.prototype.updateDimensions = function() {\n    var width = this.worldWidth;\n    var height = this.worldHeight;\n    if (this.hitArea) {\n        this.hitArea.width = width;\n        this.hitArea.height = height;\n    } else {\n        this.hitArea = new PIXI.Rectangle(0, 0, width, height);\n    }\n    for (var i = 0; i < this._validStates.length; i++) {\n        var name = this._validStates[i];\n        var skin = this.skinCache[name];\n        if (skin) {\n            skin.width = width;\n            skin.height = height;\n        }\n    }\n\n    if(this.labelText) {\n        var scaleY = height / this._height;\n        var style = this._textStyle || this.theme.textStyle;\n        style.fontSize = style.fontSize * scaleY;\n        this.labelText.style = style; // trigger setter\n        this.updateLabelDimensions();\n    }\n};\n\n/**\n * Handle one of the mouse/touch events\n *\n * @param type one of the valid states\n * @protected\n */\nButton.prototype.handleEvent = function(type) {\n    if (!this._enabled) {\n        return;\n    }\n    if (type === Button.DOWN || type === Button.TOUCHSTART) {\n        this.currentState = Button.DOWN;\n        // click / touch DOWN so the button is pressed and the pointer has to\n        // be over the Button\n        this._pressed = true;\n    } else if (type === Button.UP || type === Button.TOUCHEND) {\n        if ((type === Button.UP && this._over) || (type === Button.TOUCHEND && this._pressed)) {\n            this.emit(Button.TRIGGERED, this);\n\n            // no hover on touch\n            if(this._over && this.theme.hoverSkin) {\n                this.currentState = Button.HOVER;\n            } else {\n                this.currentState = Button.UP;\n            }\n        } else {\n            // user releases the mouse / touch outside of the button boundaries\n            this.currentState = Button.UP;\n        }\n        this._pressed = false;\n    } else if (type === Button.HOVER) {\n        this._over = true;\n        if (this._pressed) {\n            this.currentState = Button.DOWN;\n        } else if (this.theme.hoverSkin) {\n            this.currentState = Button.HOVER;\n        }\n    } else  { // type === rollout and default\n        if (this._over) {\n            this._over = false;\n        }\n        this.currentState = Button.UP;\n    }\n};\n\n/**\n * @private\n */\n// performance increase to avoid using call.. (10x faster)\nButton.prototype.redrawSkinable = Skinable.prototype.redraw;\n\n/**\n * Update before draw call (position label)\n *\n * @protected\n */\nButton.prototype.redraw = function() {\n    if (this.updateLabel) {\n        this.createLabel();\n    }\n    this.redrawSkinable();\n};\n\n/**\n * Create/update a label for this button\n *\n * @private\n */\nButton.prototype.createLabel = function() {\n    if(this.labelText) {\n        this.labelText.text = this._label;\n        this.labelText.style = this._textStyle || this.theme.textStyle.clone();\n    } else {\n        this.labelText = new PIXI.Text(\n            this._label,\n            this._textStyle || this.theme.textStyle.clone());\n        this.addChild(this.labelText);\n    }\n    this.updateLabelDimensions();\n    this.updateLabel = false;\n};\n\n/**\n * Create/update the position of the label\n *\n * @private\n */\nButton.prototype.updateLabelDimensions = function () {\n    if (this.labelText && this.labelText.text &&\n        (this.worldWidth - this.labelText.width) >= 0 &&\n        (this.worldHeight - this.labelText.height) >= 0) {\n        this.labelText.x = Math.floor((this.worldWidth - this.labelText.width) / 2);\n        this.labelText.y = Math.floor((this.worldHeight - this.labelText.height) / 2);\n    }\n};\n\n/**\n * @private\n */\nButton.prototype.skinableSetTheme = Skinable.prototype.setTheme;\n\n/**\n * Change the theme\n *\n * @param theme the new theme {GOWN.Theme}\n */\nButton.prototype.setTheme = function(theme) {\n    // this theme has other font or color settings - update the label\n    if (this.labelText) {\n        this.updateLabel = (this.updateLabel ||\n            this.labelText.font !== this.theme.labelFont ||\n            this.labelText.color !== this.theme.labelColor );\n    }\n    this.skinableSetTheme(theme);\n};\n\n/**\n * The current state\n *\n * @name GOWN.Button#currentState\n * @type String\n */\nObject.defineProperty(Button.prototype, 'currentState',{\n    get: function() {\n        return this._currentState;\n    },\n    set: function(value) {\n        if (this._currentState === value) {\n            return;\n        }\n        if (this._validStates.indexOf(value) < 0) {\n            throw new Error('Invalid state: ' + value + '.');\n        }\n        this._currentState = value;\n        // invalidate state so the next draw call will redraw the control\n        this.invalidState = true;\n    }\n});\n\n/**\n * Create/Update the label of the button.\n *\n * @name GOWN.Button#label\n * @type String\n */\nObject.defineProperty(Button.prototype, 'label', {\n    get: function() {\n        return this._label;\n    },\n    set: function(label) {\n        if(this._label === label) {\n            return;\n        }\n        this._label = label;\n        this.updateLabel = true;\n    }\n});\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/controls/Button.js\n// module id = 4\n// module chunks = 0","var Skinable = require('../core/Skinable'),\n    InputWrapper = require('../utils/InputWrapper');\n\n/**\n * InputControl used for TextInput, TextArea and everything else that\n * is capable of entering text\n *\n * roughly based on PIXI.Input InputObject by Sebastian Nette,\n * see https://github.com/SebastianNette/PIXI.Input\n *\n * @class InputControl\n * @extends GOWN.Skinable\n * @memberof GOWN\n * @constructor\n * @param [theme] theme for the input control {GOWN.Theme}\n */\nfunction InputControl(theme) {\n    Skinable.call(this, theme);\n\n    /**\n     * TODO\n     *\n     * @type bool\n     * @default true\n     */\n    this.receiveKeys = true;\n\n    /**\n     * Prevent other interaction (touch/move) on this component\n     *\n     * @type bool\n     * @default false\n     */\n    this.autoPreventInteraction = false;\n\n    /**\n     * Current position of the cursor in the text\n     *\n     * @type Number\n     * @default 0\n     * @private\n     */\n    this.cursorPos = 0;\n\n    /**\n     * Character position of selected area in the text (start and end)\n     *\n     * @type Number[]\n     * @default [0, 0]\n     * @private\n     */\n    this.selection = [0, 0];\n\n    /**\n     * Character position that marks the beginning of the current selection\n     *\n     * @type Number\n     * @default 0\n     * @private\n     */\n    this.selectionStart = 0;\n\n    /**\n     * Text offset\n     *\n     * @type PIXI.Point\n     * @default new PIXI.Point(5, 4)\n     * @private\n     */\n    this.textOffset = new PIXI.Point(5, 4);\n\n    this.text = this.text || '';\n\n    // create DOM Input (if we need one)\n    InputWrapper.createInput();\n\n    /**\n     * Determine if the input has the focus\n     *\n     * @type bool\n     * @default false\n     * @private\n     */\n    this._hasFocus = false;\n\n    /**\n     * Indicates if the mouse button is being pressed\n     *\n     * @type bool\n     * @default false\n     * @private\n     */\n    this._mouseDown = false;\n\n    /**\n     * The current state\n     *\n     * @type String\n     * @default InputControl.UP\n     * @private\n     */\n    this._currentState = InputControl.UP;\n\n    /**\n     * Timer used to indicate if the cursor is shown\n     *\n     * @type Number\n     * @default 0\n     * @private\n     */\n    this._cursorTimer = 0;\n\n    /**\n     * Indicates if the cursor position has changed\n     *\n     * @type bool\n     * @default true\n     * @private\n     */\n    this._cursorNeedsUpdate = true;\n\n    /**\n     * Interval for the cursor (in milliseconds)\n     *\n     * @type Number\n     * @default 500\n     */\n    this.blinkInterval = 500;\n\n    /**\n     * Caret/selection sprite\n     *\n     * @type PIXI.Text\n     * @default new PIXI.Text('|', this.cursorStyle)\n     * @private\n     */\n    this.cursor = new PIXI.Text('|', this.cursorStyle);\n    if (this.pixiText) {\n        this.cursor.y = this.pixiText.y;\n    }\n    this.addChild(this.cursor);\n\n    /**\n     * Text selection background\n     *\n     * @type PIXI.Graphics\n     */\n    this.selectionBg = new PIXI.Graphics();\n    this.addChildAt(this.selectionBg, 0);\n\n    // TODO: remove events on destroy\n    // setup events\n    this.on('touchstart', this.onDown, this);\n    this.on('mousedown', this.onDown, this);\n\n    // this.on('keydown', this.onKeyDown, this);\n    // this.on('keyup', this.onKeyUp, this);\n}\n\nInputControl.prototype = Object.create( Skinable.prototype );\nInputControl.prototype.constructor = InputControl;\nmodule.exports = InputControl;\n\n/**\n * Up state: mouse button is released or finger is removed from the screen\n *\n * @static\n * @final\n * @type String\n */\nInputControl.UP = 'up';\n\n/**\n * Down state: mouse button is pressed or finger touches the screen\n *\n * @static\n * @final\n * @type String\n */\nInputControl.DOWN = 'down';\n\n/**\n * Hover state: mouse pointer hovers over the button\n * (ignored on mobile)\n *\n * @static\n * @final\n * @type String\n */\nInputControl.HOVER = 'hover';\n\n/**\n * Hover state: mouse pointer hovers over the button\n * (ignored on mobile)\n *\n * @static\n * @final\n * @type String\n */\nInputControl.OUT = 'out';\n\n/**\n * Names of possible states for an input control\n *\n * @static\n * @final\n * @type String[]\n * @private\n */\nInputControl.stateNames = [\n    InputControl.DOWN, InputControl.HOVER, InputControl.UP\n];\n\n/**\n * Currently selected input control (used for tab index)\n *\n * @static\n * @type GOWN.InputControl\n */\nInputControl.currentInput = null;\n\n/**\n * Input changed callback\n *\n * @protected\n */\nInputControl.prototype.onInputChanged = function () {\n    if (!this.hasFocus) {\n        return;\n    }\n\n    var text = InputWrapper.getText();\n\n    //overrides the current text with the user input from the InputWrapper\n    if(text !== this.text) {\n        this.text = text;\n    }\n\n    var sel = InputWrapper.getSelection();\n    if (this.updateSelection(sel[0], sel[1])) {\n        this.cursorPos = sel[0];\n    }\n    this.setCursorPos();\n};\n\n/**\n * Move the cursor left\n */\nInputControl.prototype.moveCursorLeft = function() {\n    this.cursorPos = Math.max(this.cursorPos-1, 0);\n    this._cursorNeedsUpdate = true;\n};\n\n/**\n * Move the cursor right\n */\nInputControl.prototype.moveCursorRight = function() {\n    this.cursorPos = Math.min(this.cursorPos+1, this.text.length);\n    this._cursorNeedsUpdate = true;\n};\n\n/**\n * Insert a char at the current cursor position\n *\n * @param char The char that gets inserted {String}\n */\nInputControl.prototype.insertChar = function(char) {\n    if (this.maxChars > 0 && this.pixiText.text >= this.maxChars) {\n        this.pixiText.text = this.pixiText.text.substring(0, this.maxChars);\n        return;\n    }\n    this.text = [this.value.slice(0, this.cursorPos), char, this.value.slice(this.cursorPos)].join('');\n    this.moveCursorRight();\n    this.emit('change', this);\n};\n\n/**\n * Delete the selected text\n */\nInputControl.prototype.deleteSelection = function() {\n    var start = this.selection[0];\n    var end = this.selection[1];\n    if (start < end) {\n        this.cursorPos = start;\n        return this.deleteText(start, end);\n    } else if (start > end) {\n        this.cursorPos = end;\n        return this.deleteText(end, start);\n    }\n    throw new Error('can not delete text! (start & end are the same)');\n};\n\n/**\n * Delete text from a start position to an end position\n *\n * @param fromPos start position {Number}\n * @param toPos end position {Number}\n * @returns {String}\n */\nInputControl.prototype.deleteText = function(fromPos, toPos) {\n    this.text = [this.text.slice(0, fromPos), this.text.slice(toPos)].join('');\n    InputWrapper.setText(this.value);\n    // InputWrapper.setCursorPos(this.cursorPos);\n    this.emit('change', this);\n    return this.text;\n};\n\n/**\n * @private\n */\nInputControl.prototype.skinableSetTheme = Skinable.prototype.setTheme;\n\n/**\n * Change the theme\n *\n * @param theme the new theme {GOWN.Theme}\n */\nInputControl.prototype.setTheme = function(theme) {\n    if (theme === this.theme || !theme) {\n        return;\n    }\n    this.skinableSetTheme(theme);\n    // copy text so we can force wordwrap\n    this.style = theme.textStyle;\n};\n\n/**\n * Set the input control text.\n *\n * @param text The text to set {String}\n */\nInputControl.prototype.setText = function(text) {\n    this._displayText = text || '';\n    if (!this.pixiText) {\n        this.pixiText = new PIXI.Text(text, this.textStyle);\n        this.pixiText.position = this.textOffset;\n        this.addChild(this.pixiText);\n    } else {\n        this.pixiText.text = text;\n    }\n};\n\n/**\n * Set the selected text\n *\n * @param start Start position in the text {Number}\n * @param end End position in the text {Number}\n * @returns {boolean}\n */\nInputControl.prototype.updateSelection = function (start, end) {\n    if (this.selection[0] !== start || this.selection[1] !== end) {\n        this.selection[0] = start;\n        this.selection[1] = end;\n        this._selectionNeedsUpdate = true;\n        InputWrapper.setSelection(this.selection[0], this.selection[1]);\n        return true;\n    }\n    return false;\n};\n\n/**\n * Get the width of a text\n *\n * @param text The text to get the width from {String}\n * @returns {Number}\n */\nInputControl.prototype.textWidth = function(text) {\n    // TODO: support BitmapText for PIXI v3+\n    var ctx = this.pixiText.context;\n    return ctx.measureText(text || '').width;\n};\n\n/**\n * Focus on this input and set it as current\n */\nInputControl.prototype.focus = function () {\n    // is already current input\n    if (GOWN.InputControl.currentInput === this) {\n        return;\n    }\n\n    // drop focus\n    if (GOWN.InputControl.currentInput) {\n        GOWN.InputControl.currentInput.blur();\n    }\n\n    // set focus\n    GOWN.InputControl.currentInput = this;\n    this.hasFocus = true;\n\n    // check custom focus event\n    this.onfocus();\n\n    this.emit('focusIn', this);\n\n    InputWrapper.focus();\n\n    /*\n     //TODO: disable/ is read only\n     if(this.readonly) {\n        return;\n     }\n     */\n};\n\n/**\n * Blurs the input when the mouse is released outside\n *\n * @protected\n */\nInputControl.prototype.onMouseUpOutside = function() {\n    if (this.hasFocus && !this._mouseDown) {\n        this.blur();\n    }\n};\n\n/**\n * Callback to execute code on focus\n *\n * @protected\n */\nInputControl.prototype.onfocus = function () {\n};\n\n/**\n * Blur the text input (remove focus)\n */\nInputControl.prototype.blur = function() {\n    if (GOWN.InputControl.currentInput === this) {\n        GOWN.InputControl.currentInput = null;\n        this.hasFocus = false;\n\n        // blur hidden input\n        InputWrapper.blur();\n\n        this.onblur();\n    }\n};\n\n/**\n * Set the cursor position on the text\n */\nInputControl.prototype.setCursorPos = function () {\n    this.textToPixelPos(this.cursorPos, this.cursor.position);\n    this.cursor.position.x += this.pixiText.x;\n    this.cursor.position.y += this.pixiText.y;\n};\n\n/**\n * Height of the line in pixel\n * (assume that every character of pixi text has the same line height)\n *\n * @returns {Number}\n */\nInputControl.prototype.lineHeight = function() {\n    var style = this.pixiText._style;\n    var lineHeight = style.lineHeight || style.fontSize + style.strokeThickness;\n    return lineHeight;\n};\n\n/**\n * Draw the cursor\n *\n * @private\n */\nInputControl.prototype.drawCursor = function () {\n    // TODO: use Tween instead!\n    if (this.hasFocus || this._mouseDown) {\n        var time = Date.now();\n\n        // blink interval for cursor\n        if ((time - this._cursorTimer) >= this.blinkInterval) {\n            this._cursorTimer = time;\n            this.cursor.visible = !this.cursor.visible;\n        }\n\n        // update cursor position\n        if (this.cursor.visible && this._cursorNeedsUpdate) {\n            this.setCursorPos();\n            this._cursorNeedsUpdate = false;\n        }\n    } else {\n        this.cursor.visible = false;\n    }\n};\n\n/**\n * onMove callback\n *\n * @protected\n */\nInputControl.prototype.onMove = function (e) {\n    if (this.autoPreventInteraction) {\n        e.stopPropagation();\n    }\n\n    var mouse = e.data.getLocalPosition(this.pixiText);\n    if (!this.hasFocus || !this._mouseDown) { // || !this.containsPoint(mouse)) {\n        return false;\n    }\n\n    var curPos = this.pixelToTextPos(mouse),\n        start = this.selectionStart,\n        end = curPos;\n\n    if (this.updateSelection(start, end)) {\n        this.cursorPos = curPos;\n        this._cursorNeedsUpdate = true;\n    }\n    return true;\n};\n\n/**\n * onDown callback\n *\n * @protected\n */\nInputControl.prototype.onDown = function (e) {\n    if (this.autoPreventInteraction) {\n        e.stopPropagation();\n    }\n\n    var mouse = e.data.getLocalPosition(this.pixiText);\n    var originalEvent = e.data.originalEvent;\n    if (originalEvent.which === 2 || originalEvent.which === 3) {\n        originalEvent.preventDefault();\n        return false;\n    }\n\n    // focus input\n    this.focus();\n\n    this._mouseDown = true;\n\n    // start the selection drag if inside the input\n    this.selectionStart = this.pixelToTextPos(mouse);\n    this.updateSelection(this.selectionStart, this.selectionStart);\n    this.cursorPos = this.selectionStart;\n    this._cursorNeedsUpdate = true;\n\n    this.on('touchend', this.onUp, this);\n    this.on('mouseupoutside', this.onUp, this);\n    this.on('mouseup', this.onUp, this);\n\n    this.on('mousemove', this.onMove, this);\n    this.on('touchmove', this.onMove, this);\n\n    // update the hidden input\n    InputWrapper.setMaxLength(this.maxChars);\n    InputWrapper.setText(this.value);\n    InputWrapper.setCursorPos(this.cursorPos);\n\n    return true;\n};\n\n/**\n * onUp callback\n *\n * @protected\n */\nInputControl.prototype.onUp = function (e) {\n    if (this.autoPreventInteraction) {\n        e.stopPropagation();\n    }\n\n    var originalEvent = e.data.originalEvent;\n    if (originalEvent.which === 2 || originalEvent.which === 3) {\n        originalEvent.preventDefault();\n        return false;\n    }\n\n    this._mouseDown = false;\n\n    this.off('touchend', this.onUp, this);\n    this.off('mouseupoutside', this.onUp, this);\n    this.off('mouseup', this.onUp, this);\n\n    this.off('mousemove', this.onMove, this);\n    this.off('touchmove', this.onMove, this);\n\n    this.focus();\n\n    // update the hidden input cursor position and selection\n    InputWrapper.setCursorPos(this.cursorPos);\n    InputWrapper.setSelection(this.selectionStart, this.cursorPos);\n\n    this.selectionStart = -1;\n\n    return true;\n};\n\n/**\n * From position in the text to pixel position\n * (for cursor/selection positioning)\n *\n * @param textPos Current character position in the text {Number}\n * @param [position] point that will be set with the pixel position and returned {PIXI.Point}\n * @returns {PIXI.Point} Pixel position\n */\nInputControl.prototype.textToPixelPos = function(textPos, position) {\n    var lines = this.getLines();\n    var x = 0;\n    for (var y = 0; y < lines.length; y++) {\n        var lineLength = lines[y].length;\n        if (lineLength < textPos) {\n            textPos -= lineLength + 1;\n        } else {\n            var text = lines[y];\n            x = this.textWidth(text.substring(0, textPos));\n            break;\n        }\n    }\n\n    if (!position) {\n        position = new PIXI.Point(x, y * this.lineHeight());\n    } else {\n        position.x = x;\n        position.y = y * this.lineHeight();\n    }\n    return position;\n};\n\n/**\n * From pixel position on the text to character position inside the text\n * (used when clicked on the text)\n *\n * @param pixelPos Pixel position of the mouse on the text\n * @returns {Number} Position in the text\n */\nInputControl.prototype.pixelToTextPos = function(pixelPos) {\n    var textPos = 0;\n    var lines = this.getLines();\n    // calculate current line we are in\n    var currentLine = Math.min(\n        Math.max(\n            parseInt(pixelPos.y / this.lineHeight()),\n            0),\n        lines.length - 1);\n    // sum all characters of previous lines\n    for (var i = 0; i < currentLine; i++) {\n        textPos += lines[i].length + 1;\n    }\n\n    var displayText = lines[currentLine];\n    var totalWidth = 0;\n    if (pixelPos.x < this.textWidth(displayText)) {\n        // loop through each character to identify the position\n        for (i = 0; i < displayText.length; i++) {\n            totalWidth += this.textWidth(displayText[i]);\n            if (totalWidth >= pixelPos.x) {\n                textPos += i;\n                break;\n            }\n        }\n    } else {\n        textPos += displayText.length;\n    }\n    return textPos;\n};\n\n/**\n * Callback that will be executed once the text input is blurred\n *\n * @protected\n */\nInputControl.prototype.onblur = function() {\n    this.updateSelection(0, 0);\n    this.emit('focusOut', this);\n};\n\n/**\n * @private\n */\n// performance increase to avoid using call.. (10x faster)\nInputControl.prototype.redrawSkinable = Skinable.prototype.redraw;\n\n/**\n * Update before draw call (draw cursor and selection)\n *\n * @protected\n */\nInputControl.prototype.redraw = function () {\n    if (this.drawCursor) {\n        this.drawCursor();\n    }\n    if (this._selectionNeedsUpdate) {\n        this.updateSelectionBg();\n    }\n    this.redrawSkinable();\n};\n\n/**\n * Set the text that is shown inside the input field.\n * Calls onTextChange callback if text changes.\n *\n * @name GOWN.InputControl#text\n * @type String\n * @default ''\n */\nObject.defineProperty(InputControl.prototype, 'text', {\n    get: function () {\n        if (this.pixiText) {\n            return this.pixiText.text;\n        }\n        return this._origText;\n    },\n    set: function (text) {\n        text += ''; // add '' to assure text is parsed as string\n\n        if (this.maxChars > 0 && text.length > this.maxChars) {\n            //reset hidden input to previous state\n            InputWrapper.setText(this._origText);\n            InputWrapper.setSelection(this.selection[0], this.selection[1]);\n            return;\n        }\n\n        if (this._origText === text) {\n            // return if text has not changed\n            return;\n        }\n        this._origText = text;\n        this.setText(text);\n\n        // reposition cursor\n        this._cursorNeedsUpdate = true;\n    }\n});\n\n/**\n * The maximum number of characters that may be entered. If 0,\n * any number of characters may be entered.\n * (same as maxLength for DOM inputs)\n *\n * @name GOWN.InputControl#maxChars\n * @type String\n * @default 0\n */\nObject.defineProperty(InputControl.prototype, 'maxChars', {\n    get: function () {\n        return this._maxChars;\n    },\n    set: function (value) {\n        if (this._maxChars === value) {\n            return;\n        }\n        if (this.pixiText.text > value) {\n            this.pixiText.text = this.pixiText.text.substring(0, value);\n            if (this.cursorPos > value) {\n                this.cursorPos = value;\n                this._cursorNeedsUpdate = true;\n            }\n            this.updateSelection(\n                Math.max(this.selection[0], value),\n                Math.max(this.selection[1], value)\n            );\n        }\n        this._maxChars = value;\n        InputWrapper.setMaxLength(value);\n\n    }\n});\n\nObject.defineProperty(InputControl.prototype, 'value', {\n    get: function() {\n        return this._origText;\n    }\n});\n\n/**\n * Determine if the input has the focus\n *\n * @name GOWN.InputControl#hasFocus\n * @type bool\n * @default false\n */\nObject.defineProperty(InputControl.prototype, 'hasFocus', {\n    get: function() {\n        return this._hasFocus;\n    },\n    set: function(focus) {\n        this._hasFocus = focus;\n    }\n});\n\n/**\n * Set the text style (size, font etc.) for text and cursor\n *\n * @name GOWN.InputControl#style\n * @type PIXI.TextStyle\n */\nObject.defineProperty(InputControl.prototype, 'style', {\n    get: function() {\n        return this.textStyle;\n    },\n    set: function(style) {\n        this.cursorStyle = style;\n        if (this.cursor) {\n            this.cursor.style = style;\n        }\n        this.textStyle = style;\n        if (this.pixiText) {\n            this.pixiText.style = style;\n            this._cursorNeedsUpdate = true;\n        }\n        this._cursorNeedsUpdate = true;\n    }\n});\n\n/**\n * The current state\n * TODO: move to skinable?\n *\n * @name GOWN.InputControl#currentState\n * @type String\n * @default InputControl.UP\n */\nObject.defineProperty(InputControl.prototype, 'currentState',{\n    get: function() {\n        return this._currentState;\n    },\n    set: function(value) {\n        if (this._currentState === value) {\n            return;\n        }\n        if (this._validStates.indexOf(value) < 0) {\n            throw new Error('Invalid state: ' + value + '.');\n        }\n        this._currentState = value;\n        // invalidate state so the next draw call will redraw the control\n        this.invalidState = true;\n    }\n});\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/controls/InputControl.js\n// module id = 5\n// module chunks = 0","var Skinable = require('../core/Skinable'),\n    ScrollThumb = require('./ScrollThumb'),\n    SliderData = require('../utils/SliderData');\n\n/**\n * A scrollabe control provides a thumb that can be be moved along a fixed track.\n * This is the common ground for ScrollBar and Slider\n *\n * @class Scrollable\n * @extends GOWN.Skinable\n * @memberof GOWN\n * @constructor\n * @param [theme] theme for the radio button {GOWN.Theme}\n */\n// TODO: remove setting value (value manipulation is for Slider only)\nfunction Scrollable(theme) {\n    /**\n     * The scrollable mode\n     *\n     * @type String\n     * @default Scrollable.DESKTOP_MODE\n     */\n    this.mode = this.mode || Scrollable.DESKTOP_MODE;\n\n    Skinable.call(this, theme);\n\n    /**\n     * The scrollable direction\n     *\n     * @type String\n     * @default Scrollable.HORIZONTAL\n     */\n    this.direction = this.direction || Scrollable.HORIZONTAL;\n\n    /**\n     * Invalidate track so that it will be redrawn next time\n     *\n     * @private\n     * @type bool\n     * @default true\n     */\n    this.invalidTrack = true;\n\n    /**\n     * Inverse the progress bar\n     *\n     * @private\n     * @type bool\n     * @default false\n     */\n    this._inverse = false;\n\n    /**\n     * Point where the mouse hit the scrollable\n     *\n     * @private\n     * @type Number[]\n     * @default null\n     */\n    this._start = null;\n\n    /**\n     * The minimum\n     *\n     * @private\n     * @type Number\n     * @default 0\n     */\n    this._minimum = this._minimum || 0;\n\n    /**\n     * The maximum\n     *\n     * @private\n     * @type Number\n     * @default 100\n     */\n    this._maximum = this._maximum || 100;\n\n    /**\n     * Step size (not implemented yet)\n     *\n     * @private\n     * @type Number\n     * @default 1\n     */\n    this.step = this.step || 1; //TODO: implement me!\n\n    /**\n     * Pagination jump (not implemented yet)\n     *\n     * @private\n     * @type Number\n     * @default 10\n     */\n    this.page = this.page || 10; //TODO: implement me!\n\n    /**\n     * Value\n     *\n     * @private\n     * @type Number\n     * @default 0\n     */\n    this._value = this.minimum;\n\n    /**\n     * Number of pixels you scroll at a time (if the event delta is 1 / -1)\n     *\n     * @type Number\n     * @default 10\n     */\n    this.scrolldelta = 10;\n\n    this.on('touchstart', this.handleDown, this);\n    this.on('mousedown', this.handleDown, this);\n\n    this.on('touchend', this.handleUp, this);\n    this.on('touchendoutside', this.handleUp, this);\n    this.on('mouseupoutside', this.handleUp, this);\n    this.on('mouseup', this.handleUp, this);\n\n    /**\n     * Invalidate thumb factory so that it will be redrawn next time\n     *\n     * @private\n     * @type bool\n     * @default true\n     */\n    this.thumbFactoryInvalid = true;\n}\n\nScrollable.prototype = Object.create( Skinable.prototype );\nScrollable.prototype.constructor = Scrollable;\nmodule.exports = Scrollable;\n\n/**\n * In desktop mode mouse wheel support is added (default)\n *\n * @static\n * @final\n * @type String\n */\nScrollable.DESKTOP_MODE = 'desktop';\n\n/**\n * In mobile mode mouse wheel support is disabled\n *\n * @static\n * @final\n * @type String\n */\nScrollable.MOBILE_MODE = 'mobile';\n\n/**\n * Show horizontal scrollbar/slider\n *\n * @static\n * @final\n * @type String\n */\nScrollable.HORIZONTAL = 'horizontal';\n\n/**\n * Show vertical scrollbar/slider\n *\n * @static\n * @final\n * @type String\n */\nScrollable.VERTICAL = 'vertical';\n\n/**\n * Create the thumb\n *\n * @private\n */\nScrollable.prototype.createThumb = function() {\n    this._thumbFactory = this._thumbFactory || this.defaultThumbFactory;\n    this.thumb = this._thumbFactory();\n    this.addChild(this.thumb);\n    this.positionThumb(this.value);\n};\n\n/**\n * A function that is expected to return a new GOWN.ScrollThumb\n *\n * @returns {ScrollThumb}\n * @private\n */\nScrollable.prototype.defaultThumbFactory = function() {\n    return new ScrollThumb(this, this.theme);\n};\n\n/**\n * Scroll to a specific position (not implemented yet)\n */\nScrollable.prototype.scrollToPosition = function() {\n};\n\n/**\n * Handle mouse down/touch start.\n * Move scroll thumb.\n *\n * @param mouseData mouse data provided by PIXI\n * @protected\n */\nScrollable.prototype.handleDown = function(mouseData) {\n    var local = mouseData.data.getLocalPosition(this);\n    var center = {\n        x: local.x - this.thumb.width / 2,\n        y: local.y - this.thumb.height / 2\n    };\n    if (mouseData.target === this &&\n        this.moveThumb(center.x, center.y)) {\n        this._start = [local.x, local.y];\n        this.thumbMoved(center.x, center.y);\n    }\n};\n\n/**\n * @private\n */\nScrollable.prototype.decrement = function() {\n  this.value -= this._step;\n};\n\n/**\n * @private\n */\nScrollable.prototype.increment = function() {\n  this.value += this._step;\n};\n\n/**\n * Handle mouse up/touch end\n *\n * @protected\n */\nScrollable.prototype.handleUp = function() {\n    this._start = null;\n};\n\n/**\n * Handle mouse move. Moves the thumb.\n *\n * @param mouseData mouse data provided by PIXI\n * @protected\n */\nScrollable.prototype.handleMove = function(mouseData) {\n    if (this._start) {\n        var local = mouseData.data.getLocalPosition(this);\n        var x = this.thumb.x + local.x - this._start[0];\n        var y = this.thumb.y + local.y - this._start[1];\n        if (this.moveThumb(x, y)) {\n            // do not override localX/localY in start\n            // if we do not move the thumb\n            this.thumbMoved(x, y);\n            this._start[0] = local.x;\n            this._start[1] = local.y;\n        }\n    }\n};\n\n/**\n * Handle mouse wheel. Moves thumb on track.\n *\n * @param event mouse wheel event from browser\n * @protected\n */\nScrollable.prototype.handleWheel = function (event) {\n    var x = this.thumb.x - event.delta * this.scrolldelta;\n    var y = this.thumb.y - event.delta * this.scrolldelta;\n    if (this.moveThumb(x, y)) {\n        this.thumbMoved(x, y);\n    }\n};\n\n/**\n * Thumb has new x/y position\n *\n * @param x x-position that has been scrolled to (ignored when vertical) {Number}\n * @param y y-position that has been scrolled to (ignored when horizontal) {Number}\n */\nScrollable.prototype.thumbMoved = function(x, y) {\n    var pos = this.direction === Scrollable.HORIZONTAL ? x : y;\n    this.value = this.pixelToValue(pos);\n};\n\n/**\n * Show the progress skin from the start/end of the scroll track to the current\n * position of the thumb.\n *\n * @private\n */\nScrollable.prototype._updateProgressSkin = function() {\n    if (!this.progressSkin) {\n        return;\n    }\n    if(this.direction === Scrollable.HORIZONTAL) {\n        var progressPosX = this.thumb.x + this.thumb.width / 2;\n        if (this.inverse) {\n            this.progressSkin.x = progressPosX;\n            this.progressSkin.width = this.width - progressPosX;\n            this.progressSkin.height = this.skin.height;\n        } else {\n            this.progressSkin.x = 0;\n            this.progressSkin.width = progressPosX;\n            this.progressSkin.height = this.skin.height;\n        }\n    } else {\n        var progressPosY = this.thumb.y + this.thumb.height / 2;\n        if (this.inverse) {\n            this.progressSkin.y = progressPosY;\n            this.progressSkin.height = this.height - progressPosY;\n            this.progressSkin.width = this.skin.width;\n        } else {\n            this.progressSkin.y = 0;\n            this.progressSkin.height =progressPosY;\n            this.progressSkin.width = this.skin.width;\n        }\n    }\n};\n\n/**\n * Returns the max. width in pixel\n * (normally this.width - thumb width)\n *\n * @returns {Number}\n */\nScrollable.prototype.maxWidth = function() {\n    return this.width - this.thumb.width;\n};\n\n/**\n * Returns the max. height in pixel\n * (normally this.height - thumb height)\n *\n * @returns {Number}\n */\nScrollable.prototype.maxHeight = function() {\n    return this.height - this.thumb.height;\n};\n\n/**\n * Move the thumb on the scroll bar within its bounds\n *\n * @param x New x position of the thumb {Number}\n * @param y New y position of the thumb {Number}\n * @returns {boolean} Returns true if the position of the thumb has been\n * moved\n */\nScrollable.prototype.moveThumb = function(x, y) {\n    if (this.thumb.move(x, y)) {\n        this._updateProgressSkin();\n        return true;\n    }\n    return false;\n};\n\n/**\n * Show scroll track\n *\n * @param skin The track skin {PIXI.DisplayObject}\n * @private\n */\nScrollable.prototype.showTrack = function(skin) {\n    if (this.skin !== skin) {\n        if(this.skin) {\n            this.removeChild(this.skin);\n        }\n\n        this.addChildAt(skin, 0);\n        this.skin = skin;\n        if (this.progressSkin) {\n            this._updateProgressSkin();\n        }\n    }\n};\n\n/**\n * Show progress on track (from the start/end of the track to the\n * current position of the thumb)\n *\n * @param skin The progress skin {PIXI.DisplayObject}\n * @private\n */\nScrollable.prototype.showProgress = function(skin) {\n    if (this.progressSkin !== skin) {\n        if(this.progressSkin) {\n            this.removeChild(this.progressSkin);\n        }\n        skin.width = skin.height = 0;\n        this.addChildAt(skin, 0);\n        this.progressSkin = skin;\n        if (this.skin) {\n            this._updateProgressSkin();\n        }\n    }\n};\n\n/**\n * Update before draw call. Redraw track and progressbar and create thumb.\n *\n * @protected\n */\nScrollable.prototype.redraw = function() {\n    if (this.thumbFactoryInvalid) {\n        this.createThumb();\n        this.thumbFactoryInvalid = false;\n    }\n    if (this.invalidTrack) {\n        this.fromSkin(this.direction+'_progress', this.showProgress);\n        this.fromSkin(this.direction+'_track', this.showTrack);\n        if (this.skin) {\n            if (this.direction === Scrollable.HORIZONTAL) {\n                this.skin.width = this.width;\n            } else {\n                this.skin.height = this.height;\n            }\n            this.invalidTrack = false;\n        }\n    }\n};\n\n/**\n * Calculate value of slider based on the current pixel position of the thumb\n *\n * @param position current pixel position of the thumb {Number}\n * @returns {Number} Value between minimum and maximum\n */\nScrollable.prototype.pixelToValue = function(position) {\n    var max = 0;\n    if (this.direction === Scrollable.HORIZONTAL) {\n        max = this.maxWidth();\n    } else {\n        max = this.maxHeight();\n    }\n    if (this._inverse) {\n        position = max - position;\n    }\n    return position / max * (this.maximum - this.minimum) + this.minimum;\n};\n\n/**\n * Calculate current pixel position of thumb based on given value\n *\n * @param value The value of the thumb position {Number}\n * @returns {Number} Position of the scroll thumb in pixel\n */\nScrollable.prototype.valueToPixel = function(value) {\n    var max = 0;\n    if (this.direction === Scrollable.HORIZONTAL) {\n        max = this.maxWidth();\n    } else {\n        max = this.maxHeight();\n    }\n    var position = (value - this.minimum) / (this.maximum - this.minimum) * max;\n    if (this._inverse) {\n        position = max - position;\n    }\n    return position;\n};\n\n/**\n * Position the thumb to a given value\n *\n * @param value The value to which the thumb gets moved {Number}\n */\nScrollable.prototype.positionThumb = function(value) {\n    if (this.thumb) {\n        var pos = this.valueToPixel(value);\n        if (this.direction === Scrollable.HORIZONTAL) {\n            this.moveThumb(pos, 0);\n        } else {\n            this.moveThumb(0, pos);\n        }\n    }\n};\n\n/**\n * The width of the Scrollable, setting this will redraw the track and thumb.\n *\n * @name GOWN.Scrollable#width\n * @type Number\n */\nObject.defineProperty(Scrollable.prototype, 'width', {\n    get: function() {\n        return this._width;\n    },\n    set: function(width) {\n        this._width = width;\n        this.invalidTrack = true;\n        if (this.thumb) {\n            this.thumb.invalidTrack = true;\n        }\n    }\n});\n\n/**\n * Inverse the progress bar\n *\n * @name GOWN.Scrollable#inverse\n * @type Boolean\n */\nObject.defineProperty(Scrollable.prototype, 'inverse', {\n    get: function() {\n        return this._inverse;\n    },\n    set: function(inverse) {\n        if (inverse !== this._inverse) {\n            this._inverse = inverse;\n\n            if (this.direction === Scrollable.HORIZONTAL) {\n                this.moveThumb(this.width - this.thumb.x, 0);\n            } else {\n                this.moveThumb(0, this.height - this.thumb.y);\n            }\n\n            this.invalidTrack = true;\n            if (this.thumb) {\n                this.thumb.invalidTrack = true;\n            }\n        }\n    }\n});\n\n/**\n * The height of the Scrollable, setting this will redraw the track and thumb.\n *\n * @name GOWN.Scrollable#height\n * @type Number\n */\nObject.defineProperty(Scrollable.prototype, 'height', {\n    get: function() {\n        return this._height;\n    },\n    set: function(height) {\n        this._height = height;\n        this.invalidTrack = true;\n        if (this.thumb) {\n            this.thumb.invalidTrack = true;\n        }\n    }\n});\n\n/**\n * Set value (between minimum and maximum)\n *\n * @name GOWN.Scrollable#value\n * @type Number\n * @default 0\n */\nObject.defineProperty(Scrollable.prototype, 'value', {\n    get: function() {\n        return this._value;\n    },\n    set: function(value) {\n        if (isNaN(value)) {\n            return;\n        }\n        value = Math.min(value, this.maximum);\n        value = Math.max(value, this.minimum);\n        if (this._value === value) {\n            return;\n        }\n\n        // inform system that value has been changed\n        var sliderData = new SliderData();\n        sliderData.value = value;\n        sliderData.target = this;\n        if (this.change) {\n            this.change(sliderData);\n        }\n        this.emit('change', sliderData, this);\n\n        // move thumb\n        this.positionThumb(value);\n\n        this._value = value;\n    }\n});\n\n/**\n * Set minimum and update value if necessary\n *\n * @name GOWN.Scrollable#minimum\n * @type Number\n * @default 0\n */\nObject.defineProperty(Scrollable.prototype, 'minimum', {\n    get: function() {\n        return this._minimum;\n    },\n    set: function(minimum) {\n        if(!isNaN(minimum) && this.minimum !== minimum && minimum < this.maximum) {\n            this._minimum = minimum;\n        }\n        if (this._value < this.minimum) {\n            this.value = this._value;\n        }\n    }\n});\n\n/**\n * Set maximum and update value if necessary\n *\n * @name GOWN.Scrollable#maximum\n * @type Number\n * @default 100\n */\nObject.defineProperty(Scrollable.prototype, 'maximum', {\n    get: function() {\n        return this._maximum;\n    },\n    set: function(maximum) {\n        if(!isNaN(maximum) && this.maximum !== maximum && maximum > this.minimum) {\n            this._maximum = maximum;\n        }\n        if (this._value > this.maximum) {\n            this.value = maximum;\n        }\n    }\n});\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/controls/Scrollable.js\n// module id = 6\n// module chunks = 0","var Control = require('./Control');\n\n/**\n * Control with a managed skin\n * (e.g. a button that has different skins for up/hover/down states)\n *\n * @class Skinable\n * @extends GOWN.Control\n * @memberof GOWN\n * @constructor\n * @param [theme=GOWN.theme] theme for the skinable {GOWN.Theme}\n */\nfunction Skinable(theme) {\n    Control.call(this);\n\n    /**\n     * The skin cache\n     *\n     * @private\n     * @type Object\n     * @default {}\n     */\n    this.skinCache = {};\n\n    this.setTheme(theme || GOWN.theme);\n\n    if (this.theme === undefined) {\n        throw new Error('you need to define a theme first');\n    }\n\n    /**\n     * Invalidate state so the control will be redrawn next time\n     *\n     * @private\n     * @type bool\n     * @default true\n     */\n    this.invalidState = true; // draw for the first time\n\n    /**\n     * Overwrite skin values before next draw call.\n     *\n     * @private\n     * @type bool\n     * @default true\n     */\n    this.invalidSkinData = true;\n\n    /**\n     * Will destroy the skin cache when the skinable gets destroyed\n     *\n     * @type bool\n     * @default true\n     */\n    this.allowDestroyCache = true;\n\n    /**\n     * The fallback skin if the other skin does not exist (e.g. if a mobile theme\n     * that does not provide a \"hover\" state is used on a desktop system)\n     * (normally the default \"up\"-state skin)\n     *\n     * @type String\n     * @default 'up'\n     * @private\n     */\n    this._skinFallback = 'up';\n}\n\nSkinable.prototype = Object.create( Control.prototype );\nSkinable.prototype.constructor = Skinable;\nmodule.exports = Skinable;\n\n/**\n * @private\n */\nSkinable.prototype.controlSetTheme = Control.prototype.setTheme;\n\n/**\n * Change the theme\n *\n * @param theme the new theme {GOWN.Theme}\n */\nSkinable.prototype.setTheme = function(theme) {\n    if (theme === this.theme || !theme) {\n        return;\n    }\n\n    this.controlSetTheme(theme);\n    this.preloadSkins();\n    // force states to redraw\n    this.invalidState = true;\n};\n\n/**\n * Overwrite data from theme for this specific component.\n * (usable if you want to change e.g. background color based on selected items)\n *\n * @param data updated skin data\n */\nSkinable.prototype.updateTheme = function(data) {\n    this.skinData = data;\n    this.invalidSkinData = true;\n};\n\n/**\n * Remove old skin and add new one\n *\n * @param skin {DisplayObject}\n */\nSkinable.prototype.changeSkin = function(skin) {\n    if (this._currentSkin !== skin) {\n        this._lastSkin = this._currentSkin;\n        this.addChildAt(skin, 0);\n        skin.alpha = 1.0;\n        this._currentSkin = skin;\n\n    }\n    this.invalidState = false;\n};\n\n/**\n * Initiate all skins first\n */\nSkinable.prototype.preloadSkins = function() {\n};\n\n/**\n * Get image from skin (will execute a callback with the loaded skin\n * when it is loaded or call it directly when it already is loaded)\n *\n * @param name name of the state {String}\n * @param callback callback that is executed if the skin is loaded {function}\n */\nSkinable.prototype.fromSkin = function(name, callback) {\n    var skin;\n    if (this.skinCache[name]) {\n        skin = this.skinCache[name];\n    } else {\n        skin = this.theme.getSkin(this.skinName, name);\n        this.skinCache[name] = skin;\n    }\n    if (skin) {\n        callback.call(this, skin);\n    } else if (this.skinFallback && this.skinFallback !== name) {\n        skin = this.fromSkin(this.skinFallback, callback);\n    }\n    return skin;\n};\n\n/**\n * Empty skin cache and load skins again\n *\n * @private\n */\nSkinable.prototype.reloadSkin = function() {\n    for (var name in this.skinCache) {\n        var skin = this.skinCache[name];\n        if (skin && skin.destroy && this.allowDestroyCache) {\n            skin.destroy();\n        }\n    }\n    for (name in this.skinCache) {\n        delete this.skinCache[name];\n    }\n    this.skinCache = {};\n    if (this.preloadSkins) {\n        this.preloadSkins();\n    }\n    this.invalidState = true;\n};\n\n/**\n * Change the skin name.\n * You normally set the skin name as constant in your control, but if you\n * want you can set another skin name to change skins for single components\n * at runtime.\n *\n * @name GOWN.Skinable#skinName\n * @type String\n */\nObject.defineProperty(Skinable.prototype, 'skinName', {\n    get: function() {\n        return this._skinName;\n    },\n    set: function(value) {\n        if ( this._skinName === value ) {\n            return;\n        }\n        this._skinName = value;\n        this.reloadSkin();\n        this.invalidState = true;\n    }\n});\n\n/**\n * The fallback skin if the other skin does not exist (e.g. if a mobile theme\n * that does not provide a \"hover\" state is used on a desktop system)\n * (normally the default \"up\"-state skin)\n *\n * @name GOWN.Skinable#skinFallback\n * @type String\n * @default 'up'\n */\nObject.defineProperty(Skinable.prototype, 'skinFallback', {\n    get: function() {\n        return this._skinFallback;\n    },\n    set: function(value) {\n        this._skinFallback = value;\n    }\n});\n\n/**\n * @private\n */\nSkinable.prototype.containerDestroy = PIXI.Container.prototype.destroy;\n\n/**\n * Destroy the Skinable and empty the skin cache\n */\nSkinable.prototype.destroy = function() {\n    for (var name in this.skinCache) {\n        var skin = this.skinCache[name];\n        if (skin && skin.destroy && this.allowDestroyCache) {\n            skin.destroy();\n        }\n    }\n    this._currentSkin = null;\n    this.containerDestroy();\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/core/Skinable.js\n// module id = 7\n// module chunks = 0","/**\n * Rounds a number to a certain level of precision. Useful for limiting the number of\n * decimal places on a fractional number.\n *\n * @see Math#round\n *\n * @function GOWN.utils.roundToPrecision\n * @param number The input number to round {Number}\n * @param precision The number of decimal digits to keep {Number}\n * @return {Number} The rounded number, or the original input if no rounding is needed\n */\nmodule.exports = function(number, precision) {\n    precision = precision || 0;\n    var decimalPlaces = Math.pow(10, precision);\n\treturn Math.round(decimalPlaces * number) / decimalPlaces;\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/utils/roundToPrecision.js\n// module id = 8\n// module chunks = 0","var Control = require('../core/Control'),\n    Tween = require('../utils/Tween'),\n    Scrollable = require('./Scrollable'),\n    ScrollBar = require('./ScrollBar');\n// LayoutAlignment = require('../../external/pixi-layout/src/layout/LayoutAlignment');\n\n/**\n * Allows horizontal and vertical scrolling of a view port.\n * Not meant to be used as a standalone container or component.\n * Generally meant to be the super class of another component that needs to\n * support scrolling.\n * To put components in a generic scrollable container (with optional layout),\n * see ScrollContainer. To scroll long passages of text, see ScrollText.\n *\n * @class Scroller\n * @extends GOWN.Control\n * @memberof GOWN\n * @constructor\n */\nfunction Scroller(theme) {\n    Control.call(this);\n    this.setTheme(theme);\n    this.interactive = true;\n\n    /**\n     * use mask to clip content\n     */\n    this._clipContent = true;\n\n    /**\n     * offsets for the mask of the viewport\n     * (see this._viewport.mask)\n     */\n    this._viewPortOffset = {left: 0, right: 0, top: 0, bottom: 0};\n\n    /**\n     * scroll policy for vertical and horizontal ScrollBar\n     * (translates to x/y position of the viewport and scroll positions)\n     */\n    this._verticalScrollPolicy = Scroller.SCROLL_POLICY_AUTO;\n    this._horizontalScrollPolicy = Scroller.SCROLL_POLICY_AUTO;\n\n    /**\n     * the default interaction mode is drag-and-drop OR use the scrollbars\n     */\n    this._interactionMode = Scroller.INTERACTION_TOUCH_AND_SCROLL_BARS;\n\n    /**\n     * start touch/mouse position\n     * (changed on touchstart/mousedown)\n     */\n    this._startTouch = new PIXI.Point(0, 0);\n\n    /**\n     * calculated horizontal and vertical scroll positions\n     */\n    this._scrollPosition = new PIXI.Point(0, 0);\n\n    /**\n     * scroll positions at the start of an interaction\n     * (changed on touchstart/mousedown)\n     */\n    this._startScrollPosition = new PIXI.Point(0, 0);\n\n    // mouse/ouch has to be moved at least this many pixel to be a valid drag.\n    this.minimumDragDistance = 3;\n\n    /**\n     * add events\n     */\n    this.refreshInteractionModeEvents();\n\n    /**\n     * scrollInvalid will force viewport to set its x/y position\n     * according to horizontal/vertical Scroll Position next redraw\n     */\n    this.scrollInvalid = false;\n\n    this.scrollBarInvalid = false;\n\n    this.mask = undefined;\n    this.enabled = true;\n    this.horizontalScrollBarStyleName = Scroller.DEFAULT_CHILD_STYLE_NAME_HORIZONTAL_SCROLL_BAR;\n    this.verticalScrollBarStyleName = Scroller.DEFAULT_CHILD_STYLE_NAME_VERTICAL_SCROLL_BAR;\n    this._hasHorizontalScrollBar = false;\n    this._hasVerticalScrollBar = false;\n    this._touchPointID = -1;\n    this._isDraggingHorizontally = false;\n    this._isDraggingVertically = false;\n    this._measureViewPort = true;\n    this._snapToPages = false;\n    this._horizontalScrollBarFactory = this._verticalScrollBarFactory = this.defaultScrollBarFactory;\n    this._horizontalScrollPosition = 0;\n    this._minHorizontalScrollPosition = 0;\n    this._maxHorizontalScrollPosition = 0;\n    this._horizontalPageIndex = 0;\n    this._minHorizontalPageIndex = 0;\n    this.actualVerticalScrollStep = 1;\n    this.explicitVerticalScrollStep = NaN;\n    this._verticalScrollPosition = 0;\n    this._minVerticalScrollPosition = 0;\n    this._maxVerticalScrollPosition = 0;\n    this._verticalPageIndex = 0;\n    this._minVerticalPageIndex = 0;\n    this.actualPageWidth = 0;\n    this.explicitPageWidth = NaN;\n    this.actualPageHeight = 0;\n    this.explicitPageHeight = NaN;\n    this._paddingTop = 0;\n    this._elasticSnapDuration = 0.5;\n    this._isScrolling = false;\n    this._isScrollingStopped = false;\n    this.pendingHorizontalScrollPosition = NaN;\n    this.pendingVerticalScrollPosition = NaN;\n    this.hasPendingHorizontalPageIndex = false;\n    this.hasPendingVerticalPageIndex = false;\n    this._pageThrowDuration = 0.5;\n}\n\nScroller.prototype = Object.create(Control.prototype);\nScroller.prototype.constructor = Scroller;\nmodule.exports = Scroller;\n\n/**\n * The scroller may scroll if the view port is larger than the\n * scroller's bounds. Only than the scroll bar will be visible.\n */\nScroller.SCROLL_POLICY_AUTO = 'auto';\n\n/**\n * The scroller will always scroll, the scroll bar will always be visible.\n */\nScroller.SCROLL_POLICY_ON = 'on';\n\n/**\n * The scroller does not scroll at all, the scroll bar will never be visible.\n */\nScroller.SCROLL_POLICY_OFF = 'off';\n\n/**\n * The user may touch anywhere on the scroller and drag to scroll. The\n * scroll bars will be visual indicator of position, but they will not\n * be interactive.\n */\nScroller.INTERACTION_TOUCH = 'touch';\n\n/**\n * Allow touch and use the Scrollbars\n */\nScroller.INTERACTION_TOUCH_AND_SCROLL_BARS = 'touchAndScrollBars';\n\n/**\n * The user may only interact with the scroll bars to scroll.\n */\nScroller.INTERACTION_MOUSE = Scroller.INTERACTION_SCROLL_BARS = 'scrollBars';\n\nScroller.HELPER_POINT = new PIXI.Point(0, 0);\nScroller.INVALIDATION_FLAG_SCROLL_BAR_RENDERER = 'scrollBarRenderer';\nScroller.INVALIDATION_FLAG_PENDING_SCROLL = 'pendingScroll';\nScroller.INVALIDATION_FLAG_PENDING_REVEAL_SCROLL_BARS = 'pendingRevealScrollBars';\nScroller.SCROLL_BAR_DISPLAY_MODE_FLOAT = 'float';\nScroller.SCROLL_BAR_DISPLAY_MODE_FIXED = 'fixed';\nScroller.SCROLL_BAR_DISPLAY_MODE_FIXED_FLOAT = 'fixedFloat';\nScroller.SCROLL_BAR_DISPLAY_MODE_NONE = 'none';\nScroller.VERTICAL_SCROLL_BAR_POSITION_RIGHT = 'right';\nScroller.VERTICAL_SCROLL_BAR_POSITION_LEFT = 'left';\nScroller.INTERACTION_MODE_TOUCH = 'touch';\nScroller.INTERACTION_MODE_MOUSE = 'mouse';\nScroller.INTERACTION_MODE_TOUCH_AND_SCROLL_BARS = 'touchAndScrollBars';\nScroller.MOUSE_WHEEL_SCROLL_DIRECTION_VERTICAL = 'vertical';\nScroller.MOUSE_WHEEL_SCROLL_DIRECTION_HORIZONTAL = 'horizontal';\nScroller.INVALIDATION_FLAG_CLIPPING = 'clipping';\nScroller.MINIMUM_VELOCITY = 0.02;\nScroller.CURRENT_VELOCITY_WEIGHT = 2.33;\nScroller.VELOCITY_WEIGHTS = [1, 1.33, 1.66, 2];\nScroller.MAXIMUM_SAVED_VELOCITY_COUNT = 4;\nScroller.DECELERATION_RATE_NORMAL = 0.998;\nScroller.DECELERATION_RATE_FAST = 0.99;\n// Scroller.DEFAULT_CHILD_STYLE_NAME_HORIZONTAL_SCROLL_BAR = 'scroller-horizontal-scroll-bar';\n// Scroller.DEFAULT_CHILD_STYLE_NAME_VERTICAL_SCROLL_BAR = 'scroller-vertical-scroll-bar';\nScroller.FUZZY_PAGE_SIZE_PADDING = 0.000001;\nScroller.PAGE_INDEX_EPSILON = 0.01;\n\n/**\n * change horizontal scroll position.\n * (will update x position of viewport next redraw)\n */\nObject.defineProperty(Scroller.prototype, 'horizontalScrollPosition', {\n    get: function () {\n        return this._scrollPosition.x;\n    },\n    set: function (value) {\n        if (this._scrollPosition.x === value) {\n            return;\n        }\n        this._scrollPosition.x = value;\n        this.scrollInvalid = true;\n    }\n});\n\n/**\n * change vertical scroll position.\n * (will update y position of viewport next redraw)\n */\nObject.defineProperty(Scroller.prototype, 'verticalScrollPosition', {\n    get: function () {\n        return this._scrollPosition.y;\n    },\n    set: function (value) {\n        if (this._scrollPosition.y === value) {\n            return;\n        }\n        this._scrollPosition.y = value;\n        this.scrollInvalid = true;\n    }\n});\n\n/**\n * us a mask to clip content\n */\nObject.defineProperty(Scroller.prototype, 'interactionMode', {\n    get: function () {\n        return this._interactionMode;\n    },\n    set: function (value) {\n        if (this._interactionMode === value) {\n            return;\n        }\n        this._interactionMode = value;\n        this.refreshInteractionModeEvents();\n    }\n});\n\n/**\n * us a mask to clip the content.\n */\nObject.defineProperty(Scroller.prototype, 'clipContent', {\n    get: function () {\n        return this._clipContent;\n    },\n    set: function (value) {\n        if (this._clipContent === value) {\n            return;\n        }\n        this._clipContent = value;\n        this.clippingInvalid = true;\n    }\n});\n\n/**\n * set the viewport. This is the content you'd like to scroll.\n */\nObject.defineProperty(Scroller.prototype, 'viewPort', {\n    get: function () {\n        return this._viewPort;\n    },\n    set: function (value) {\n        if (this._viewPort === value) {\n            return;\n        }\n        this._viewPort = value;\n        if (this._viewPort) {\n            this.addChildAt(this._viewPort, 0);\n        }\n        // position according to horizontal/vertical ScrollPosition\n        this.scrollInvalid = true;\n        this.clippingInvalid = true;\n        this.sizeInvalid = true;\n    }\n});\n\n/**\n * change scrollbar factory\n */\nObject.defineProperty(Scroller.prototype, 'horizontalScrollBarFactory', {\n    get: function () {\n        return this._horizontalScrollBarFactory;\n    },\n    set: function (value) {\n        if (this._horizontalScrollBarFactory === value) {\n            return;\n        }\n        this._horizontalScrollBarFactory = value;\n        this.scrollBarInvalid = true;\n    }\n});\n\n/**\n * change scrollbar factory\n */\nObject.defineProperty(Scroller.prototype, 'verticalScrollBarFactory', {\n    get: function () {\n        return this._verticalScrollBarFactory;\n    },\n    set: function (value) {\n        if (this._verticalScrollBarFactory === value) {\n            return;\n        }\n        this._verticalScrollBarFactory = value;\n        this.scrollBarInvalid = true;\n    }\n});\n\nObject.defineProperty(Scroller.prototype, 'measureViewPort', {\n    get: function () {\n        return this._measureViewPort;\n    },\n    set: function (value) {\n        if (this._measureViewPort === value) {\n            return;\n        }\n        this._measureViewPort = value;\n        this.sizeInvalid = true;\n    }\n});\n\nObject.defineProperty(Scroller.prototype, 'snapToPages', {\n    get: function () {\n        return this._snapToPages;\n    },\n    set: function (value) {\n        if (this._snapToPages === value) {\n            return;\n        }\n        this._snapToPages = value;\n        this.sizeInvalid = true;\n    }\n});\n\nObject.defineProperty(Scroller.prototype, 'horizontalScrollStep', {\n    get: function () {\n        return this._horizontalScrollStep;\n    },\n    set: function (value) {\n        if (this._horizontalScrollStep === value) {\n            return;\n        }\n        this._horizontalScrollStep = value;\n        this.scrollInvalid = true;\n    }\n});\n\nObject.defineProperty(Scroller.prototype, 'horizontalPageIndex', {\n    get: function () {\n        if (this.hasPendingHorizontalPageIndex) {\n            return this.pendingHorizontalPageIndex;\n        }\n        return this._horizontalPageIndex;\n    }\n});\n\nObject.defineProperty(Scroller.prototype, 'horizontalScrollPolicy', {\n    get: function () {\n        return this._horizontalScrollPolicy;\n    },\n    set: function (value) {\n        if (this._horizontalScrollPolicy === value) {\n            return;\n        }\n        this._horizontalScrollPolicy = value;\n        this.scrollInvalid = true;\n        this.scrollBarInvalid = true;\n    }\n});\n\nObject.defineProperty(Scroller.prototype, 'verticalScrollStep', {\n    get: function () {\n        return this.actualVerticalScrollStep;\n    },\n    set: function (value) {\n        if (this.explicitVerticalScrollStep === value) {\n            return;\n        }\n        this.explicitVerticalScrollStep = value;\n        this.scrollInvalid = true;\n    }\n});\n\nObject.defineProperty(Scroller.prototype, 'verticalPageIndex', {\n    get: function () {\n        if (this.hasPendingVerticalPageIndex) {\n            return this.pendingVerticalPageIndex;\n        }\n        return this._verticalPageIndex;\n    }\n});\n\nObject.defineProperty(Scroller.prototype, 'verticalScrollPolicy', {\n    get: function () {\n        if (this.hasPendingVerticalPageIndex) {\n            return this.pendingVerticalPageIndex;\n        }\n        return this._verticalPageIndex;\n    },\n    set: function (value) {\n        if (this._verticalScrollPolicy === value) {\n            return;\n        }\n        this._verticalScrollPolicy = value;\n        this.scrollInvalid = true;\n        this.scrollBarInvalid = true;\n    }\n});\n\nObject.defineProperty(Scroller.prototype, 'pageWidth', {\n    get: function () {\n        return this.actualPageWidth;\n    },\n    set: function (value) {\n        if (this.explicitPageWidth === value) {\n            return;\n        }\n        var valueIsNaN = isNaN(value);\n        if (valueIsNaN && this.explicitPageWidth !== this.explicitPageWidth) {\n            return;\n        }\n        this.explicitPageWidth = value;\n        if (valueIsNaN) {\n            //we need to calculate this value during validation\n            this.actualPageWidth = 0;\n        } else {\n            this.actualPageWidth = this.explicitPageWidth;\n        }\n    }\n});\n\nObject.defineProperty(Scroller.prototype, 'pageHeight', {\n    get: function () {\n        return this.actualPageHeight;\n    },\n    set: function (value) {\n        if (this.explicitPageHeight === value) {\n            return;\n        }\n        var valueIsNaN = isNaN(value);\n        if (valueIsNaN && this.explicitPageHeight !== this.explicitPageHeight) {\n            return;\n        }\n        this.explicitPageHeight = value;\n        if (valueIsNaN) {\n            //we need to calculate this value during validation\n            this.actualPageHeight = 0;\n        } else {\n            this.actualPageHeight = this.explicitPageHeight;\n        }\n    }\n});\n\nObject.defineProperty(Scroller.prototype, 'padding', {\n    get: function () {\n        return this._paddingTop;\n    },\n    set: function (value) {\n        this.paddingTop = value;\n        this.paddingRight = value;\n        this.paddingBottom = value;\n        this.paddingLeft = value;\n    }\n});\n\nObject.defineProperty(Scroller.prototype, 'pageThrowDuration', {\n    get: function () {\n        return this._pageThrowDuration;\n    },\n    set: function (value) {\n        this._pageThrowDuration = value;\n    }\n});\n\nScroller.prototype.scrollToPageIndex = function (horizontalPageIndex, verticalPageIndex, animationDuration) {\n    if (isNaN(animationDuration)) {\n        animationDuration = this._pageThrowDuration;\n    }\n    //cancel any pending scroll to a specific scroll position. we can\n    //have only one type of pending scroll at a time.\n    this.pendingHorizontalScrollPosition = NaN;\n    this.pendingVerticalScrollPosition = NaN;\n    this.hasPendingHorizontalPageIndex = this._horizontalPageIndex !== horizontalPageIndex;\n    this.hasPendingVerticalPageIndex = this._verticalPageIndex !== verticalPageIndex;\n    if (!this.hasPendingHorizontalPageIndex && !this.hasPendingVerticalPageIndex) {\n        return;\n    }\n    this.pendingHorizontalPageIndex = horizontalPageIndex;\n    this.pendingVerticalPageIndex = verticalPageIndex;\n    this.pendingScrollDuration = animationDuration;\n};\n\nScroller.prototype.refreshInteractionModeEvents = function () {\n    if (!this.startEventsAdded &&\n        (this._interactionMode === Scroller.INTERACTION_TOUCH ||\n        this._interactionMode === Scroller.INTERACTION_TOUCH_AND_SCROLL_BARS)) {\n        this.on('touchstart', this.onDown, this);\n        this.on('mousedown', this.onDown, this);\n        this.startEventsAdded = true;\n    } else if (this.startEventsAdded &&\n        this._interactionMode === Scroller.INTERACTION_SCROLL_BARS) {\n        this.off('touchstart', this.onDown, this);\n        this.off('mousedown', this.onDown, this);\n\n        if (this.touchMoveEventsAdded) {\n            this.off('touchend', this.onUp, this);\n            this.off('mouseupoutside', this.onUp, this);\n            this.off('mouseup', this.onUp, this);\n            this.off('touchendoutside', this.onUp, this);\n\n            // TODO: global move (add events to root element from pixi renderer?)\n            this.off('touchmove', this.onMove, this);\n            this.off('mousemove', this.onMove, this);\n        }\n        this.touchMoveEventsAdded = this.startEventsAdded = false;\n    }\n    // TODO: interactive scrollbars\n};\n\nScroller.prototype.onDown = function (event) {\n    this._startTouch = event.data.getLocalPosition(this);\n    this._isScrollingStopped = false;\n\n    if (!this.touchMoveEventsAdded) {\n        this.on('touchend', this.onUp, this);\n        this.on('mouseupoutside', this.onUp, this);\n        this.on('mouseup', this.onUp, this);\n        this.on('touchendoutside', this.onUp, this);\n\n        this.on('touchmove', this.onMove, this);\n        this.on('mousemove', this.onMove, this);\n        this.touchMoveEventsAdded = true;\n    }\n\n    this._startScrollPosition.x = this._scrollPosition.x;\n    this._startScrollPosition.y = this._scrollPosition.y;\n};\n\nScroller.prototype.onUp = function () {\n    this._isScrollingStopped = true;\n};\n\nScroller.prototype.onMove = function (event) {\n    var pos = event.data.getLocalPosition(this);\n    this.checkForDrag(pos);\n};\n\nScroller.prototype.checkForDrag = function (currentTouch) {\n    if (this._isScrollingStopped) {\n        return;\n    }\n    var horizontalMoved = Math.abs(currentTouch.x - this._startTouch.x);\n    var verticalMoved = Math.abs(currentTouch.y - this._startTouch.y);\n\n    if ((this._horizontalScrollPolicy === Scroller.SCROLL_POLICY_ON ||\n        this._horizontalScrollPolicy === Scroller.SCROLL_POLICY_AUTO) &&\n        !this._isDraggingHorizontally && horizontalMoved >= this.minimumDragDistance) {\n        if (this.horizontalScrollBar) {\n            this.revealHorizontalScrollBar();\n        }\n        this._startTouch.x = currentTouch.x;\n        this._startScrollPosition.x = this._scrollPosition.x;\n        this._isDraggingHorizontally = true;\n        if (!this._isDraggingVertically) {\n            this.startScroll();\n        }\n\n    }\n    if ((this._verticalScrollPolicy === Scroller.SCROLL_POLICY_ON ||\n        this._verticalScrollPolicy === Scroller.SCROLL_POLICY_AUTO) &&\n        !this._isDraggingVertically && verticalMoved >= this.minimumDragDistance) {\n        if (this.verticalScrollBar) {\n            this.revealVerticalScrollBar();\n        }\n        this._startTouch.y = currentTouch.y;\n        this._startScrollPosition.y = this._scrollPosition.y;\n        this._isDraggingVertically = true;\n        if (!this._isDraggingHorizontally) {\n            this.startScroll();\n        }\n    }\n\n    if (this._isDraggingHorizontally && !this._horizontalAutoScrollTween) {\n        this.updateHorizontalScrollFromTouchPosition(currentTouch.x);\n    }\n    if (this._isDraggingVertically && !this._verticalAutoScrollTween) {\n        this.updateVerticalScrollFromTouchPosition(currentTouch.y);\n    }\n};\n\n// performance increase to avoid using call.. (10x faster)\nScroller.prototype.controlRedraw = Control.prototype.redraw;\n/**\n * update before draw call\n *\n\n */\nScroller.prototype.redraw = function () {\n    this.scrollBarInvalid = true;\n    if (this.scrollBarInvalid) {\n        this.createScrollBars();\n    }\n    if (this.clippingInvalid) {\n        this.refreshMask();\n    }\n\n    if (this._viewPort && this._viewPort.updateRenderable) {\n        this._viewPort.updateRenderable(\n            -this._viewPort.x, -this._viewPort.y,\n            this.width, this.height);\n    }\n    this.controlRedraw();\n};\n\nScroller.prototype.updateHorizontalScrollFromTouchPosition = function (touchX, isScrollBar) {\n    var offset;\n    if (isScrollBar) {\n        offset = this._startTouch.x - touchX;\n    } else {\n        offset = touchX - this._startTouch.x;\n    }\n    var position = this._startScrollPosition.x + offset;\n    if (this.viewPort.width > this.width) {\n        position = Math.min(position, 0);\n        if (this.viewPort.width && this.viewPort.x < 0) {\n            position = Math.max(position, -(this.viewPort.width - this.width));\n        }\n        this.viewPort.x = Math.floor(position);\n    }\n    this.horizontalScrollPosition = position;\n};\n\nScroller.prototype.updateVerticalScrollFromTouchPosition = function (touchY, isScrollBar) {\n    var offset;\n    if (isScrollBar) {\n        offset = this._startTouch.y - touchY;\n    } else {\n        offset = touchY - this._startTouch.y;\n    }\n    var position = this._startScrollPosition.y + offset;\n    if (this.viewPort.height > this.height) {\n        position = Math.min(position, 0);\n        if (this.viewPort.height && this.viewPort.y < 0) {\n            position = Math.max(position, -(this.viewPort.height - this.height));\n        }\n        this.viewPort.y = Math.floor(position);\n    }\n    this.verticalScrollPosition = position;\n};\n\nScroller.prototype.startScroll = function () {\n    if (this._isScrolling) {\n        return;\n    }\n    this._isScrolling = true;\n};\n\n// 3333\nScroller.prototype.stopScrolling = function () {\n    if (this._horizontalAutoScrollTween) {\n        this._horizontalAutoScrollTween.remove();\n        this._horizontalAutoScrollTween = null;\n    }\n    if (this._verticalAutoScrollTween) {\n        this._verticalAutoScrollTween.remove();\n        this._verticalAutoScrollTween = null;\n    }\n    this._isScrollingStopped = true;\n    this.hideHorizontalScrollBar();\n    this.hideVerticalScrollBar();\n};\n\nScroller.prototype.scrollToPosition = function (horizontalScrollPosition, verticalScrollPosition, animationDuration) {\n    if (isNaN(animationDuration)) {\n        if (this._useFixedThrowDuration) {\n            animationDuration = this._fixedThrowDuration;\n        } else {\n            Scroller.HELPER_POINT.setTo(horizontalScrollPosition - this._horizontalScrollPosition, verticalScrollPosition - this._verticalScrollPosition);\n            animationDuration = this.calculateDynamicThrowDuration(Scroller.HELPER_POINT.length * this._logDecelerationRate + Scroller.MINIMUM_VELOCITY);\n        }\n    }\n    //cancel any pending scroll to a different page. we can have only\n    //one type of pending scroll at a time.\n    this.hasPendingHorizontalPageIndex = false;\n    this.hasPendingVerticalPageIndex = false;\n    if (this.pendingHorizontalScrollPosition === horizontalScrollPosition &&\n        this.pendingVerticalScrollPosition === verticalScrollPosition &&\n        this.pendingScrollDuration === animationDuration) {\n        return;\n    }\n    this.pendingHorizontalScrollPosition = horizontalScrollPosition;\n    this.pendingVerticalScrollPosition = verticalScrollPosition;\n    this.pendingScrollDuration = animationDuration;\n};\n\nScroller.prototype.handlePendingScroll = function () {\n    if (!isNaN(this.pendingHorizontalScrollPosition) || !isNaN(this.pendingVerticalScrollPosition)) {\n        this.throwTo(this.pendingHorizontalScrollPosition, this.pendingVerticalScrollPosition, this.pendingScrollDuration);\n        this.pendingHorizontalScrollPosition = NaN;\n        this.pendingVerticalScrollPosition = NaN;\n    }\n    if (this.hasPendingHorizontalPageIndex && this.hasPendingVerticalPageIndex) {\n        //both\n        this.throwToPage(this.pendingHorizontalPageIndex, this.pendingVerticalPageIndex, this.pendingScrollDuration);\n    }\n    else if (this.hasPendingHorizontalPageIndex) {\n        //horizontal only\n        this.throwToPage(this.pendingHorizontalPageIndex, this._verticalPageIndex, this.pendingScrollDuration);\n    }\n    else if (this.hasPendingVerticalPageIndex) {\n        //vertical only\n        this.throwToPage(this._horizontalPageIndex, this.pendingVerticalPageIndex, this.pendingScrollDuration);\n    }\n    this.hasPendingHorizontalPageIndex = false;\n    this.hasPendingVerticalPageIndex = false;\n};\n\nScroller.prototype.completeScroll = function () {\n    if (!this._isScrolling || this._verticalAutoScrollTween || this._horizontalAutoScrollTween ||\n        this._isDraggingHorizontally || this._isDraggingVertically) {\n        return;\n    }\n    this._isScrolling = false;\n    this.hideHorizontalScrollBar();\n    this.hideVerticalScrollBar();\n};\n\nScroller.prototype.refreshEnabled = function () {\n    if (this._viewPort) {\n        this._viewPort.enabled = this.enabled;\n    }\n    if (this.horizontalScrollBar) {\n        this.horizontalScrollBar.enabled = this.enabled;\n    }\n    if (this.verticalScrollBar) {\n        this.verticalScrollBar.enabled = this.enabled;\n    }\n};\n\nScroller.prototype.refreshScrollValues = function () {\n    this.refreshScrollSteps();\n\n    var oldMaxHSP = this._maxHorizontalScrollPosition;\n    var oldMaxVSP = this._maxVerticalScrollPosition;\n    this.refreshMinAndMaxScrollPositions();\n    var maximumPositionsChanged = this._maxHorizontalScrollPosition !== oldMaxHSP || this._maxVerticalScrollPosition !== oldMaxVSP;\n    if (maximumPositionsChanged && this._touchPointID < 0) {\n        this.clampScrollPositions();\n    }\n\n    this.refreshPageCount();\n    this.refreshPageIndices();\n};\n\nScroller.prototype.refreshPageCount = function () {\n    if (this._snapToPages) {\n        var horizontalScrollRange = this._maxHorizontalScrollPosition - this._minHorizontalScrollPosition;\n        var roundedDownRange;\n        if (horizontalScrollRange === Number.POSITIVE_INFINITY) {\n            //trying to put positive infinity into an int results in 0\n            //so we need a special case to provide a large int value.\n            if (this._minHorizontalScrollPosition === Number.NEGATIVE_INFINITY) {\n                this._minHorizontalPageIndex = Number.MIN_SAFE_INTEGER;\n            } else {\n                this._minHorizontalPageIndex = 0;\n            }\n        } else {\n            this._minHorizontalPageIndex = 0;\n            //floating point errors could result in the max page index\n            //being 1 larger than it should be.\n            roundedDownRange =\n                Math.floor(horizontalScrollRange / this.actualPageWidth) * this.actualPageWidth;\n            if ((horizontalScrollRange - roundedDownRange) < Scroller.FUZZY_PAGE_SIZE_PADDING) {\n                horizontalScrollRange = roundedDownRange;\n            }\n        }\n\n        var verticalScrollRange = this._maxVerticalScrollPosition - this._minVerticalScrollPosition;\n        if (verticalScrollRange === Number.POSITIVE_INFINITY) {\n            //trying to put positive infinity into an int results in 0\n            //so we need a special case to provide a large int value.\n            if (this._minVerticalScrollPosition === Number.NEGATIVE_INFINITY) {\n                this._minVerticalPageIndex = Number.MIN_SAFE_INTEGER;\n            } else {\n                this._minVerticalPageIndex = 0;\n            }\n        } else {\n            this._minVerticalPageIndex = 0;\n            //floating point errors could result in the max page index\n            //being 1 larger than it should be.\n            roundedDownRange =\n                Math.floor(verticalScrollRange / this.actualPageHeight) * this.actualPageHeight;\n            if ((verticalScrollRange - roundedDownRange) < Scroller.FUZZY_PAGE_SIZE_PADDING) {\n                verticalScrollRange = roundedDownRange;\n            }\n        }\n    } else {\n        this._minVerticalPageIndex = 0;\n    }\n};\n\nScroller.prototype.clampScrollPositions = function () {\n    if (!this._horizontalAutoScrollTween) {\n        var targetHorizontalScrollPosition = this._horizontalScrollPosition;\n        if (targetHorizontalScrollPosition < this._minHorizontalScrollPosition) {\n            targetHorizontalScrollPosition = this._minHorizontalScrollPosition;\n        }\n        else if (targetHorizontalScrollPosition > this._maxHorizontalScrollPosition) {\n            targetHorizontalScrollPosition = this._maxHorizontalScrollPosition;\n        }\n        this.horizontalScrollPosition = targetHorizontalScrollPosition;\n    }\n};\n\nScroller.prototype.refreshScrollSteps = function () {\n    if (this.explicitHorizontalScrollStep !== this.explicitHorizontalScrollStep) //isNaN\n    {\n        if (this._viewPort) {\n            this.actualHorizontalScrollStep = this._viewPort.horizontalScrollStep;\n        }\n        else {\n            this.actualHorizontalScrollStep = 1;\n        }\n    }\n    else {\n        this.actualHorizontalScrollStep = this.explicitHorizontalScrollStep;\n    }\n    if (this.explicitVerticalScrollStep !== this.explicitVerticalScrollStep) //isNaN\n    {\n        if (this._viewPort) {\n            this.actualVerticalScrollStep = this._viewPort.verticalScrollStep;\n        }\n        else {\n            this.actualVerticalScrollStep = 1;\n        }\n    }\n    else {\n        this.actualVerticalScrollStep = this.explicitVerticalScrollStep;\n    }\n};\n\nScroller.prototype.refreshMinAndMaxScrollPositions = function () {\n    var visibleViewPortWidth = this.actualWidth - (this._viewPortOffset.left + this._viewPortOffset.right);\n    var visibleViewPortHeight = this.actualHeight - (this._viewPortOffset.top + this._viewPortOffset.bottom);\n    if (this.explicitPageWidth !== this.explicitPageWidth) { //isNaN\n        this.actualPageWidth = visibleViewPortWidth;\n    }\n    if (this.explicitPageHeight !== this.explicitPageHeight) { //isNaN\n        this.actualPageHeight = visibleViewPortHeight;\n    }\n    if (this._viewPort) {\n        this._minHorizontalScrollPosition = this._viewPort.content.x;\n        if (this._viewPort.width === Number.POSITIVE_INFINITY) {\n            //we don't want to risk the possibility of negative infinity\n            //being added to positive infinity. the result is NaN.\n            this._maxHorizontalScrollPosition = Number.POSITIVE_INFINITY;\n        } else {\n            this._maxHorizontalScrollPosition = this._minHorizontalScrollPosition + this._viewPort.width - visibleViewPortWidth;\n        }\n        if (this._maxHorizontalScrollPosition < this._minHorizontalScrollPosition) {\n            this._maxHorizontalScrollPosition = this._minHorizontalScrollPosition;\n        }\n        this._minVerticalScrollPosition = this._viewPort.content.y;\n        if (this._viewPort.height === Number.POSITIVE_INFINITY) {\n            //we don't want to risk the possibility of negative infinity\n            //being added to positive infinity. the result is NaN.\n            this._maxVerticalScrollPosition = Number.POSITIVE_INFINITY;\n        } else {\n            this._maxVerticalScrollPosition = this._minVerticalScrollPosition + this._viewPort.height - visibleViewPortHeight;\n        }\n        if (this._maxVerticalScrollPosition < this._minVerticalScrollPosition) {\n            this._maxVerticalScrollPosition = this._minVerticalScrollPosition;\n        }\n    } else {\n        this._minHorizontalScrollPosition = 0;\n        this._minVerticalScrollPosition = 0;\n        this._maxHorizontalScrollPosition = 0;\n        this._maxVerticalScrollPosition = 0;\n    }\n};\n\nScroller.prototype.showOrHideChildren = function () {\n    var childCount = this.numRawChildrenInternal;\n    if (this._touchBlocker !== null && this._touchBlocker.parent !== null) {\n        //keep scroll bars below the touch blocker, if it exists\n        childCount--;\n    }\n    if (this.verticalScrollBar) {\n        this.verticalScrollBar.visible = this._hasVerticalScrollBar;\n        this.verticalScrollBar.touchable =\n            this._hasVerticalScrollBar && this._interactionMode !== Scroller.INTERACTION_TOUCH_AND_SCROLL_BARS;\n        // this.setRawChildIndexInternal(DisplayObject(this.verticalScrollBar), childCount - 1);\n    }\n    if (this.horizontalScrollBar) {\n        this.horizontalScrollBar.visible = this._hasHorizontalScrollBar;\n        this.horizontalScrollBar.touchable =\n            this._hasHorizontalScrollBar && this._interactionMode !== Scroller.INTERACTION_TOUCH_AND_SCROLL_BARS;\n        //     if(this.verticalScrollBar) {\n        //         this.setRawChildIndexInternal(DisplayObject(this.horizontalScrollBar), childCount - 2);\n        //     } else {\n        //         this.setRawChildIndexInternal(DisplayObject(this.horizontalScrollBar), childCount - 1);\n        //     }\n    }\n\n};\n\nScroller.prototype.calculateViewPortOffsetsForFixedVerticalScrollBar = function (forceScrollBars, useActualBounds) {\n    forceScrollBars = forceScrollBars || false;\n    useActualBounds = useActualBounds || false;\n    if (this.verticalScrollBar && (this._measureViewPort || useActualBounds)) {\n        var scrollerHeight = useActualBounds ? this.actualHeight : this._explicitHeight;\n        var totalHeight = this._viewPort.height + this._viewPortOffset.top + this._viewPortOffset.bottom;\n        this._hasVerticalScrollBar =\n            forceScrollBars || this._verticalScrollPolicy === Scroller.SCROLL_POLICY_ON ||\n            ((totalHeight > scrollerHeight || totalHeight > this._explicitMaxHeight) &&\n            this._verticalScrollPolicy !== Scroller.SCROLL_POLICY_OFF);\n    } else {\n        this._hasVerticalScrollBar = false;\n    }\n};\n\nScroller.prototype.calculateViewPortOffsets = function (forceScrollBars, useActualBounds) {\n    forceScrollBars = forceScrollBars || false;\n    useActualBounds = useActualBounds || false;\n    //in fixed mode, if we determine that scrolling is required, we\n    //remember the offsets for later. if scrolling is not needed, then\n    //we will ignore the offsets from here forward\n    this._viewPortOffset.top = this._paddingTop;\n    this._viewPortOffset.rigth = this._paddingRight;\n    this._viewPortOffset.bottom = this._paddingBottom;\n    this._viewPortOffset.left = this._paddingLeft;\n    //we need to double check the horizontal scroll bar if the scroll\n    //bars are fixed because adding a vertical scroll bar may require a\n    //horizontal one too.\n};\n\nScroller.prototype.throwToPage = function (targetHorizontalPageIndex, targetVerticalPageIndex, duration) {\n    duration = duration || 0.5;\n    var targetHorizontalScrollPosition = this._horizontalScrollPosition;\n    if (targetHorizontalPageIndex >= this._minHorizontalPageIndex) {\n        targetHorizontalScrollPosition = this.actualPageWidth * targetHorizontalPageIndex;\n    }\n    if (targetHorizontalScrollPosition < this._minHorizontalScrollPosition) {\n        targetHorizontalScrollPosition = this._minHorizontalScrollPosition;\n    }\n    if (targetHorizontalScrollPosition > this._maxHorizontalScrollPosition) {\n        targetHorizontalScrollPosition = this._maxHorizontalScrollPosition;\n    }\n    var targetVerticalScrollPosition = this._verticalScrollPosition;\n    if (targetVerticalPageIndex >= this._minVerticalPageIndex) {\n        targetVerticalScrollPosition = this.actualPageHeight * targetVerticalPageIndex;\n    }\n    if (targetVerticalScrollPosition < this._minVerticalScrollPosition) {\n        targetVerticalScrollPosition = this._minVerticalScrollPosition;\n    }\n    if (targetVerticalScrollPosition > this._maxVerticalScrollPosition) {\n        targetVerticalScrollPosition = this._maxVerticalScrollPosition;\n    }\n    if (duration > 0) {\n        this.throwTo(targetHorizontalScrollPosition, targetVerticalScrollPosition, duration);\n    } else {\n        this.horizontalScrollPosition = targetHorizontalScrollPosition;\n        this.verticalScrollPosition = targetVerticalScrollPosition;\n    }\n    if (targetHorizontalPageIndex >= this._minHorizontalPageIndex) {\n        this._horizontalPageIndex = targetHorizontalPageIndex;\n    }\n    if (targetVerticalPageIndex >= this._minVerticalPageIndex) {\n        this._verticalPageIndex = targetVerticalPageIndex;\n    }\n};\n\nScroller.prototype.horizontalScrollBarHideTweenOnComplete = function () {\n    this._horizontalScrollBarHideTween = null;\n};\n\nScroller.prototype.verticalScrollBarHideTweenOnComplete = function () {\n    this._verticalScrollBarHideTween = null;\n};\n\nScroller.prototype.scrollerEnterFrameHandler = function () {\n    this.saveVelocity();\n};\n\n/**\n * update the rectangle that defines the clipping area\n */\nScroller.prototype.refreshMask = function () {\n    if (!this._clipContent) {\n        if (this._viewPort) {\n            this._viewPort.mask = null;\n        }\n        return;\n    }\n    var clipWidth = this.width - this._viewPortOffset.left - this._viewPortOffset.right;\n    if (clipWidth < 0 || isNaN(clipWidth)) {\n        clipWidth = 0;\n    }\n    var clipHeight = this.height - this._viewPortOffset.top - this._viewPortOffset.bottom;\n    if (clipHeight < 0 || isNaN(clipHeight)) {\n        clipHeight = 0;\n    }\n    if (!this.mask) {\n        this.mask = new PIXI.Graphics();\n    }\n    var global = this.toGlobal(new PIXI.Point(0, 0));\n    this.mask.clear()\n        .beginFill('#fff', 1)\n        .drawRect(\n            global.x,\n            global.y,\n            clipWidth,\n            clipHeight)\n        .endFill();\n    this.clippingInvalid = false;\n};\n\n/**\n * Creates and adds the <code>horizontalScrollBar</code> and\n * <code>verticalScrollBar</code> sub-components and removes the old\n * instances, if they exist.\n *\n * <p>Meant for internal use, and subclasses may override this function\n * with a custom implementation.</p>\n *\n * @see #horizontalScrollBar\n * @see #verticalScrollBar\n * @see #horizontalScrollBarFactory\n * @see #verticalScrollBarFactory\n */\nScroller.prototype.createScrollBars = function () {\n    if(this.horizontalScrollBar) {\n        this.removeChild(this.horizontalScrollBar);\n        this.horizontalScrollBar = null;\n    }\n    if(this.verticalScrollBar) {\n        this.removeChild(this.verticalScrollBar);\n        this.verticalScrollBar = null;\n    }\n    this.horizontalScrollBar = this._horizontalScrollBarFactory(Scrollable.HORIZONTAL);\n    this.verticalScrollBar = this._verticalScrollBarFactory(Scrollable.VERTICAL);\n};\n\nScroller.prototype.defaultScrollBarFactory = function (direction) {\n    // TODO: SimpleScrollBar (like feathers?)\n    var sb = new ScrollBar(direction, this.theme);\n    if (direction === Scrollable.HORIZONTAL) {\n        sb.skinName = this.horizontalScrollBarStyleName;\n    } else {\n        sb.skinName = this.verticalScrollBarStyleName;\n    }\n    return sb;\n};\n\nScroller.prototype.revealHorizontalScrollBar = function () {\n    if (this.horizontalScrollBar) {\n        this.addChild(this.horizontalScrollBar);\n    }\n};\n\nScroller.prototype.revealVerticalScrollBar = function () {\n    if (this.verticalScrollBar) {\n        this.addChild(this.verticalScrollBar);\n    }\n};\n\nScroller.prototype.hideHorizontalScrollBar = function () {\n    if (this.horizontalScrollBar) {\n        this.removeChild(this.horizontalScrollBar);\n    }\n};\n\nScroller.prototype.hideVerticalScrollBar = function () {\n    if (this.verticalScrollBar) {\n        this.removeChild(this.verticalScrollBar);\n    }\n};\n\nScroller.prototype.throwHorizontally = function (pixelsPerMS) {\n    var absPixelsPerMS = Math.abs(pixelsPerMS);\n    if (absPixelsPerMS <= Scroller.MINIMUM_VELOCITY) {\n        this.finishScrollingHorizontally();\n        return;\n    }\n\n    var duration = this._fixedThrowDuration;\n    if (!this._useFixedThrowDuration) {\n        duration = this.calculateDynamicThrowDuration(pixelsPerMS);\n    }\n    this.throwTo(this._horizontalScrollPosition + this.calculateThrowDistance(pixelsPerMS), NaN, duration);\n};\n\nScroller.prototype.throwVertically = function (pixelsPerMS) {\n    var absPixelsPerMS = Math.abs(pixelsPerMS);\n    if (absPixelsPerMS <= Scroller.MINIMUM_VELOCITY) {\n        this.finishScrollingVertically();\n        return;\n    }\n\n    var duration = this._fixedThrowDuration;\n    if (!this._useFixedThrowDuration) {\n        duration = this.calculateDynamicThrowDuration(pixelsPerMS);\n    }\n    this.throwTo(NaN, this._verticalScrollPosition + this.calculateThrowDistance(pixelsPerMS), duration);\n};\n\n/**\n * @private\n */\nScroller.prototype.calculateDynamicThrowDuration = function (pixelsPerMS) {\n    return (Math.log(Scroller.MINIMUM_VELOCITY / Math.abs(pixelsPerMS)) / this._logDecelerationRate) / 1000;\n};\n\n/**\n * @private\n */\nScroller.prototype.calculateThrowDistance = function (pixelsPerMS) {\n    return (pixelsPerMS - Scroller.MINIMUM_VELOCITY) / this._logDecelerationRate;\n};\n\n/**\n * @private\n */\nScroller.prototype.finishScrollingHorizontally = function () {\n    var targetHorizontalScrollPosition = NaN;\n    if (this._horizontalScrollPosition < this._minHorizontalScrollPosition) {\n        targetHorizontalScrollPosition = this._minHorizontalScrollPosition;\n    } else if (this._horizontalScrollPosition > this._maxHorizontalScrollPosition) {\n        targetHorizontalScrollPosition = this._maxHorizontalScrollPosition;\n    }\n\n    this._isDraggingHorizontally = false;\n    if (targetHorizontalScrollPosition !== targetHorizontalScrollPosition) { //isNaN\n        this.completeScroll();\n    } else if (Math.abs(targetHorizontalScrollPosition - this._horizontalScrollPosition) < 1) {\n        //this distance is too small to animate. just finish now.\n        this.horizontalScrollPosition = targetHorizontalScrollPosition;\n        this.completeScroll();\n    } else {\n        this.throwTo(targetHorizontalScrollPosition, NaN, this._elasticSnapDuration);\n    }\n};\n\n/**\n * @private\n */\nScroller.prototype.finishScrollingVertically = function () {\n    var targetVerticalScrollPosition = NaN;\n    if (this._verticalScrollPosition < this._minVerticalScrollPosition) {\n        targetVerticalScrollPosition = this._minVerticalScrollPosition;\n    } else if (this._verticalScrollPosition > this._maxVerticalScrollPosition) {\n        targetVerticalScrollPosition = this._maxVerticalScrollPosition;\n    }\n\n    this._isDraggingVertically = false;\n    if (targetVerticalScrollPosition !== targetVerticalScrollPosition) //isNaN\n    {\n        this.completeScroll();\n    }\n    else if (Math.abs(targetVerticalScrollPosition - this._verticalScrollPosition) < 1) {\n        //this distance is too small to animate. just finish now.\n        this.verticalScrollPosition = targetVerticalScrollPosition;\n        this.completeScroll();\n    }\n    else {\n        this.throwTo(NaN, targetVerticalScrollPosition, this._elasticSnapDuration);\n    }\n};\n\n/**\n * manage tween to throw to horizontal or vertical position\n * call finishScrolling when tween reaches the end position\n *\n * @param targetPosition {number} target position in pixel\n * @param direction {String} direction ('horizontal' or 'vertical')\n * @param duration {number} time needed to reach target position (in ms)\n */\nScroller.prototype._throwToTween = function (targetPosition, direction, duration) {\n    if (!this.tweens) {\n        this.tweens = {};\n    }\n    // remove old tween\n    var tween;\n    if (this.tweens.hasOwnProperty(direction)) {\n        tween = this.tweens[direction];\n        tween.remove();\n        delete this.tweens[direction];\n    }\n\n    tween = new Tween(this._viewport, duration);\n    this.tween[direction] = tween;\n    var to = {};\n    to[direction + 'ScrollPosition'] = targetPosition;\n    this.tween.to(to);\n\n    return targetPosition;\n};\n\n/**\n * throw the scroller to the specified position\n * @param targetHorizontalScrollPosition as PIXI.Point\n * @param targetVerticalScrollPosition as PIXI.Point\n * @param duration\n */\n//TODO: see https://github.com/BowlerHatLLC/feathers/blob/master/source/feathers/controls/Scroller.as#L4939\nScroller.prototype.throwTo = function (targetHorizontalScrollPosition, targetVerticalScrollPosition, duration) {\n    duration = duration || 500;\n\n    var verticalScrollPosition = this._throwToTween(targetHorizontalScrollPosition, 'horizontal');\n    var horizontalScrollPosition = this._throwToTween(targetVerticalScrollPosition, 'vertical');\n    var changedPosition = false;\n    if (verticalScrollPosition !== this.verticalScrollPosition) {\n        changedPosition = true;\n        this.revealVerticalScrollBar();\n        this.startScroll();\n        // pass\n        if (duration === 0) {\n            this.verticalScrollPosition = targetVerticalScrollPosition;\n        }\n        // else {}\n    } else {\n        this.finishScrollingVertically();\n    }\n    if (horizontalScrollPosition !== this.horizontalScrollPosition) {\n        changedPosition = true;\n        this.revealHorizontalScrollBar();\n        this.startScroll();\n        // pass\n        if (duration === 0) {\n            this.horizontalScrollPosition = targetHorizontalScrollPosition;\n        }\n        // else {}\n    } else {\n        this.finishScrollingHorizontally();\n    }\n\n\n    if (changedPosition && duration === 0) {\n        this.completeScroll();\n    }\n};\n\nScroller.prototype.direction = function () {\n    var scrollAuto =\n        this._verticalScrollPolicy === Scroller.SCROLL_POLICY_AUTO &&\n        this._horizontalScrollPolicy === Scroller.SCROLL_POLICY_AUTO;\n    var scroll = 'vertical';\n    var scrollVertical =\n        this._verticalScrollPolicy === Scroller.SCROLL_POLICY_AUTO ||\n        this._verticalScrollPolicy === Scroller.SCROLL_POLICY_ON;\n    var scrollHorizontal =\n        this._horizontalScrollPolicy === Scroller.SCROLL_POLICY_AUTO ||\n        this._horizontalScrollPolicy === Scroller.SCROLL_POLICY_ON;\n\n\n    // if the scroll direction is set to SCROLL_AUTO we check, if the\n    // layout of the content is set to horizontal or the content\n    // width is bigger than the current\n    if (!scrollVertical || scrollHorizontal ||\n        (scrollAuto && (this.layoutHorizontalAlign() || this.upright()) )) {\n        scroll = 'horizontal';\n    }\n    return scroll;\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/controls/Scroller.js\n// module id = 9\n// module chunks = 0","/**\n * Basic layout stub - see GOWN.LayoutAlignment\n *\n * @class Layout\n * @memberof GOWN.layout\n * @constructor\n */\nfunction Layout() {\n    this.gap = 0;\n    this.padding = 0;\n    this.layoutChildren = true;\n}\n\nmodule.exports = Layout;\n\n/**\n * If the total item height is smaller than the height of the bounds,\n * the items will be aligned to the top.\n *\n * @static\n * @final\n * @type String\n */\nLayout.VERTICAL_ALIGN_TOP = 'top';\n\n/**\n * If the total item height is smaller than the height of the bounds,\n * the items will be aligned to the middle.\n *\n * @static\n * @final\n * @type String\n */\nLayout.VERTICAL_ALIGN_MIDDLE = 'middle';\n\n/**\n * Alignment justified\n *\n * @static\n * @final\n * @type String\n */\nLayout.ALIGN_JUSTIFY = 'justify';\n\n/**\n * If the total item height is smaller than the height of the bounds,\n * the items will be aligned to the bottom.\n *\n * @static\n * @final\n * @type String\n */\nLayout.VERTICAL_ALIGN_BOTTOM = 'bottom';\n\n/**\n * If the total item width is smaller than the width of the bounds, the\n * items will be aligned to the left.\n *\n * @static\n * @final\n * @type String\n */\nLayout.HORIZONTAL_ALIGN_LEFT = 'left';\n\n/**\n * If the total item width is smaller than the width of the bounds, the\n * items will be aligned to the center.\n *\n * @static\n * @final\n * @type String\n */\nLayout.HORIZONTAL_ALIGN_CENTER = 'center';\n\n/**\n * If the total item width is smaller than the width of the bounds, the\n * items will be aligned to the right.\n *\n * @static\n * @final\n * @type String\n */\nLayout.HORIZONTAL_ALIGN_RIGHT = 'right';\n\n/**\n * The space, in pixels, between items.\n *\n * @name GOWN.layout.Layout#gap\n * @type Number\n * @default 0\n */\nObject.defineProperty(Layout.prototype, 'gap', {\n    get: function() {\n        return this._gap;\n    },\n    set: function(value) {\n        if(this._gap === value) {\n            return;\n        }\n        this._gap = value;\n        this._needUpdate = true;\n    }\n});\n\n/**\n * Indicates if the layout needs to be rearranged.\n *\n * @name GOWN.layout.Layout#needUpdate\n * @readonly\n */\nObject.defineProperty(Layout.prototype, 'needUpdate', {\n    get: function() {\n        return this._needUpdate;\n    }\n});\n\n/**\n * Shortcut to set all paddings (left, right, top, bottom)\n *\n * @name GOWN.layout.Layout#padding\n * @type Number\n * @default 0\n */\nObject.defineProperty(Layout.prototype, 'padding', {\n    set: function(value) {\n        this._paddingLeft = value;\n        this._paddingRight = value;\n        this._paddingBottom = value;\n        this._paddingTop = value;\n        this._needUpdate = true;\n    },\n    get: function (){\n        // just return paddingTop, because we do not save the\n        // overall padding value (just like feathers)\n        return this._paddingTop;\n    }\n});\n\n/**\n * The minimum space, in pixels, above the items.\n *\n * @name GOWN.layout.Layout#paddingTop\n * @type Number\n * @default 0\n */\nObject.defineProperty(Layout.prototype, 'paddingTop', {\n    get:  function() {\n        return this._paddingTop;\n    },\n    set: function(value) {\n        if(this._paddingTop === value) {\n            return;\n        }\n        this._paddingTop = value;\n        this._needUpdate = true;\n    }\n});\n\n/**\n * The minimum space, in pixels, below the items.\n *\n * @name GOWN.layout.Layout#paddingBottom\n * @type Number\n * @default 0\n */\nObject.defineProperty(Layout.prototype, 'paddingBottom', {\n    get:  function() {\n        return this._paddingBottom;\n    },\n    set: function(value) {\n        if(this._paddingBottom === value) {\n            return;\n        }\n        this._paddingBottom = value;\n        this._needUpdate = true;\n    }\n});\n\n/**\n * The space, in pixels, that appears to the left, before the first\n * item.\n *\n * @name GOWN.layout.Layout#paddingLeft\n * @type Number\n * @default 0\n */\nObject.defineProperty(Layout.prototype, 'paddingLeft', {\n    get:  function() {\n        return this._paddingLeft;\n    },\n    set: function(value) {\n        if(this._paddingLeft === value) {\n            return;\n        }\n        this._paddingLeft = value;\n        this._needUpdate = true;\n    }\n});\n\n/**\n * The space, in pixels, that appears to the right, after the last item.\n *\n * @name GOWN.layout.Layout#paddingLeft\n * @type Number\n * @default 0\n */\nObject.defineProperty(Layout.prototype, 'paddingRight', {\n    get:  function() {\n        return this._paddingRight;\n    },\n    set: function(value) {\n        if(this._paddingRight === value) {\n            return;\n        }\n        this._paddingRight = value;\n        this._needUpdate = true;\n    }\n});\n\n/**\n * Position (and possibly resize) the supplied items.\n *\n * @param items items that will be layouted {Array}\n * @param viewPortBounds {ViewPortBounds}\n */\n/* jshint unused: false */\nLayout.prototype.layout = function (items, viewPortBounds) {\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/layout/Layout.js\n// module id = 10\n// module chunks = 0","var Layout = require('./Layout');\nvar itemDimensions = require('./utils/itemDimensions');\n\n/**\n * Basic layout\n *\n * @class LayoutAlignment\n * @extends GOWN.layout.Layout\n * @memberof GOWN.layout\n * @constructor\n */\nfunction LayoutAlignment() {\n    Layout.call(this);\n}\n\nLayoutAlignment.prototype = Object.create( Layout.prototype );\nLayoutAlignment.prototype.constructor = LayoutAlignment;\nmodule.exports = LayoutAlignment;\n\n/**\n * Vertical alignment\n *\n * @static\n * @final\n * @type String\n */\nLayoutAlignment.VERTICAL_ALIGNMENT = 'vertical';\n\n/**\n * Horizontal alignment\n *\n * @static\n * @final\n * @type String\n */\nLayoutAlignment.HORIZONTAL_ALIGNMENT = 'horizontal';\n\n/**\n * Apply percentage width/height to items.\n * This will use the explicit width/height and apply it to all items\n * according to its percentages.\n *\n * Percentages have higher priorities than fixed values.\n * So if you set a width higher than 0 but also percentWidth,\n * the width will be recalculated according to percentWidth.\n *\n * @param items The items which get new width and height according to the percent {Array}\n * @param explicit The space we have for the components {Number}\n * @param [alignment=LayoutAlignment.VERTICAL_ALIGNMENT] The alignment mode {String}\n */\nLayoutAlignment.prototype.applyFixedPercent = function(items, explicit, alignment) {\n    var itemCount = items.length;\n    var i, item, itemPercent;\n    for (i = 0; i < itemCount; i++) {\n        item = items[i];\n        // note: this is the opposide of what we normally want\n        itemPercent = 0;\n        if (alignment === LayoutAlignment.HORIZONTAL_ALIGNMENT) {\n            itemPercent = item.percentWidth;\n        } else {\n            itemPercent = item.percentHeight;\n        }\n        if (itemPercent > 0) {\n            if (alignment === LayoutAlignment.HORIZONTAL_ALIGNMENT) {\n                item.width = explicit * itemPercent / 100;\n            } else {\n                item.height = explicit * itemPercent / 100;\n            }\n        }\n    }\n};\n\n/**\n * Apply percentage width/height to items.\n * This will stack items on top/aside of each other\n *\n * Percentages have higher priorities than fixed values.\n * So if you set a width higher than 0 but also percentWidth,\n * the width will be recalculated according to percentWidth.\n *\n * (this function will handle padding and gap, so the explicitWidth is\n * for the whole available width)\n *\n * @param items The items which get new width and height according to the percent {Array}\n * @param explicit space we have for the components {Number}\n */\nLayoutAlignment.prototype.applyPercent = function(items, explicit) {\n    var _hor = (this.alignment === LayoutAlignment.HORIZONTAL_ALIGNMENT);\n\n    var itemCount = items.length;\n    var remaining = explicit;\n    var totalExplicit = 0;\n    var totalPercent = 0;\n\n    var i, itemPercent, item;\n    // sum up width/height required for all items\n    for (i = 0; i < itemCount; i++) {\n        item = items[i];\n        var itemSpace;\n\n        var dimensions = itemDimensions(item);\n\n        itemPercent = _hor ? item.percentWidth : item.percentHeight;\n        itemSpace = _hor ? dimensions[0] : dimensions[1];\n\n        if (!isNaN(itemPercent) && itemPercent !== undefined &&\n            itemPercent !== null) {\n            totalPercent += itemPercent;\n        } else if (!isNaN(itemSpace)) {\n            // no percentWidth/percentHeight set for this item\n            totalExplicit += itemSpace;\n        }\n    }\n\n    // add space for all gaps\n    totalExplicit += this._firstGap > 0 ? this._firstGap : this._gap;\n    totalExplicit += (this._gap * (itemCount - 3));\n    totalExplicit += this._lastGap > 0 ? this._lastGap : this._gap;\n\n    var padding = _hor ?\n        this._paddingLeft + this._paddingRight :\n        this._paddingTop + this._paddingBottom;\n    totalExplicit += padding;\n\n    // use whole available space - if we do not sum up to 100 we will\n    // stretch the items\n    if(totalPercent < 100) {\n        totalPercent = 100;\n    }\n\n    var percentToPixels = (remaining - totalExplicit) / totalPercent;\n    // claculate width/height for each item based on remaining width/height\n    this.applyFixedPercent(items, percentToPixels * 100, this.alignment);\n};\n\n/**\n * Get the current gap (includes first and last gap)\n *\n * @param i The current item position {Number}\n * @param items The list of items (to determine if we are at the last gap) {Array}\n * @private\n */\nLayoutAlignment.prototype._currentGap = function(i, items) {\n    if(!isNaN(this._firstGap) && i === 0)\n    {\n        return this._firstGap;\n    }\n    else if(!isNaN(this._lastGap) && i > 0 && i === items.length - 2)\n    {\n        return this._lastGap;\n    }\n    return this._gap;\n};\n\n/**\n * Calculate the layout for a container (and its children)\n *\n * @param container The container to calculate the layout for\n * @return Number[] The width and height\n */\nLayoutAlignment.prototype.layoutContainer = function(container) {\n    var dimensions = itemDimensions(container);\n    return this.layout(container.children, dimensions[0], dimensions[1]);\n};\n\n/**\n * Position (and possibly resize) the supplied items.\n *\n * @param items The items that will be layouted {Array}\n * @param maxWidth The maximum width for the items {Number}\n * @param maxHeight The maximum height for the items {Number}\n * @return Number[] The width and height\n */\nLayoutAlignment.prototype.layout = function(items, maxWidth, maxHeight) {\n    var _hor = (this.alignment === LayoutAlignment.HORIZONTAL_ALIGNMENT);\n\n    // width/height the current layout takes\n    var width = 0;\n    var height = 0;\n    var paddingStart = _hor ? this._paddingLeft : this._paddingTop;\n\n    // recalculate width/height for items with percentages\n    this.applyPercent(items, _hor ? maxWidth : maxHeight);\n    this.applyFixedPercent(items, _hor ? maxHeight : maxWidth,\n        _hor ?\n            LayoutAlignment.VERTICAL_ALIGNMENT :\n            LayoutAlignment.HORIZONTAL_ALIGNMENT);\n\n    var position = paddingStart;\n    var itemSpace, itemWidth, itemHeight;\n    var dimensions;\n    // calculate item position (x/y coordinates)\n    for(var i = 0; i < items.length; i++)\n    {\n        var item = items[i];\n\n        dimensions = itemDimensions(item);\n        itemWidth = dimensions[0];\n        itemHeight = dimensions[1];\n\n        // move item to position calculated in previous loop\n        if (_hor) {\n            item.x = Math.floor(position);\n            // set height of highest item\n            height = Math.max(itemHeight, height);\n        } else {\n            item.y = Math.floor(position);\n            // set width of widest item\n            width = Math.max(itemWidth, width);\n        }\n        itemSpace = _hor ? itemWidth : itemHeight;\n        // calculate position for next item\n        position += itemSpace + this._currentGap(i, items);\n\n        // if the item has a layout and children, layout the children\n        if (this.layoutChildren && item.children &&\n            item.layout && item.layout.layout) {\n            item.layout.layout(item.children, itemWidth, itemHeight);\n        }\n    }\n    if (_hor) {\n        width = position;\n    } else {\n        height = position;\n    }\n    this._needUpdate = false;\n\n    return [width, height];\n};\n\n/**\n * The space between the first and second element\n *\n * @name GOWN.layout.LayoutAlignment#firstGap\n * @type Number\n */\nObject.defineProperty(LayoutAlignment.prototype, 'firstGap', {\n    set: function(value) {\n        if (value === this._firstGap) {\n            return;\n        }\n        this._firstGap = value;\n        this._needUpdate = true;\n    },\n    get: function() {\n        return this._firstGap;\n    }\n});\n\n/**\n * The space between the last and second-to-last element\n *\n * @name GOWN.layout.LayoutAlignment#lastGap\n * @type Number\n */\nObject.defineProperty(LayoutAlignment.prototype, 'lastGap', {\n    set: function(value) {\n        if (value === this._lastGap) {\n            return;\n        }\n        this._lastGap = value;\n        this._needUpdate = true;\n    },\n    get: function() {\n        return this._lastGap;\n    }\n});\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/layout/LayoutAlignment.js\n// module id = 11\n// module chunks = 0","var Layout = require('./Layout');\nvar itemDimensions = require('./utils/itemDimensions');\n\n/**\n * A layout for tiled rows/columns\n *\n * @class TiledLayout\n * @extends GOWN.layout.Layout\n * @memberof GOWN.layout\n * @constructor\n */\nfunction TiledLayout() {\n    Layout.call(this);\n\n    /**\n     * Use square tiles\n     *\n     * @private\n     * @type bool\n     * @default false\n     */\n    this._useSquareTiles = false;\n\n    /**\n     * The size of the horizontal gap between tiles\n     *\n     * @private\n     * @type Number\n     * @default 0\n     */\n    this._horizontalGap = 0;\n\n    /**\n     * The size of the vertical gap between tiles\n     *\n     * @private\n     * @type Number\n     * @default 0\n     */\n    this._verticalGap = 0;\n\n    /**\n     * Horizontal alignment of the tiles\n     *\n     * @private\n     * @type String\n     * @default TiledLayout.TILE_HORIZONTAL_ALIGN_CENTER\n     */\n    this._tileHorizontalAlign = TiledLayout.TILE_HORIZONTAL_ALIGN_CENTER;\n\n    /**\n     * Vertical alignment of the tiles\n     *\n     * @private\n     * @type String\n     * @default TiledLayout.TILE_VERTICAL_ALIGN_MIDDLE\n     */\n    this._tileVerticalAlign = TiledLayout.TILE_VERTICAL_ALIGN_MIDDLE;\n\n    /**\n     * Paging mode\n     *\n     * @private\n     * @type String\n     * @default TiledLayout.TiledLayout.PAGING_NONE\n     */\n    this._paging = TiledLayout.PAGING_NONE;\n\n    /**\n     * Orientation mode\n     *\n     * @private\n     * @type String\n     * @default TiledLayout.ORIENTATION_ROWS\n     */\n    this._orientation = TiledLayout.ORIENTATION_ROWS;\n\n    /**\n     * Invalidate the layout so that it will be redrawn next time\n     *\n     * @private\n     * @type bool\n     * @default true\n     */\n    this._needUpdate = true;\n}\n\nTiledLayout.prototype = Object.create( Layout.prototype );\nTiledLayout.prototype.constructor = TiledLayout;\nmodule.exports = TiledLayout;\n\n/**\n * Orientation by rows\n *\n * @static\n * @final\n * @type String\n */\nTiledLayout.ORIENTATION_ROWS = 'rows';\n\n/**\n * Orientation by columns\n *\n * @static\n * @final\n * @type String\n */\nTiledLayout.ORIENTATION_COLUMNS = 'columns';\n\n/**\n * If an item height is smaller than the height of a tile, the item will\n * be aligned to the top edge of the tile.\n *\n * @static\n * @final\n * @type String\n */\nTiledLayout.TILE_VERTICAL_ALIGN_TOP = 'top';\n\n/**\n * If an item height is smaller than the height of a tile, the item will\n * be aligned to the middle of the tile.\n *\n * @static\n * @final\n * @type String\n */\nTiledLayout.TILE_VERTICAL_ALIGN_MIDDLE = 'middle';\n\n/**\n * If an item height is smaller than the height of a tile, the item will\n * be aligned to the bottom edge of the tile.\n *\n * @static\n * @final\n * @type String\n */\nTiledLayout.TILE_VERTICAL_ALIGN_BOTTOM = 'bottom';\n\n/**\n * The item will be resized to fit the height of the tile.\n *\n * @static\n * @final\n * @type String\n */\nTiledLayout.TILE_VERTICAL_ALIGN_JUSTIFY = 'justify';\n\n/**\n * If an item width is smaller than the width of a tile, the item will\n * be aligned to the left edge of the tile.\n *\n * @static\n * @final\n * @type String\n */\nTiledLayout.TILE_HORIZONTAL_ALIGN_LEFT = 'left';\n\n/**\n * If an item width is smaller than the width of a tile, the item will\n * be aligned to the center of the tile.\n *\n * @static\n * @final\n * @type String\n */\nTiledLayout.TILE_HORIZONTAL_ALIGN_CENTER = 'center';\n\n/**\n * If an item width is smaller than the width of a tile, the item will\n * be aligned to the right edge of the tile.\n *\n * @static\n * @final\n * @type String\n */\nTiledLayout.TILE_HORIZONTAL_ALIGN_RIGHT = 'right';\n\n/**\n * The item will be resized to fit the width of the tile.\n *\n * @static\n * @final\n * @type String\n */\nTiledLayout.TILE_HORIZONTAL_ALIGN_JUSTIFY = 'justify';\n\n/**\n * The items will be positioned in pages horizontally from left to right.\n *\n * @static\n * @final\n * @type String\n */\nTiledLayout.PAGING_HORIZONTAL = 'horizontal';\n\n/**\n * The items will be positioned in pages vertically from top to bottom.\n *\n * @static\n * @final\n * @type String\n */\nTiledLayout.PAGING_VERTICAL = 'vertical';\n\n/**\n * The items will not be positioned in pages.\n *\n * @static\n * @final\n * @type String\n */\nTiledLayout.PAGING_NONE = 'none';\n\n/**\n * Calculate the layout for a container (and its children)\n *\n * @param container The container to calculate the layout for\n * @return Number[] The width and height\n */\nTiledLayout.prototype.layoutContainer = function(container) {\n    var dimensions = itemDimensions(container);\n    return this.layout(container.children, dimensions[0], dimensions[1]);\n};\n\n/**\n * Position (and possibly resize) the supplied items.\n *\n * @param items The items that will be layouted {Array}\n * @param maxWidth The maximum width for the items {Number}\n * @param maxHeight The maximum height for the items {Number}\n * @return Number[] The width and height\n */\nTiledLayout.prototype.layout = function (items, maxWidth, maxHeight) {\n    var _rows = this._orientation === TiledLayout.ORIENTATION_ROWS;\n    if(items.length === 0) {\n        return [0, 0];\n    }\n\n    maxWidth = maxWidth || NaN;\n    maxHeight = maxHeight || NaN;\n\n    // width/height the current layout takes\n    var width = 0;\n    var height = 0;\n\n    var i, item;\n    var tileWidth = 0;\n    var tileHeight = 0;\n\n    var dimensions;\n    // get size for tiles by saving the highest/widest tile.\n    for(i = 0; i < items.length; i++) {\n        item = items[i];\n        if(!item) {\n            continue;\n        }\n\n        dimensions = itemDimensions(item);\n        tileWidth = Math.max(tileWidth, dimensions[0]);\n        tileHeight = Math.max(tileHeight, dimensions[1]);\n    }\n\n    // make tiles square\n    if (this._useSquareTiles) {\n        if (tileWidth > tileHeight) {\n            tileHeight = tileWidth;\n        } else if (tileHeight > tileWidth) {\n            tileWidth = tileHeight;\n        }\n    }\n\n    // calculate tiles needed (and their width/height)\n    var availableWidth = NaN;\n    var availableHeight = NaN;\n\n    var horizontalTileCount = _rows ? items.length : 1;\n\n    if(!isNaN(maxWidth)) {\n        availableWidth = maxWidth;\n        horizontalTileCount = (maxWidth -\n            this._paddingLeft - this._paddingRight +\n            this._horizontalGap) / (tileWidth + this._horizontalGap);\n    }\n    horizontalTileCount = Math.floor(Math.max(horizontalTileCount, 1));\n\n    var verticalTileCount = _rows ? 1 : items.length;\n    if(!isNaN(maxHeight)) {\n        availableHeight = maxHeight;\n        verticalTileCount = (maxHeight -\n            this._paddingTop - this._paddingBottom +\n            this._verticalGap) / (tileHeight + this._verticalGap);\n    }\n    verticalTileCount = Math.floor(Math.max(verticalTileCount, 1));\n\n    var startX = this._paddingLeft;\n    var startY = this._paddingTop;\n\n    var perPage = horizontalTileCount * verticalTileCount;\n    var pageIndex = 0;\n    var nextPageStartIndex = perPage;\n    var pageStart = _rows ? startX : startY;\n    var positionX = startX;\n    var positionY = startY;\n    var itemIndex = 0;\n    for (i = 0; i < items.length; i++) {\n        item = items[i];\n        if (_rows) {\n            if(itemIndex !== 0 && itemIndex % horizontalTileCount === 0)\n            {\n                positionX = pageStart;\n                positionY += tileHeight + this._verticalGap;\n            }\n        } else { // columns\n            if(itemIndex !== 0 && i % verticalTileCount === 0)\n            {\n                positionX += tileWidth + this._horizontalGap;\n                positionY = pageStart;\n            }\n        }\n        if(itemIndex === nextPageStartIndex) {\n            pageIndex++;\n            nextPageStartIndex += perPage;\n\n            //we can use availableWidth and availableHeight here without\n            //checking if they're NaN because we will never reach a\n            //new page without them already being calculated.\n            if (_rows) {\n                if(this._paging === TiledLayout.PAGING_HORIZONTAL)\n                {\n                    positionX = pageStart === startX + availableWidth * pageIndex;\n                    positionY = startY;\n                } else if(this._paging === TiledLayout.PAGING_VERTICAL) {\n                    positionY = startY + availableHeight * pageIndex;\n                }\n            } else { // columns\n                if(this._paging === TiledLayout.PAGING_HORIZONTAL) {\n                    positionX = startX + availableWidth * pageIndex;\n                } else if(this._paging === TiledLayout.PAGING_VERTICAL) {\n                    positionX = startX;\n                    positionY = pageStart = startY + availableHeight * pageIndex;\n                }\n            }\n        }\n        if(item) {\n            switch(this._tileHorizontalAlign) {\n                case TiledLayout.TILE_HORIZONTAL_ALIGN_JUSTIFY:\n                    item.x = positionX;\n                    item.width = tileWidth;\n                    break;\n                case TiledLayout.TILE_HORIZONTAL_ALIGN_LEFT:\n                    item.x = positionX;\n                    break;\n                case TiledLayout.TILE_HORIZONTAL_ALIGN_RIGHT:\n                    item.x = positionX + tileWidth - item.width;\n                    break;\n                default: //center or unknown\n                    item.x = positionX + (tileWidth - item.width) / 2;\n            }\n            switch(this._tileVerticalAlign) {\n                case TiledLayout.TILE_VERTICAL_ALIGN_JUSTIFY:\n                    item.y = positionY;\n                    item.height = tileHeight;\n                    break;\n                case TiledLayout.TILE_VERTICAL_ALIGN_TOP:\n                    item.y = positionY;\n                    break;\n                case TiledLayout.TILE_VERTICAL_ALIGN_BOTTOM:\n                    item.y = positionY + tileHeight - item.height;\n                    break;\n                default: //middle or unknown\n                    item.y = positionY + (tileHeight - item.height) / 2;\n            }\n\n            // if the item has a layout and children, layout the children\n            if (this.layoutChildren && item.children &&\n                item.layout && item.layout.layout) {\n                dimensions = itemDimensions(item);\n                item.layout.layout(item.children, dimensions[0], dimensions[1]);\n            }\n        }\n        if (_rows) {\n            positionX += tileWidth + this._horizontalGap;\n        } else { // columns\n            positionY += tileHeight + this._verticalGap;\n        }\n        itemIndex++;\n    }\n\n    this._needUpdate = false;\n    return [width, height];\n};\n\n/**\n * Use the same width and height for tiles (calculated by biggest square)\n *\n * @name GOWN.layout.TiledLayout#useSquareTiles\n * @type bool\n * @default false\n */\nObject.defineProperty(TiledLayout.prototype, 'useSquareTiles', {\n    set: function(useSquareTiles) {\n        this._useSquareTiles = useSquareTiles;\n        this._needUpdate = true;\n    },\n    get: function() {\n        return this._useSquareTiles;\n    }\n});\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/layout/TiledLayout.js\n// module id = 12\n// module chunks = 0","module.exports = function (item) {\n    var itemWidth = 0, itemHeight = 0;\n\n    // we prefer pixel positions over calculated ones, so we try to\n    // access the underscore values first.\n    if (!isNaN(item._height)) {\n        itemHeight = item._height;\n    } else if (!isNaN(item.height)) {\n        itemHeight = item.height;\n    }\n\n    if (!isNaN(item._width)) {\n        itemWidth = item._width;\n    } else if (!isNaN(item.width)) {\n        itemWidth = item.width;\n    }\n\n    return [itemWidth, itemHeight];\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/layout/utils/itemDimensions.js\n// module id = 13\n// module chunks = 0","var Control = require('../core/Control');\n\n/**\n * The LayoutGroup allows you to add PIXI.js children that will be positioned\n *\n * @class LayoutGroup\n * @extends GOWN.Control\n * @memberof GOWN\n * @constructor\n * @param layout The layout for the layout group {GOWN.LayoutAlignment}\n * @param [maxWidth=Infinity] The maximum width of the layout group {Number}\n * @param [maxHeight=Infinity] The maximum height of the layout group {Number}\n */\nfunction LayoutGroup(layout, maxWidth, maxHeight) {\n    /**\n     * The layout for the layout group\n     *\n     * @type GOWN.LayoutAlignment\n     */\n    this.layout = layout;\n\n    /**\n     * The percentage width of the positioned children\n     *\n     * @type Number\n     */\n    this.percentWidth = this.percentWidth ;\n\n    /**\n     * The percentage height of the positioned children\n     *\n     * @type Number\n     */\n    this.percentHeight = this.percentHeight;\n\n    /**\n     * The maximum width of the layout group\n     *\n     * @type Number\n     * @default Infinity\n     */\n    this.maxWidth = maxWidth || Infinity;\n\n    /**\n     * The maximum height of the layout group\n     *\n     * @type Number\n     * @default Infinity\n     */\n    this.maxHeight = maxHeight || Infinity;\n\n    Control.call(this);\n\n    /**\n     * Indicates if the layout group has changed\n     *\n     * @private\n     * @type bool\n     * @default true\n     */\n    this._needUpdate = true;\n\n    /**\n     * The layout group is resizable\n     *\n     * @private\n     * @type bool\n     * @default true\n     */\n    this.resizable = true;\n\n    this.on('resize', this.onResize, this);\n}\n\nLayoutGroup.prototype = Object.create( Control.prototype );\nLayoutGroup.prototype.constructor = LayoutGroup;\nmodule.exports = LayoutGroup;\n\n/**\n * Update before draw call (position label)\n * (called from Control.prototype.updateTransform every frame)\n *\n * @protected\n */\nLayoutGroup.prototype.redraw = function() {\n    var dimensionChanged = false;\n    if (this._width && this.maxWidth !== this._width) {\n        this._width = Math.min(this._width, this.maxWidth);\n        dimensionChanged = true;\n    }\n    if (this._height && this.maxHeight !== this._height) {\n        this._height = Math.min(this._height, this.maxHeight);\n        dimensionChanged = true;\n    }\n    if (this.layout &&\n        (this._needUpdate || dimensionChanged || this.layout.needUpdate)) {\n        this.layout.layoutContainer(this);\n        this._needUpdate = false;\n    }\n};\n\n/**\n * onResize callback\n *\n * @protected\n */\nLayoutGroup.prototype.onResize = function() {\n    this._needUpdate = true;\n};\n\n/* istanbul ignore next */\n\n/**\n * Adds one or more children to the container.\n *\n * Multiple items can be added like so: `myContainer.addChild(thingOne, thingTwo, thingThree)`\n *\n * @param {...PIXI.DisplayObject} child - The DisplayObject(s) to add to the container\n * @return {PIXI.DisplayObject} The first child that was added.\n */\nLayoutGroup.prototype.addChild = function(child) {\n    var re = Control.prototype.addChild.call(this, child);\n    this._needUpdate = true;\n    return re;\n};\n\n/* istanbul ignore next */\n\n/**\n * Adds a child to the container at a specified index. If the index is out of bounds an error will be thrown\n *\n * @param {PIXI.DisplayObject} child - The child to add\n * @param {number} index - The index to place the child in\n * @return {PIXI.DisplayObject} The child that was added.\n */\nLayoutGroup.prototype.addChildAt = function(child, pos) {\n    var re = Control.prototype.addChildAt.call(this, child, pos);\n    this._needUpdate = true;\n    return re;\n};\n\n/**\n * Add some space between children\n *\n * @param space Space between children {Number}\n */\nLayoutGroup.prototype.addSpacer = function(space) {\n    var spacer = new Control();\n    spacer.width = spacer.height = space;\n    this.addChild(spacer);\n};\n\n/**\n * Indicates if the given child is inside the viewport (only used for scrolling)\n *\n * @param child One child with set coordinates and dimensions {PIXI.DisplayObject}\n * @param x X-position on the scroll-container {Number}\n * @param y Y-position on the scroll-container {Number}\n * @param width Width of the viewport {Number}\n * @param height Height of the viewport {Number}\n * @returns {boolean}\n */\nLayoutGroup.prototype.childIsRenderAble = function(child, x, y, width, height) {\n    return child.x < width + x &&\n        child.y < height + y &&\n        child.x > x - child.width &&\n        child.y > y - child.height;\n};\n\n/**\n * Update renderable (culling of non visible objects)\n *\n * @param x X-position on the scroll-container {Number}\n * @param y Y-position on the scroll-container {Number}\n * @param width width of the viewport {Number}\n * @param height height of the viewport {Number}\n */\nLayoutGroup.prototype.updateRenderable = function(x, y, width, height) {\n    for(var i=0, j=this.children.length; i<j; i++) {\n        var child = this.children[i];\n        child.renderable = this.childIsRenderAble(child, x, y, width, height);\n    }\n};\n\n/**\n * The width of the group, will get the position and the width of the right child.\n *\n * @name GOWN.LayoutGroup#width\n * @type Number\n */\nObject.defineProperty(LayoutGroup.prototype, 'width', {\n    set: function(width) {\n        this._width = width;\n    },\n    get: function() {\n        if (this._width > 0) {\n            return this._width;\n        }\n        var width = 0;\n        if (this.children) {\n            for (var i = 0; i < this.children.length; i++) {\n                var child = this.getChildAt(i);\n                width = Math.max(width, child.x+child.width);\n            }\n        }\n        return width;\n    }\n});\n\n/**\n * The height of the group, will get the position and the height of the bottom child.\n *\n * @name GOWN.LayoutGroup#height\n * @type Number\n */\nObject.defineProperty(LayoutGroup.prototype, 'height', {\n    set: function(height) {\n        this._height = height;\n    },\n    get: function() {\n        if (this._height > 0) {\n            return this._height;\n        }\n        var height = 0;\n        if (this.children) {\n            for (var i = 0; i < this.children.length; i++) {\n                var child = this.getChildAt(i);\n                height = Math.max(height, child.y+child.height);\n            }\n        }\n        return height;\n    }\n});\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/controls/LayoutGroup.js\n// module id = 14\n// module chunks = 0","var Scroller = require('./Scroller');\nvar ListCollection = require('../data/ListCollection');\nvar LayoutGroup = require('./LayoutGroup');\nvar DefaultListItemRenderer = require('./renderers/DefaultListItemRenderer');\n\n/**\n * The basic list\n *\n * @class List\n * @extends GOWN.Scroller\n * @memberof GOWN\n * @constructor\n * @param [theme] theme for the list {GOWN.Theme}\n */\nfunction List(theme) {\n    Scroller.call(this, theme);\n\n    /**\n     * The skin name\n     *\n     * @type String\n     * @default List.SKIN_NAME\n     */\n    this.skinName = this.skinName || List.SKIN_NAME;\n\n    /**\n     * Determines if items in the list may be selected. (not implemented yet)\n     *\n     * @private\n     * @type bool\n     * @default true\n     */\n    this._selectable = true;\n\n    /**\n     * The index of the currently selected item.\n     *\n     * @private\n     * @type Number\n     * @default -1\n     */\n    this._selectedIndex = -1;\n\n    /**\n     * If true multiple items may be selected at a time.\n     *\n     * @private\n     * @type bool\n     * @default false\n     */\n    this._allowMultipleSelection = false;\n\n    /**\n     * The indices of the currently selected items.\n     *\n     * @private\n     * @type Number[]\n     * @default []\n     */\n    this._selectedIndices = [];\n\n    /**\n     * The item renderer\n     *\n     * @private\n     * @type Array\n     * @default []\n     */\n    this._itemRenderer = [];\n\n    /**\n     * The item change handler\n     *\n     * @private\n     * @type function\n     */\n    this._itemChangeHandler = this.itemChangeHandler.bind(this);\n\n    /**\n     * The item renderer change handler\n     *\n     * @private\n     * @type function\n     */\n    this._itemRendererChangeHandler = this.itemRendererChangeHandler.bind(this);\n\n    /**\n     * The item renderer factory creates a new instance of the item renderer\n     *\n     * @private\n     * @type function\n     * @default this._defaultItemRendererFactory\n     */\n    this._itemRendererFactory = this._itemRendererFactory || this._defaultItemRendererFactory;\n\n    /**\n     * Properties that will be passed down to every item renderer when the list validates.\n     *\n     * @private\n     * @type Object\n     * @default {}\n     */\n    this._itemRendererProperties = {};\n\n    // TODO: itemRendererStyleName (?)\n\n    if (!this.viewPort) {\n        /**\n         * We do not implement ListDataViewPort from feathers\n         * (most of what it does is implemented in List directly to\n         * manage the viewport)\n         * and instead use the normal LayoutGroup (less abstraction, less code)\n         *\n         * @private\n         * @type GOWN.LayoutGroup\n         */\n        this.viewPort = new LayoutGroup();\n    }\n    this.layoutChanged = true;\n}\n\nList.prototype = Object.create( Scroller.prototype );\nList.prototype.constructor = List;\nmodule.exports = List;\n\n/**\n * Default list skin name\n *\n * @static\n * @final\n * @type String\n */\nList.SKIN_NAME = 'list';\n\n/**\n * Dispatched when the selected item changes.\n *\n * @static\n * @final\n * @type String\n */\nList.CHANGE = 'change';\n\n/**\n * A function that is expected to return a new GOWN.DefaultListItemRenderer\n *\n * @param theme The item theme {GOWN.Theme}\n * @returns {DefaultListItemRenderer}\n * @private\n */\nList.prototype._defaultItemRendererFactory = function(theme) {\n    return new DefaultListItemRenderer(theme);\n};\n\n/**\n * Gets called when new data is added or removed\n * to the dataProvider\n *\n * @protected\n */\nList.prototype.itemChangeHandler = function() {\n    // TODO: test code so it will handle if item is removed\n    // deselect removed items\n    var index = this._dataProvider.data.length;\n    if (this._selectedIndex >= index) {\n        this._selectedIndex = -1;\n    }\n    var indexCount = this._selectedIndices.length;\n    for (var i = 0; i < indexCount; i++) {\n        var currentIndex = this._selectedIndices[i];\n        if (currentIndex >= index) {\n            this._selectedIndices.splice(i, 1);\n        }\n    }\n    // force redraw\n    this.dataInvalid = true;\n};\n\n/**\n * Select one of the items\n *\n * @param item The item to select {String}\n */\nList.prototype.selectItem = function(item) {\n    this.selectedIndex = this._dataProvider.data.indexOf(item);\n};\n\n\n/**\n * @private\n */\n// performance increase to avoid using call.. (10x faster)\nList.prototype.scrollerRedraw = Scroller.prototype.redraw;\n\n/**\n * Update before draw call\n *\n * @protected\n */\nList.prototype.redraw = function() {\n    var basicsInvalid = this.dataInvalid;\n    if (basicsInvalid) {\n        this.refreshRenderers();\n    }\n    this.scrollerRedraw();\n\n    if (!this.layout) {\n        var layout = new GOWN.layout.VerticalLayout();\n        layout.padding = 0;\n        layout.gap = 0;\n        layout.horizontalAlign = GOWN.layout.VerticalLayout.HORIZONTAL_ALIGN_JUSTIFY;\n        layout.verticalAlign = GOWN.layout.VerticalLayout.VERTICAL_ALIGN_TOP;\n        this.layout = layout;\n    }\n};\n\n/**\n * Refresh the renderers\n */\nList.prototype.refreshRenderers = function () {\n    //TODO: update only new renderer\n    //      see ListDataViewPort --> refreshInactieRenderers\n    this._itemRenderer.length = 0;\n    if (this._dataProvider && this.viewPort) {\n        this.viewPort.removeChildren();\n        for (var i = 0; i < this._dataProvider.length; i++) {\n            var item = this._dataProvider.getItemAt(i);\n            var itemRenderer = this._itemRendererFactory(this.theme);\n\n            if (this._itemRendererProperties) {\n                itemRenderer.labelField = this._itemRendererProperties.labelField;\n            }\n\n            itemRenderer.on('change', this._itemRendererChangeHandler);\n            itemRenderer.data = item;\n            this._itemRenderer.push(itemRenderer);\n            this.viewPort.addChild(itemRenderer);\n        }\n    }\n\n    this.dataInvalid = false;\n};\n\n/**\n * Item catch/forward renderer change event.\n * This is thrown when the state of the itemRenderer changes\n * (e.g. from unselected to selected), not when the data changes\n *\n * @protected\n */\nList.prototype.itemRendererChangeHandler = function(itemRenderer, value) {\n    // TODO: update selected item\n    var i;\n    this._selectedIndices.length = 0;\n\n    if (!this.allowMultipleSelection) {\n        for (i = 0; i < this._itemRenderer.length; i++) {\n            if (this._itemRenderer[i] !== itemRenderer && value === true) {\n                this._itemRenderer[i].selected = false;\n            }\n        }\n        if (value === true) {\n            this._selectedIndices = [this._itemRenderer.indexOf(itemRenderer)];\n        }\n    } else {\n        for (i = 0; i < this._itemRenderer.length; i++) {\n            if (this._itemRenderer[i].selected === true) {\n                this._selectedIndices.push(i);\n            }\n        }\n    }\n\n    this.emit(List.CHANGE, itemRenderer, value);\n};\n\n/**\n * Set layout and pass event listener to it\n *\n * @name GOWN.List#layout\n * @type LayoutAlignment\n */\nObject.defineProperty(List.prototype, 'layout', {\n    set: function(layout) {\n        if (this._layout === layout) {\n            return;\n        }\n        if (this.viewPort) {\n            // this is different from feathers - there the viewport does not\n            // know the layout (feathers uses ListDataViewPort, not LayoutGroup\n            // as viewPort for List)\n            this.viewPort.layout = layout;\n        }\n        // TODO: this.invalidate(INVALIDATION_FLAG_LAYOUT);\n    },\n    get: function() {\n        return this._layout;\n    }\n});\n\n/**\n * Set item renderer properties (e.g. labelField) and update all itemRenderer\n *\n * @name GOWN.List#itemRendererProperties\n * @type Object\n */\nObject.defineProperty(List.prototype, 'itemRendererProperties', {\n    set: function(itemRendererProperties) {\n        this._itemRendererProperties = itemRendererProperties;\n        this.dataInvalid = true;\n    },\n    get: function() {\n        return this._itemRendererProperties;\n    }\n});\n\n\n/**\n * Set item renderer factory (for custom item Renderer)\n *\n * @name GOWN.List#itemRendererFactory\n * @type function\n */\nObject.defineProperty(List.prototype, 'itemRendererFactory', {\n    set: function(itemRendererFactory) {\n        this._itemRendererFactory = itemRendererFactory;\n        this.dataInvalid = true;\n    },\n    get: function() {\n        return this._itemRendererFactory;\n    }\n});\n\n/**\n * Allow/disallow multiple selection.\n * If selection has been disallowed, deselect all but one.\n *\n * @name GOWN.List#allowMultipleSelection\n * @type bool\n */\n Object.defineProperty(List.prototype, 'allowMultipleSelection', {\n     set: function(allowMultipleSelection) {\n         if (this._allowMultipleSelection === allowMultipleSelection) {\n             return;\n         }\n         this._allowMultipleSelection = allowMultipleSelection;\n\n         if (!this._allowMultipleSelection && this._selectedIndices) {\n             // only last index is selected\n             this._selectedIndices = [this._selectedIndices.pop()];\n         }\n         //TODO: this.refreshSelection();\n     },\n     get: function() {\n         return this._allowMultipleSelection;\n     }\n });\n\n/**\n * The index of the selected item\n *\n * @name GOWN.List#selectedIndex\n * @type Number\n */\nObject.defineProperty(List.prototype, 'selectedIndex', {\n    set: function(selectedIndex) {\n        this._selectedIndex = selectedIndex;\n        // force redraw\n        this.dataInvalid = true;\n    },\n    get: function() {\n        return this._selectedIndex;\n    }\n});\n\n/**\n * dataProvider for list.\n * The dataProvider is a structure that provides the data.\n * In its simplest form it is an array containing the data\n *\n * @name GOWN.List#dataProvider\n * @type Array\n */\nObject.defineProperty(List.prototype, 'dataProvider', {\n    set: function(dataProvider) {\n        if (this._dataProvider === dataProvider) {\n            return;\n        }\n        if (!(dataProvider instanceof ListCollection || dataProvider === null)) {\n            throw new Error('the dataProvider has to be a GOWN.ListCollection');\n        }\n\n        if (this._dataProvider) {\n            this._dataProvider.off(ListCollection.CHANGED, this._itemChangeHandler);\n        }\n        this._dataProvider = dataProvider;\n\n        //reset the scroll position because this is a drastic change and\n        //the data is probably completely different\n        this.horizontalScrollPosition = 0;\n        this.verticalScrollPosition = 0;\n\n        if (this._dataProvider) {\n            this._dataProvider.on(ListCollection.CHANGED, this._itemChangeHandler);\n        }\n\n        this.selectedIndex = -1;\n        this.dataInvalid = true;\n    },\n    get: function() {\n        return this._dataProvider;\n    }\n});\n\n// TODO: selectedItem\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/controls/List.js\n// module id = 15\n// module chunks = 0","var Scrollable = require('./Scrollable');\n\n// TODO: decrement/increment Button\n// TODO: thumbFactory?\n// TODO: this.showButtons\n\n/**\n * Scroll bar with thumb\n * hosting some Viewport (e.g. a ScrollContainer or a Texture)\n *\n * @class ScrollBar\n * @extends GOWN.Scrollable\n * @memberof GOWN\n * @constructor\n * @param [direction=Scrollable.HORIZONTAL] Direction of the scroll bar (horizontal/vertical) {String}\n * @param [theme] theme for the scrollbar {GOWN.Theme}\n */\nfunction ScrollBar(direction, theme) {\n    /**\n     * The skin name\n     *\n     * @type String\n     * @default ScrollBar.SKIN_NAME\n     */\n    this.skinName = this.skinName || ScrollBar.SKIN_NAME;\n\n    // this.viewPort = container;\n\n    this.direction = direction === undefined ?\n        Scrollable.HORIZONTAL : direction;\n\n    // if (container) {\n    //     // move thumb when viewPort moves\n    //     container[this.direction + '_bar'] = this;\n    // }\n    Scrollable.call(this, theme);\n}\n\nScrollBar.prototype = Object.create( Scrollable.prototype );\nScrollBar.prototype.constructor = ScrollBar;\nmodule.exports = ScrollBar;\n\n/**\n * The minimum thumb width\n *\n * @type Number\n * @default 20\n */\nScrollBar.prototype.minThumbWidth = 20;\n\n/**\n * The minimum thumb height\n *\n * @type Number\n * @default 20\n */\nScrollBar.prototype.minThumbHeight = 20;\n\n/**\n * Default scroll bar skin name\n *\n * @static\n * @final\n * @type String\n */\nScrollBar.SKIN_NAME = 'scroll_bar';\n\n/**\n * @private\n */\nScrollBar.prototype.scrollableredraw = Scrollable.prototype.redraw;\n\n/**\n * Recalculate scroll thumb width/height\n *\n * @private\n */\nScrollBar.prototype.redraw = function() {\n    if (this.invalidTrack) {\n        if (this.container && this.container.viewPort && this.thumb) {\n            if (this.direction === Scrollable.HORIZONTAL) {\n                this.thumb.width = Math.max(this.minThumbWidth,\n                    this.container.width /\n                    (this.container.viewPort.width / this.container.width));\n            } else {\n                this.thumb.height = Math.max(this.minThumbHeight,\n                    this.container.height /\n                    (this.container.viewPort.height / this.container.height));\n            }\n        }\n        this.scrollableredraw(this);\n    }\n};\n\n/**\n * Thumb has been moved. Scroll content to position\n *\n * @param x x-position to scroll to (ignored when vertical)\n * @param y y-position to scroll to (ignored when horizontal)\n */\nScrollBar.prototype.thumbMoved = function(x, y) {\n    if (this.container && this.container.viewPort) {\n        if (this._direction === Scrollable.HORIZONTAL) {\n            this.container._scrollContent(\n                -(this.container.viewPort.width - this.container.width) *\n                    (x / (this.container.width - this.thumb.width)),\n                0);\n        } else if (this._direction === Scrollable.VERTICAL) {\n            this.container._scrollContent(\n                0,\n                -(this.container.viewPort.height - this.container.height) *\n                    (y / (this.container.height - this.thumb.height)));\n        }\n    }\n};\n\n/**\n * Determines if the scroll bar's thumb can be dragged horizontally or\n * vertically.\n *\n * @name GOWN.ScrollBar#direction\n * @type String\n */\nObject.defineProperty(ScrollBar.prototype, 'direction', {\n    get: function() {\n        return this._direction;\n    },\n    set: function(direction) {\n        this._direction = direction;\n        this.invalid = true;\n    }\n});\n\n/**\n * Value of the scrollbar\n *\n * @name GOWN.ScrollBar#value\n * @type Number\n */\n//TODO: put in Scrollable\nObject.defineProperty(ScrollBar.prototype, 'value', {\n    get: function() {\n        return this._value;\n    },\n    set: function(value) {\n        this._value = value;\n    }\n});\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/controls/ScrollBar.js\n// module id = 16\n// module chunks = 0","var Button = require('./Button');\n\n/**\n * Thumb button that can be moved on the scrollbar\n *\n * @class ScrollThumb\n * @extends GOWN.Button\n * @memberof GOWN\n * @constructor\n * @param scrollable The scrollable that the scroll thumb belongs to {GOWN.Scrollable}\n * @param [theme] theme for the scroll thumb {GOWN.Theme}\n * @param [skinName=ScrollThumb.SKIN_NAME] name of the scroll thumb skin {String}\n */\nfunction ScrollThumb(scrollable, theme, skinName) {\n    /**\n     * The scrollable that the scroll thumb belongs to\n     *\n     * @type GOWN.Scrollable\n     */\n    this.scrollable = scrollable;\n\n    var defaultSkin = ScrollThumb.SKIN_NAME;\n    if (!theme.thumbSkin) {\n        defaultSkin = Button.SKIN_NAME;\n    }\n\n    /**\n     * The skin name\n     *\n     * @type String\n     * @default ScrollThumb.SKIN_NAME\n     */\n    this.skinName = skinName || defaultSkin;\n\n    if (theme.thumbSkin) {\n        /**\n         * The valid scroll thumb states\n         *\n         * @private\n         * @type String[]\n         * @default ScrollThumb.THUMB_STATES\n         */\n        this._validStates = ScrollThumb.THUMB_STATES;\n    }\n    if (theme.thumbWidth) {\n        /**\n         * The width of the scroll thumb\n         *\n         * @type Number\n         */\n        this.width = theme.thumbWidth;\n    }\n    if (theme.thumbHeight) {\n        /**\n         * The height of the scroll thumb\n         *\n         * @type Number\n         */\n        this.height = theme.thumbHeight;\n    }\n\n    Button.call(this, theme, this.skinName);\n\n    /**\n     * Invalidate track so that it will be redrawn next time\n     *\n     * @private\n     * @type bool\n     * @default true\n     */\n    this.invalidTrack = true;\n\n    this.on('touchmove', this.handleMove, this);\n    this.on('mousemove', this.handleMove, this);\n\n    /* jshint unused: false */\n    this.on('touchdown', this.handleDown, this);\n    this.on('mousedown', this.handleDown, this);\n    /* jshint unused: false */\n\n    this.on('mouseup', this.handleUp, this);\n    this.on('touchend', this.handleUp, this);\n    this.on('touchendoutside', this.handleUp, this);\n}\n\nScrollThumb.prototype = Object.create( Button.prototype );\nScrollThumb.prototype.constructor = ScrollThumb;\nmodule.exports = ScrollThumb;\n\n/**\n * Default scroll thumb skin name\n *\n * @static\n * @final\n * @type String\n */\nScrollThumb.SKIN_NAME = 'scroll_thumb';\n\n/**\n * Names of possible states for a scroll thumb\n *\n * @static\n * @final\n * @type String[]\n * @private\n */\nScrollThumb.THUMB_STATES = [\n    'horizontal_up', 'vertical_up',\n    'horizontal_down', 'vertical_down',\n    'horizontal_hover', 'vertical_hover'\n];\n\nvar originalCurrentState = Object.getOwnPropertyDescriptor(Button.prototype, 'currentState');\n\n/**\n * The current state (one of _validStates)\n *\n * @name GOWN.ScrollThumb#currentState\n * @type String\n */\nObject.defineProperty(ScrollThumb.prototype, 'currentState',{\n    set: function(value) {\n        if (this.theme.thumbSkin) {\n            // use skin including direction instead of default skin\n            value = this.scrollable.direction + '_' + value;\n        }\n        originalCurrentState.set.call(this, value);\n    }\n});\n\nScrollThumb.prototype.handleDown = function(mouseData) {\n    var local = mouseData.data.getLocalPosition(this.scrollable);\n    this.scrollable._start = [local.x, local.y];\n    //this.scrollable.handleDown(mouseData);\n    mouseData.stopPropagation();\n};\n\n/**\n * onMove callback\n *\n * @protected\n */\nScrollThumb.prototype.handleMove = function (mouseData) {\n    this.scrollable.handleMove(mouseData);\n};\n\n/**\n * onUp callback\n *\n * @protected\n */\nScrollThumb.prototype.handleUp = function (mouseData) {\n    this.scrollable.handleUp(mouseData);\n};\n\n/**\n * Show track icon on thumb\n *\n * @param skin The new scroll thumb skin name {String}\n */\nScrollThumb.prototype.showTrack = function(skin) {\n    if (this.skin !== skin) {\n        if(this.skin) {\n            this.removeChild(this.skin);\n        }\n\n        this.addChild(skin);\n        this.skin = skin;\n    }\n    skin.x = Math.floor((this.width - skin.getBounds().width )/ 2);\n    skin.y = Math.floor((this.height - skin.getBounds().height )/ 2);\n    this.invalidTrack = false;\n};\n\n/**\n * Redraw the skin\n *\n * @private\n */\nScrollThumb.prototype.redraw = function() {\n    if (this.invalidTrack && this.theme.thumbSkin) {\n        this.fromSkin(this.scrollable.direction+'_thumb', this.showTrack);\n    }\n};\n\n/**\n * Move the thumb on the scroll bar within its bounds\n *\n * @param x New calculated x position of the thumb {Number}\n * @param y New calculated y position of the thumb {Number}\n * @returns {boolean} returns true if the position of the thumb has been\n * moved\n */\nScrollThumb.prototype.move = function(x, y) {\n    if (this.scrollable.direction === GOWN.Scrollable.HORIZONTAL) {\n        if (isNaN(x)) {\n            return false;\n        }\n        x = Math.min(x, this.scrollable.maxWidth());\n        x = Math.max(x, 0);\n        if (x !== this.x) {\n            this.x = x;\n            return true;\n        }\n    } else {\n        if (isNaN(y)) {\n            return false;\n        }\n        y = Math.min(y, this.scrollable.maxHeight());\n        y = Math.max(y, 0);\n        if (y !== this.y) {\n            this.y = y;\n            return true;\n        }\n    }\n    return false;\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/controls/ScrollThumb.js\n// module id = 17\n// module chunks = 0","var InputControl = require('./InputControl'),\n    InputWrapper = require('../utils/InputWrapper'),\n    position = require('../utils/position');\n\n/**\n * The basic Text Input - based on PIXI.Input.\n * Input by Sebastian Nette, see https://github.com/SebastianNette/PIXI.Input\n *\n * @class TextInput\n * @extends GOWN.InputControl\n * @memberof GOWN\n * @constructor\n * @param [theme] theme for the text input {GOWN.Theme}\n * @param [skinName=TextInput.SKIN_NAME] name of the text input skin {String}\n */\nfunction TextInput(theme, skinName) {\n    // show and load background image as skin (exploiting skin states)\n    /**\n     * The skin name\n     *\n     * @type String\n     * @default TextInput.SKIN_NAME\n     */\n    this.skinName = skinName || TextInput.SKIN_NAME;\n\n    /**\n     * The valid text input states\n     *\n     * @private\n     * @type String[]\n     * @default InputControl.stateNames\n     */\n    this._validStates = this._validStates || InputControl.stateNames;\n\n    InputControl.call(this, theme);\n}\n\nTextInput.prototype = Object.create(InputControl.prototype);\nTextInput.prototype.constructor = TextInput;\nmodule.exports = TextInput;\n\n/**\n * Default text area skin name\n *\n * @static\n * @final\n * @type String\n */\nTextInput.SKIN_NAME = 'text_input';\n\n/**\n * Set display as password (show text with \"*\")\n *\n * @name GOWN.TextInput#displayAsPassword\n * @type bool\n */\nObject.defineProperty(TextInput.prototype, 'displayAsPassword', {\n    get: function () {\n        return this._displayAsPassword;\n    },\n    set: function (displayAsPassword) {\n        this._displayAsPassword = displayAsPassword;\n        this.setText(this._origText);\n    }\n});\n\n/**\n * Get the text lines as an array\n *\n * @returns {Array|*} Returns an array with one text line per array element\n */\nTextInput.prototype.getLines = function() {\n    return [this.text];\n};\n\n/**\n * @private\n */\nTextInput.prototype.inputControlSetText = InputControl.prototype.setText;\n\n/**\n * Set the text\n *\n * @param text The text to display {String}\n */\nTextInput.prototype.setText = function(text) {\n    if (this._displayAsPassword) {\n        text = text.replace(/./gi, '*');\n    }\n    var hasText = this.pixiText !== undefined;\n    this.inputControlSetText(text);\n    if (!hasText && this.height > 0) {\n        position.centerVertical(this.pixiText);\n        // set cursor to start position\n        if (this.cursor) {\n            this.cursor.y = this.pixiText.y;\n        }\n    }\n};\n\n/**\n * Update the selection\n *\n * @private\n */\nTextInput.prototype.updateSelectionBg = function() {\n    var start = this.selection[0],\n        end = this.selection[1];\n\n    this.selectionBg.clear();\n    if (start !== end) {\n        start = this.textWidth(this.text.substring(0, start));\n        end = this.textWidth(this.text.substring(0, end));\n        this.selectionBg.beginFill(0x0080ff);\n        this.selectionBg.drawRect(start, 0, end - start, this.pixiText.height);\n        this.selectionBg.x = this.pixiText.x;\n        this.selectionBg.y = this.pixiText.y;\n    }\n};\n\n\n// TODO: autoSizeIfNeeded\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/controls/TextInput.js\n// module id = 18\n// module chunks = 0","var ToggleButton = require('../ToggleButton');\nvar Button = require('../Button');\n\n/**\n * The default list item renderer.\n *\n * @class DefaultListItemRenderer\n * @extends GOWN.ToggleButton\n * @memberof GOWN\n * @constructor\n * @param [theme] theme for the DefaultListItemRenderer {GOWN.Theme}\n */\nfunction DefaultListItemRenderer(theme) {\n    ToggleButton.call(this, theme);\n\n    /**\n     * A key in the item data that will be shown as label for the item.\n     * e.g. 'text' for item.text.\n     * will be ignored if labelFunction is set.\n     *\n     * the item will be shown directly (using toString) if\n     * labelField and labelFunction are not set.\n     *\n     * @type String\n     * @default 'text'\n     */\n    this.labelField = 'text';\n\n    /**\n\t * A function used to generate label text for a specific item. If this\n\t * function is not null, then the <code>labelField</code> will be\n\t * ignored.\n\t *\n\t * <p>In the following example, the label function is customized:</p>\n\t * renderer.labelFunction = function( item ) {\n\t *    return item.firstName + \" \" + item.lastName;\n\t * };</listing>\n\t *\n     * @type function\n\t * @default null\n\t *\n\t * @see #labelField\n\t */\n    this.labelFunction = null;\n\n    /**\n     * The list item data\n     *\n     * @private\n     * @default null\n     */\n    this._data = null;\n\n    /**\n     * Overwrite data values before next draw call.\n     *\n     * @private\n     * @type bool\n     * @default false\n     */\n    this.dataInvalid = false;\n\n\n    // TODO: use min/max and/or default values instead, because percentages\n    // have higher priority, so this forces the user to remove the percentage\n    // before he can set pixel values.\n    /**\n     * Percent width\n     *\n     * @private\n     * @type Number\n     * @default 100\n     */\n    this.percentWidth = 100;\n\n    /**\n     * Percent height\n     *\n     * @private\n     * @type Number\n     * @default 100\n     */\n    this.percentHeight = 100;\n}\n\nDefaultListItemRenderer.prototype = Object.create( ToggleButton.prototype );\nDefaultListItemRenderer.prototype.constructor = DefaultListItemRenderer;\nmodule.exports = DefaultListItemRenderer;\n\n// performance increase to avoid using call.. (10x faster)\nDefaultListItemRenderer.prototype.redrawButton = Button.prototype.redraw;\n\n/**\n * Update button text before draw call\n */\nDefaultListItemRenderer.prototype.redraw = function() {\n    if (this.dataInvalid) {\n        this.commitData();\n    }\n    this.redrawButton();\n};\n\n/**\n * Updates the renderer to display the item's data. Override this\n * function to pass data to sub-components and react to data changes.\n *\n * <p>Don't forget to handle the case where the data is <code>null</code>.</p>\n */\nDefaultListItemRenderer.prototype.commitData = function() {\n    if(this._data) {\n        this.label = this.itemToLabel(this._data);\n    }\n    this.dataInvalid = false;\n};\n\n/**\n * Using <code>labelField</code> and <code>labelFunction</code>,\n * generates a label from the item.\n *\n * <p>All of the label fields and functions, ordered by priority:</p>\n * <ol>\n *     <li><code>labelFunction</code></li>\n *     <li><code>labelField</code></li>\n * </ol>\n *\n * @param item the item that gets converted to a label\n */\nDefaultListItemRenderer.prototype.itemToLabel = function(item) {\n\tif (this.labelFunction) {\n\t\treturn this.labelFunction(item).toString();\n\t}\n\telse if (this.labelField && item && item.hasOwnProperty(this.labelField)) {\n\t\treturn item[this.labelField].toString();\n\t}\n\telse if(item) {\n\t\treturn item.toString();\n\t}\n\treturn '';\n};\n\n/**\n * Data\n *\n * @name GOWN.DefaultListItemRenderer#data\n */\nObject.defineProperty(DefaultListItemRenderer.prototype, 'data', {\n    set: function(data) {\n        this._data = data;\n        this.dataInvalid = true;\n    },\n    get: function() {\n        return this._data;\n    }\n});\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/controls/renderers/DefaultListItemRenderer.js\n// module id = 19\n// module chunks = 0","var EventEmitter = require('eventemitter3');\n\n/**\n * Used to handle data manipulation (emit events when data changes, so for\n *  example a List showing it can be updated and the user does not need to\n *  call a special update function every time he adds/removes data from the\n *  ListCollection.\n * Use the ListCollection functions to manipulate the data-array OR modify it\n * using the default array-functions and dispatch the CHANGED-Event yourself.\n *\n * @class ListCollection\n * @extends EventEmitter\n * @memberof GOWN\n * @constructor\n * @param [data] The data source {Array}\n */\nfunction ListCollection(data) {\n    EventEmitter.call(this);\n\n    if (!data) {\n        data = [];\n    }\n    this.data = data;\n}\n\nListCollection.prototype = Object.create( EventEmitter.prototype );\nListCollection.prototype.constructor = ListCollection;\nmodule.exports = ListCollection;\n\n/**\n * Dispatched when the list data gets changed.\n *\n * @static\n * @final\n * @type String\n */\nListCollection.CHANGED = 'changed';\n\n/**\n * Dispatched when the list gets cleared.\n *\n * @static\n * @final\n * @type String\n */\nListCollection.RESET = 'reset';\n\n/**\n * Dispatched when a list item gets removed from the list.\n *\n * @static\n * @final\n * @type String\n */\nListCollection.REMOVE_ITEM = 'removeItem';\n\n/**\n * Dispatched when a list item gets replaced.\n *\n * @static\n * @final\n * @type String\n */\nListCollection.REPLACE_ITEM = 'replaceItem';\n\n/**\n * Dispatched when an item gets added to the list.\n *\n * @static\n * @final\n * @type String\n */\nListCollection.ADD_ITEM = 'addItem';\n\n/**\n * The data source for this collection. Has to be an array.\n *\n * @name GOWN.ListCollection#data\n * @type Array\n */\nObject.defineProperty(ListCollection.prototype, 'data', {\n    set: function(data) {\n        this._data = data;\n        this.emit(ListCollection.CHANGED);\n    },\n    get: function() {\n        return this._data;\n    }\n});\n\n/**\n * The length of the list\n *\n * @name GOWN.ListCollection#length\n * @type Number\n * @readonly\n */\nObject.defineProperty(ListCollection.prototype, 'length', {\n    get: function() {\n        if (!this.data) {\n            return 0;\n        }\n        return this._data.length;\n    }\n});\n\n/**\n * Get an item at a specific index\n *\n * @param index The index to get the item from {Number}\n * @returns {Object} The item at the specific index\n */\nListCollection.prototype.getItemAt = function(index) {\n    return this._data[index];\n};\n\n/**\n * Get the index of a list item\n *\n * @param item The list item {Object}\n * @returns {Number} The item index\n */\nListCollection.prototype.getItemIndex = function(item) {\n    return this._data.indexOf(item);\n};\n\n/**\n * Add a new item between index and index+1\n *\n * @param item The new item {Object}\n * @param index The index where the item gets inserted {Number}\n */\nListCollection.prototype.addItemAt = function(item, index) {\n    this._data.splice(index, 0, item);\n    this.emit(ListCollection.CHANGE, item);\n    this.emit(ListCollection.ADD_ITEM, item, index);\n};\n\n/**\n * Removes the item at the specific index from the collection and\n * returns it.\n *\n * @param index The item index {Number}\n * @returns {Object}\n */\nListCollection.prototype.removeItemAt = function (index) {\n    var item = this._data.splice(index, 1);\n    this.emit(ListCollection.CHANGE, item);\n    this.emit(ListCollection.REMOVE_ITEM, item, index);\n    return item;\n};\n\n/**\n * Removes an item from the list\n *\n * @param item The item to remove {Object}\n */\nListCollection.prototype.removeItem = function (item) {\n    var index = this.getItemIndex(item);\n    if (index >= 0) {\n\t\tthis.removeItemAt(index);\n\t}\n};\n\n/**\n * Removes all items from the list\n *\n * @param item\n */\nListCollection.prototype.removeAll = function (item) {\n    if (this._data.length === 0) {\n        return;\n    }\n    this._data.length = 0;\n    this.emit(ListCollection.CHANGE, item);\n    this.emit(ListCollection.RESET);\n};\n\n/**\n * Set an item at a specific index\n *\n * @param item The item that gets added {Object}\n * @param index The index where the item gets set {Number}\n */\nListCollection.prototype.setItemAt = function (item, index) {\n    this._data[index] = item;\n    this.emit(ListCollection.CHANGE, item);\n    this.emit(ListCollection.REPLACE_ITEM, index, item);\n};\n\n/**\n * Push an item on the list at the last position\n *\n * @param item The item to push {Object}\n */\nListCollection.prototype.push = function (item) {\n    this._data.push(item);\n    this.emit(ListCollection.CHANGE, item);\n    this.emit(ListCollection.ADD_ITEM, item, this._data.length-1);\n};\n\n/**\n * Pop the last item from the last\n */\nListCollection.prototype.pop = function () {\n    var item = this._data.pop();\n    this.emit(ListCollection.CHANGE, item);\n    this.emit(ListCollection.REMOVE_ITEM, item, this._data.length);\n};\n\n/**\n * Add an item to the front of the list\n *\n * @param item The item to add {Object}\n */\nListCollection.prototype.unshift = function (item) {\n    this.addItemAt(item, 0);\n};\n\n/**\n * Remove the item at the front of the list\n */\nListCollection.prototype.shift = function () {\n    this.removeItemAt(0);\n};\n\n/**\n * Checks if an item is in the list\n *\n * @param item The item to check {Object}\n * @returns {boolean} True if the item is in the list, otherwise false\n */\nListCollection.prototype.contains = function (item) {\n    return this.getItemIndex(item) >= 0;\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/data/ListCollection.js\n// module id = 20\n// module chunks = 0","var ScaleContainer = require('../utils/ScaleContainer');\nvar ThemeFont = require('./ThemeFont');\nvar EventEmitter = require('eventemitter3');\n\n/**\n * Basic theming/skinning.\n *\n * @class Theme\n * @memberof GOWN\n * @constructor\n * @param [global=true] Set theme as the global GOWN.theme\n */\nfunction Theme(global) {\n    EventEmitter.call(this);\n\n    /**\n     * At its core a theme is just a dict that holds a collection of skins.\n     * Every skin is a function that returns a renderable item (e.g. a texture)\n     *\n     * @private\n     * @type Object\n     */\n    this._skins = {};\n\n    if (this.textStyle) {\n        this.textStyle.clone();\n    } else {\n        /**\n         * The default font for all labels (e.g. button label)\n         *\n         * @type GOWN.ThemeFont\n         */\n        this.textStyle = new ThemeFont();\n    }\n\n    if (global === true || global === undefined) {\n        GOWN.theme = this;\n    }\n\n    /**\n     * The cache for the theme textures\n     *\n     * @type PIXI.Texture[]\n     */\n    this.textureCache = null;\n\n    /**\n     * Use an own skin for scroll/slider track (uses the default button skin otherwise)\n     *\n     * @type bool\n     * @default true\n     */\n    this.thumbSkin = true;\n\n    /**\n     * Desktop themes have a hover skin if the mouse moves over the button\n     *\n     * @type bool\n     * @default true\n     */\n    this.hoverSkin = true;\n}\n\nTheme.prototype = Object.create( EventEmitter.prototype );\nTheme.prototype.constructor = Theme;\nmodule.exports = Theme;\n\n/**\n * Dispatched when a skin has changed\n *\n * @static\n * @final\n * @type String\n */\nTheme.SKIN_CHANGED = 'skin_changed';\n\n/**\n * Dispatched when a theme texture has loaded\n *\n * @static\n * @final\n * @type String\n */\nTheme.LOADED = 'loaded';\n\n/**\n * Dispatched when a theme texture has been loaded and all controls have an assigned skin\n *\n * @static\n * @final\n * @type String\n */\nTheme.COMPLETE = 'complete';\n\n/**\n * Set the skin for a UI component\n *\n * @param comp UI component that we want to skin, e.g. \"button\" {String}\n * @param id Id for the skin (e.g. state when the skinning function will be applied {String}\n * @param skin skin-function that will executed once the component gets updated {function}\n */\nTheme.prototype.setSkin = function(comp, id, skin) {\n    this._skins[comp] = this._skins[comp] || {};\n    this._skins[comp][id] = skin;\n    this.emit(Theme.SKIN_CHANGED, comp, this);\n};\n\n/**\n * Set up the asset loader and load files\n *\n * @param jsonPath The path to the json file {String}\n */\nTheme.prototype.addImage = function(jsonPath) {\n    this._jsonPath = jsonPath;\n    GOWN.loader.add(jsonPath)\n        .once('complete', this.loadComplete.bind(this));\n};\n\n/**\n * Executed when the image has been loaded.\n * Sets cache and emits events.\n *\n * @see addImage\n * @see resource-loader https://github.com/englercj/resource-loader\n *\n * @param loader The loader {Loader}\n * @param resources The loaded resources {Object}\n */\nTheme.prototype.loadComplete = function(loader, resources) {\n    this.setCache(resources);\n    this.emit(Theme.LOADED, this);\n    this.applyTheme();\n};\n\n/**\n * Set the texture cache (normally called when loading is complete)\n *\n * @param resources The loaded resources {Object}\n */\nTheme.prototype.setCache = function(resources) {\n    this.textureCache = resources[this._jsonPath].textures;\n};\n\n/**\n * Apply the theme to the controls\n * (normally executed only once after the texture has been loaded)\n */\nTheme.prototype.applyTheme = function() {\n    this.emit(Theme.COMPLETE, this);\n};\n\n/**\n * Create a new Scalable Container\n *\n * @param name Id defined in the asset loader {String}\n * @param grid Grid defining the inner square of the scalable container {PIXI.Rectangle}\n * @param [middleWidth] The alternative width to crop the center piece\n * (only needed if we want to scale the image smaller than the original) {Number}\n * @param [centerHeight] The alternative height to crop the center piece\n * (only needed if we want to scale the image smaller than the original) {Number}\n * @return {Function}\n */\nTheme.prototype.getScaleContainer = function(name, grid, middleWidth, centerHeight) {\n    var scope = this;\n    return function() {\n        var texture = scope.textureCache[name];\n        if(!texture) {\n            throw new Error('The frameId \"' + name + '\" does not exist ' +\n            'in the texture cache');\n        }\n        return new ScaleContainer(texture, grid, middleWidth, centerHeight);\n    };\n};\n\n/**\n * Create a new Sprite from an image name\n *\n * @param name Id defined in the asset loader {String}\n * @returns {function}\n */\nTheme.prototype.getImage = function(name) {\n    var scope = this;\n    return function() {\n        if (scope.textureCache && name in scope.textureCache) {\n            return new PIXI.Sprite(scope.textureCache[name]);\n        } else {\n            // not found - try to load the image.\n            return new PIXI.Sprite(PIXI.Texture.fromImage(name));\n        }\n    };\n};\n\n/**\n * Get a skin by a component name and state (or type)\n *\n * @param comp Name of the component (e.g. button) {String}\n * @param state State or type of the skin (e.g. \"up\") {String}\n * @returns {PIXI.DisplayObject}\n */\nTheme.prototype.getSkin = function(comp, state) {\n    if (this._skins[comp] && this._skins[comp][state]) {\n        return this._skins[comp][state]();\n    }\n    return null;\n};\n\n/**\n * Shortcut to remove the theme from the global context\n */\nTheme.removeTheme = function() {\n    GOWN.theme = undefined;\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/skin/Theme.js\n// module id = 21\n// module chunks = 0","var OPTIONS = ['fontSize', 'fontFamily', '_fontSize', '_fontFamily',\n               'wordWrap', 'wordWrapWidth', 'lineHeight',\n               'fill', 'align', 'stroke', 'strokeThickness',\n               'dropShadow', 'dropShadowColor', 'dropShadowAngle',\n               'dropShadowDistance', 'padding', 'textBaseline',\n               'lineJoin', 'miterLimit'];\n\n/**\n * Font theme\n *\n * @class ThemeFont\n * @memberof GOWN\n * @constructor\n * @param data The font style object {Object}\n */\nfunction ThemeFont(data) {\n    for(var key in data) {\n        if(OPTIONS.indexOf(key) !== -1) {\n            this[key] = data[key];\n        }\n    }\n\n    /**\n     * The font fill color\n     *\n     * @type String\n     * @default '#000'\n     */\n    this.fill = this.fill || '#000';\n\n    /**\n     * The font family\n     *\n     * @private\n     * @type String\n     * @default 'Arial'\n     */\n    this._fontFamily = this._fontFamily || 'Arial';\n\n    /**\n     * The font size\n     *\n     * @private\n     * @type Number\n     * @default 12\n     */\n    this._fontSize = this._fontSize || 12;\n\n    /**\n     * @member GOWN.ThemeFont#wordWrap\n     */\n\n    /**\n     * @member GOWN.ThemeFont#wordWrapWidth\n     */\n\n    /**\n     * @member GOWN.ThemeFont#lineHeight\n     */\n\n    /**\n     * @member GOWN.ThemeFont#align\n     */\n\n    /**\n     * @member GOWN.ThemeFont#stroke\n     */\n\n    /**\n     * @member GOWN.ThemeFont#strokeThickness\n     */\n\n    /**\n     * @member GOWN.ThemeFont#dropShadow\n     */\n\n    /**\n     * @member GOWN.ThemeFont#dropShadowColor\n     */\n\n    /**\n     * @member GOWN.ThemeFont#dropShadowAngle\n     */\n\n    /**\n     * @member GOWN.ThemeFont#dropShadowDistance\n     */\n\n    /**\n     * @member GOWN.ThemeFont#textBaseline\n     */\n\n    /**\n     * @member GOWN.ThemeFont#lineJoin\n     */\n\n    /**\n     * @member GOWN.ThemeFont#miterLimit\n     */\n}\n\nmodule.exports = ThemeFont;\n\n/**\n * Clone the ThemeFont instance\n *\n * @return {GOWN.ThemeFont} The cloned font theme\n */\nThemeFont.prototype.clone = function() {\n    var re = new ThemeFont();\n    for(var key in this) {\n        if(OPTIONS.indexOf(key) !== -1) {\n            re[key] = this[key];\n        }\n    }\n    re._updateFont();\n    return re;\n};\n\n/**\n * Update the font string\n *\n * @private\n */\nThemeFont.prototype._updateFont = function() {\n    this._font = this._fontSize + 'px ' + this._fontFamily;\n};\n\n/**\n * Instead of setting font using fontFamily and fontSize is encouraged\n *\n * @name GOWN.ThemeFont#font\n * @type String\n * @deprecated\n */\nObject.defineProperty(ThemeFont.prototype, 'font', {\n    get: function() {\n        return this._font;\n    }\n});\n\n/**\n * The font size\n *\n * @name GOWN.ThemeFont#fontSize\n * @type Number\n * @default 12\n */\nObject.defineProperty(ThemeFont.prototype, 'fontSize', {\n    get: function() {\n        return this._fontSize;\n    },\n    set: function(value) {\n        this._fontSize = value;\n        this._updateFont();\n    }\n});\n\n/**\n * The font family\n *\n * @name GOWN.ThemeFont#fontFamily\n * @type String\n * @default 'Arial'\n */\nObject.defineProperty(ThemeFont.prototype, 'fontFamily', {\n    get: function() {\n        return this._fontFamily;\n    },\n    set: function(value) {\n        this._fontFamily = value;\n        this._updateFont();\n    }\n});\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/skin/ThemeFont.js\n// module id = 22\n// module chunks = 0","/**\n * Wrapper for DOM Text Input.\n *\n * Based on PIXI.Input InputObject by Sebastian Nette,\n * see https://github.com/SebastianNette/PIXI.Input\n *\n * @class InputWrapper\n * @memberof GOWN\n * @static\n */\nfunction InputWrapper() {\n}\n\nmodule.exports = InputWrapper;\n\n/**\n * DOM input field.\n * We use one input field for all InputControls\n *\n * @name GOWN.InputWrapper.hiddenInput\n * @type HTMLInputElement\n * @static\n */\nInputWrapper.hiddenInput = null;\n\n/**\n * Create a unique input field.\n *\n * @returns {HTMLInputElement} The input field\n */\nInputWrapper.createInput = function() {\n    if (!InputWrapper.hiddenInput) {\n        var input = document.createElement('input');\n        input.type = 'text';\n        input.tabindex = -1;\n        input.style.position = 'fixed';\n        input.style.opacity = 0;\n        input.style.pointerEvents = 'none';\n        input.style.left = '0px';\n        input.style.bottom = '0px';\n        input.style.left = '-100px';\n        input.style.top = '-100px';\n        input.style.zIndex = 10;\n\n        // add blur handler\n        input.addEventListener('blur', function() {\n            if (GOWN.InputControl.currentInput) {\n                GOWN.InputControl.currentInput.onMouseUpOutside();\n            }\n        }, false);\n\n        // on key up\n        input.addEventListener('keyup', function() {\n            if (GOWN.InputControl.currentInput) {\n                if (GOWN.InputControl.currentInput.hasFocus) {\n                    GOWN.InputControl.currentInput.onInputChanged();\n                }\n            }\n        });\n\n        document.body.appendChild(input);\n\n        InputWrapper.hiddenInput = input;\n    }\n    return InputWrapper.hiddenInput;\n};\n\n/**\n * The key to get the text ('value' for default input field)\n *\n * @static\n * @type {String}\n * @private\n */\nInputWrapper.textProp = 'value';\n\n/**\n * Focus the text input\n *\n * @function GOWN.InputWrapper.focus\n */\nInputWrapper.focus = function() {\n    if (InputWrapper.hiddenInput) {\n        InputWrapper.hiddenInput.focus();\n    }\n};\n\n/**\n * Blur the text input\n *\n * @function GOWN.InputWrapper.blur\n */\nInputWrapper.blur = function() {\n    if (InputWrapper.hiddenInput) {\n        InputWrapper.hiddenInput.blur();\n    }\n};\n\n/**\n * Set the new selection\n *\n * @function GOWN.InputWrapper.setSelection\n * @param start First position {Number}\n * @param end Last position {Number}\n */\nInputWrapper.setSelection = function(start, end) {\n    if (InputWrapper.hiddenInput) {\n        if(start < end) {\n            InputWrapper.hiddenInput.selectionStart = start;\n            InputWrapper.hiddenInput.selectionEnd = end;\n        } else {\n            InputWrapper.hiddenInput.selectionStart = end;\n            InputWrapper.hiddenInput.selectionEnd = start;\n        }\n    } else {\n        InputWrapper._selection = [start, end];\n    }\n};\n\n/**\n * Get the start and end of the current selection\n *\n * @function GOWN.InputWrapper.getSelection\n * @returns {Number[]} The start and end of the current selection\n */\nInputWrapper.getSelection = function() {\n    if (InputWrapper.hiddenInput) {\n        return [\n            InputWrapper.hiddenInput.selectionStart,\n            InputWrapper.hiddenInput.selectionEnd\n        ];\n    } else {\n        return InputWrapper._selection;\n    }\n};\n\n/**\n * Set the cursor position of the hidden input\n *\n * @function GOWN.InputWrapper.setCursorPos\n */\nInputWrapper.setCursorPos = function (pos) {\n    if (InputWrapper.hiddenInput) {\n        var elem = InputWrapper.hiddenInput;\n        if(elem.createTextRange) {\n            var range = elem.createTextRange();\n            range.move('character', pos);\n            range.select();\n        }\n        else {\n            if(elem.selectionStart) {\n                elem.focus();\n                elem.setSelectionRange(pos, pos);\n            }\n            else\n                elem.focus();\n        }\n    }\n};\n\n/**\n * Get the text value from the hidden input\n *\n * @function GOWN.InputWrapper.getText\n * @returns {String} The text value\n */\nInputWrapper.getText = function() {\n    if (InputWrapper.hiddenInput) {\n        var textProp = InputWrapper.textProp;\n        var txt = InputWrapper.hiddenInput[textProp];\n        return txt.replace(/\\r/g, '');\n    } else {\n        return InputWrapper._text;\n    }\n\n};\n\n/**\n * Set the text value of the hidden input\n *\n * @function GOWN.InputWrapper.setText\n * @param {String} text The text to set {String}\n */\nInputWrapper.setText = function(text) {\n    if (InputWrapper.hiddenInput) {\n        var textProp = InputWrapper.textProp;\n        InputWrapper.hiddenInput[textProp] = text;\n    } else {\n        InputWrapper._text = text;\n    }\n};\n\n/**\n * Set the maximum length.\n * Setting it to 0 will allow unlimited text input\n *\n * @function GOWN.InputWrapper.setMaxLength\n * @param length The maximum length {Number}\n */\nInputWrapper.setMaxLength = function(length) {\n    if (InputWrapper.hiddenInput) {\n        if (!length || length < 0) {\n            InputWrapper.hiddenInput.removeAttribute('maxlength');\n        } else {\n            InputWrapper.hiddenInput.setAttribute('maxlength', length);\n        }\n    } else {\n        InputWrapper._maxLength = length;\n    }\n};\n\n/**\n * Set the input type of the hidden input\n *\n * @function GOWN.InputWrapper.setType\n * @param type The new type for the hidden input {String}\n */\nInputWrapper.setType = function(type) {\n    if (InputWrapper.hiddenInput) {\n        InputWrapper.hiddenInput.type = type;\n    } else {\n        InputWrapper._type = type;\n    }\n};\n\n/**\n * Get the input type of the hidden input\n *\n * @function GOWN.InputWrapper.getType\n * @returns {String} The input type\n */\nInputWrapper.getType = function() {\n    if (InputWrapper.hiddenInput) {\n        return InputWrapper.hiddenInput.type;\n    } else {\n        return InputWrapper._type;\n    }\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/utils/InputWrapper.js\n// module id = 23\n// module chunks = 0","/**\n * Scale 9 Container.\n * e.g. useful for scalable buttons.\n *\n * @class ScaleContainer\n * @extends PIXI.Container\n * @memberof GOWN\n * @constructor\n * @param texture The PIXI texture {PIXI.Texture}\n * @param rect The rectangle with position and dimensions of the center piece.\n * Will be used to calculate positions of all other pieces {PIXI.Rectangle}\n * @param [middleWidth] The alternative width to crop the center piece\n * (only needed if we want to scale the image smaller than the original) {Number}\n * @param [centerHeight] The alternative height to crop the center piece\n * (only needed if we want to scale the image smaller than the original) {Number}\n */\nfunction ScaleContainer(texture, rect, middleWidth, centerHeight) {\n    PIXI.Container.call( this );\n\n    /**\n     * The rectangle with position and dimensions of the center piece.\n     * Will be used to calculate positions of all other pieces.\n     *\n     * @type PIXI.Rectangle\n     */\n    this.rect = rect;\n\n    /**\n     * The base texture of the scale container\n     *\n     * @type PIXI.BaseTexture\n     */\n    this.baseTexture = texture.baseTexture;\n\n    /**\n     * The frame of the scale container\n     *\n     * @type PIXI.Rectangle\n     */\n    this.frame = texture.frame;\n\n    /**\n     * The width of the scale container\n     *\n     * @private\n     * @type Number\n     */\n    this._width = this.frame.width;\n\n    /**\n     * The height of the scale container\n     *\n     * @private\n     * @type Number\n     */\n    this._height = this.frame.height;\n\n    // left / middle / right width\n    var lw = rect.x;\n    var mw = rect.width;\n    var rw = this.frame.width - (mw + lw);\n\n    // top / center / bottom height\n    var th = rect.y;\n    var ch = rect.height;\n    var bh = this.frame.height - (ch + th);\n\n    middleWidth = middleWidth || mw;\n    centerHeight = centerHeight || ch;\n\n    /**\n     * Calculated min. width based on tile sizes in pixel without scaling\n     *\n     * @type Number\n     */\n    this.minWidth = lw + rw;\n\n    /**\n     * Calculated min. height based on tile sizes in pixel without scaling\n     *\n     * @type Number\n     */\n    this.minHeight = th + bh;\n\n    if (lw > 0 && th > 0) {\n        /**\n         * The top left sprite\n         *\n         * @type {PIXI.Sprite}\n         */\n        this.tl = this._getTexture(0, 0, lw, th);\n        this.addChild(this.tl);\n    }\n\n    if (mw > 0 && th > 0) {\n        /**\n         * The top middle sprite\n         *\n         * @type {PIXI.Sprite}\n         */\n        this.tm = this._getTexture(lw, 0, middleWidth, th);\n        this.addChild(this.tm);\n        this.tm.x = lw;\n    }\n\n    if (rw > 0 && th > 0) {\n        /**\n         * The top right sprite\n         *\n         * @type {PIXI.Sprite}\n         */\n        this.tr = this._getTexture(lw + mw, 0, rw, th);\n        this.addChild(this.tr);\n    }\n\n    if (lw > 0 && ch > 0) {\n        /**\n         * The center left sprite\n         *\n         * @type {PIXI.Sprite}\n         */\n        this.cl = this._getTexture(0, th, lw, centerHeight);\n        this.addChild(this.cl);\n        this.cl.y = th;\n    }\n\n    if (mw > 0 && ch > 0) {\n        /**\n         * The center middle sprite\n         *\n         * @type {PIXI.Sprite}\n         */\n        this.cm = this._getTexture(lw, th, middleWidth, centerHeight);\n        this.addChild(this.cm);\n        this.cm.y = th;\n        this.cm.x = lw;\n    }\n\n    if (rw > 0 && ch > 0) {\n        /**\n         * The center right sprite\n         *\n         * @type {PIXI.Sprite}\n         */\n        this.cr = this._getTexture(lw + mw, th, rw, centerHeight);\n        this.addChild(this.cr);\n        this.cr.y = th;\n    }\n\n    if (lw > 0 && bh > 0) {\n        /**\n         * The bottom left sprite\n         *\n         * @type {PIXI.Sprite}\n         */\n        this.bl = this._getTexture(0, th + ch, lw, bh);\n        this.addChild(this.bl);\n    }\n\n    if (mw > 0 && bh > 0) {\n        /**\n         * The bottom middle sprite\n         *\n         * @type {PIXI.Sprite}\n         */\n        this.bm = this._getTexture(lw, th + ch, middleWidth, bh);\n        this.addChild(this.bm);\n        this.bm.x = lw;\n    }\n\n    if (rw > 0 && bh > 0) {\n        /**\n         * The bottom right sprite\n         *\n         * @type {PIXI.Sprite}\n         */\n        this.br = this._getTexture(lw + mw, th + ch, rw, bh);\n        this.addChild(this.br);\n    }\n}\n\nScaleContainer.prototype = Object.create( PIXI.Container.prototype );\nScaleContainer.prototype.constructor = ScaleContainer;\nmodule.exports = ScaleContainer;\n\n/**\n * Set the scaling width and height\n *\n * @private\n */\nScaleContainer.prototype._updateScales = function() {\n    this._positionTilable();\n\n    var scaleOriginals = this.scaleOriginals = {};\n\n    var scaleOriginal = function(name, elem) {\n        if (elem && elem.width && elem.height) {\n            scaleOriginals[name] = {\n                width: elem.width,\n                height: elem.height\n            };\n        }\n    };\n\n    scaleOriginal('tl', this.tl);\n    scaleOriginal('tm', this.tm);\n    scaleOriginal('tr', this.tr);\n\n    scaleOriginal('cl', this.cl);\n    scaleOriginal('cm', this.cm);\n    scaleOriginal('cr', this.cr);\n\n    scaleOriginal('bl', this.bl);\n    scaleOriginal('bm', this.bm);\n    scaleOriginal('br', this.br);\n};\n\n/**\n * Create a new texture from a base-texture by a given dimensions\n *\n * @param x The x-position {Number}\n * @param y The y-position {Number}\n * @param w The width {Number}\n * @param h The height {Number}\n * @return {PIXI.Sprite} The sprite with the created texture\n * @private\n */\nScaleContainer.prototype._getTexture = function(x, y, w, h) {\n    var frame = new PIXI.Rectangle(this.frame.x+x, this.frame.y+y, w, h);\n    var t = new PIXI.Texture(this.baseTexture, frame, frame.clone(), null);\n    return new PIXI.Sprite(t);\n};\n\n/**\n * The width of the container. Setting this will redraw the component.\n *\n * @name GOWN.ScaleContainer#width\n * @type Number\n */\nObject.defineProperty(ScaleContainer.prototype, 'width', {\n    get: function() {\n        return this._width;\n    },\n    set: function(value) {\n        if (this._width !== value) {\n            if (this.minWidth && this.minWidth > 0 &&\n                value < this.minWidth) {\n                value = this.minWidth;\n            }\n            this._width = value;\n            this.invalid = true;\n            this._updateScales();\n        }\n    }\n});\n\n/**\n * The height of the container. Setting this will redraw the component.\n *\n * @name GOWN.ScaleContainer#height\n * @type Number\n */\nObject.defineProperty(ScaleContainer.prototype, 'height', {\n    get: function() {\n        return this._height;\n    },\n    set: function(value) {\n        if (this._height !== value) {\n            if (this.minHeight && this.minHeight > 0 &&\n                value < this.minHeight) {\n                value = this.minHeight;\n            }\n            this._height = value;\n            this.invalid = true;\n            this._updateScales();\n        }\n    }\n});\n\n/**\n * Update before draw call (reposition textures)\n *\n * @private\n */\nScaleContainer.prototype.redraw = function() {\n    if (this.invalid) {\n        this._positionTilable();\n        this.invalid = false;\n    }\n};\n\n/**\n * Recalculate the position of the tiles (every time the width/height changes)\n *\n * @private\n */\nScaleContainer.prototype._positionTilable = function() {\n    // left / middle / right width\n    var lw = this.rect.x;\n    var mw = this.rect.width;\n    var rw = this.frame.width - (mw + lw);\n\n    // top / center / bottom height\n    var th = this.rect.y;\n    var ch = this.rect.height;\n    var bh = this.frame.height - (ch + th);\n\n    var rightX = this._width - rw;\n    var bottomY = this._height - bh;\n    if (this.cr) {\n        this.cr.x = rightX;\n    }\n    if (this.br) {\n        this.br.x = rightX;\n        this.br.y = bottomY;\n    }\n    if (this.tr) {\n        this.tr.x = rightX;\n    }\n\n    var middleWidth = this._width - (lw + rw);\n    var centerHeight = this._height - (th + bh);\n    if (this.cm) {\n        this.cm.width = middleWidth;\n        this.cm.height = centerHeight;\n    }\n    if (this.bm) {\n        this.bm.width = middleWidth;\n        this.bm.y = bottomY;\n    }\n    if (this.tm) {\n        this.tm.width = middleWidth;\n    }\n    if (this.cl) {\n        this.cl.height = centerHeight;\n    }\n    if (this.cr) {\n        this.cr.height = centerHeight;\n    }\n\n    if (this.bl) {\n        this.bl.y = bottomY;\n    }\n};\n\n/**\n * Helper function that creates a sprite that will contain a texture from\n * the TextureCache based on the frameId.\n * The frame ids are created when a Texture packer file has been loaded\n *\n * @param frameId The frame id of the texture in the cache {String}\n * @param rect Defines the tilable area {Rectangle}\n * @return {GOWN.ScaleContainer} A new scalable container (e.g. a button)\n * using a texture from the texture cache matching the frameId\n */\nScaleContainer.fromFrame = function(frameId, rect) {\n    var texture = PIXI.utils.TextureCache[frameId];\n    if(!texture) {\n        throw new Error('The frameId \"' + frameId + '\" does not exist ' +\n                        'in the texture cache');\n    }\n    return new ScaleContainer(texture, rect);\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/utils/ScaleContainer.js\n// module id = 24\n// module chunks = 0","/**\n * Holds all information related to a Slider change event\n *\n * @class SliderData\n * @memberof GOWN\n * @constructor\n */\nfunction SliderData() {\n    /**\n     * The value of the slider data\n     *\n     * @type Number\n     * @default 0\n     */\n    this.value = 0;\n\n    /**\n     * The target Sprite that was interacted with\n     *\n     * @type PIXI.Sprite\n     */\n    this.target = null;\n}\n\nmodule.exports = SliderData;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/utils/SliderData.js\n// module id = 25\n// module chunks = 0","/**\n * A wrapper around PIXI.tween OR CreateJS/TweenJS to do animations/tweening,\n * for example for a List or a Scroller.\n *\n * @see GOWN.Scroller#throwTo\n *\n * @constructor\n * @memberof GOWN\n * @param target The tween target {Object}\n * @param duration The tween duration {Number}\n * @param [easing='linear'] The easing function name {String}\n * @param [type] The tween library {String}\n */\n//TODO: support greensock?\nfunction Tween(target, duration, easing, type) {\n    /**\n     * The tween duration\n     *\n     * @type Number\n     */\n    this.duration = duration;\n\n    /**\n     * The easing function name\n     *\n     * @type String\n     * @default 'linear'\n     */\n    this.easing = easing || 'linear';\n\n    /**\n     * The tween library\n     *\n     * @type String\n     */\n    this.type = type || this.checkLibrary();\n    if (this.type === Tween.NONE) {\n        /**\n         * The tween target\n         *\n         * @private\n         * @type Object\n         */\n        this._target = target;\n    }\n    this.createTween(target, duration, easing);\n}\n\nTween.prototype = Object.create({});\nTween.prototype.constructor = Tween;\nmodule.exports = Tween;\n\n/**\n * The PIXI tween type\n *\n * @static\n * @final\n * @type String\n */\nTween.PIXI_TWEEN = 'PIXI_TWEEN';\n\n/**\n * The CreateJS tween type\n *\n * @static\n * @final\n * @type String\n */\nTween.CREATEJS_TWEEN = 'CREATEJS_TWEEN';\n\n/**\n * No tween type\n *\n * @static\n * @final\n * @type String\n */\nTween.NONE = 'NONE';\n\n/**\n * Uppercase the first letter. Does NOT work like capitalize in python.\n * It just capitalizes the first letter and let the other characters untouched.\n *\n * @param string The string to capitalize {String}\n * @return {String} The capitalized string\n */\nfunction capitalize(string) {\n    return string.charAt(0).toUpperCase() + string.slice(1);\n}\n\n// TODO: possible alternative: create own easing data type\n// e.g. (in, out, inout and type)\n\n/**\n * Get the specific CreateJS easing function (e.g. 'linear' or 'quadIn')\n *\n * @param ease The name of the CreateJS easing function {String}\n * @return {function}\n */\nTween.CREATEJS_EASING = function(ease) {\n    // inQutQuad to quadInOut\n    if (ease.substring(0, 5) === 'inOut') {\n        ease = ease.slice(5).toLowerCase() + 'InOut';\n    }\n    // inQuad to quadIn\n    if (ease.substring(0, 2) === 'in') {\n        ease = ease.slice(2).toLowerCase() + 'In';\n    }\n    if (ease.substring(0, 3) === 'out') {\n        ease = ease.slice(3).toLowerCase() + 'Out';\n    }\n    return createjs.Ease[ease];\n};\n\n/**\n * Get the specific PIXI easing function\n *\n * @param ease The name of the PIXI easing function {String}\n * @return {function}\n */\nTween.PIXI_EASING = function(ease) {\n    if (ease.substring(ease.length-5) === 'InOut') {\n        ease = 'inOut' + capitalize(ease.slice(0, -5));\n    }\n    if (ease.substring(ease.length-3) === 'Out') {\n        ease = 'out' + capitalize(ease.slice(0, -3));\n    }\n    if (ease.substring(ease.length-2) === 'In') {\n        ease = 'in' + capitalize(ease.slice(0, -2));\n    }\n    return PIXI.tween.Easing[ease]();\n};\n\n/**\n * A helper function to check if a tweening-library is present\n *\n * @return {String} Name of the tweening-library\n */\nTween.prototype.checkLibrary = function() {\n    if (window.PIXI && PIXI.tween) {\n        return Tween.PIXI_TWEEN;\n    } else if (window.createjs && window.createjs.Tween) {\n        return Tween.CREATEJS_TWEEN;\n    } else {\n        return Tween.NONE;\n    }\n};\n\n/**\n * Create a tween\n *\n * @param target The tween target {Object}\n * @param duration The tween duration {Number}\n * @param easing The easing function name {String}\n */\nTween.prototype.createTween = function(target, duration, easing) {\n    if (this.type === Tween.PIXI_TWEEN) {\n        this._tween = PIXI.tweenManager.createTween(target);\n        // tweenjs stores time in ms\n        this._tween.time = duration;\n        // Easing is a function in PIXI.tween.Easing\n        this._tween.easing = Tween.PIXI_EASING(easing);\n    } else if (this.type === Tween.CREATEJS_TWEEN) {\n        createjs.Ticker.timingMode = createjs.Ticker.RAF_SYNCHED;\n        createjs.Ticker.setFPS(60);\n        this._tween = createjs.Tween.get(target, {loop: false});\n    } else {\n        this._tween = null;\n    }\n};\n\n/**\n * Start the tween\n *\n * @param data The tween data {Object}\n */\nTween.prototype.to = function(data) {\n    if (this.type === Tween.PIXI_TWEEN && this._tween) {\n        this._tween.stop();\n        this._tween.to(data);\n        this._tween.start();\n    } else if (this.type === Tween.CREATEJS_TWEEN && this._tween) {\n        this._tween.to(data, this.duration, Tween.CREATEJS_EASING(this.easing));\n        this._tween.play();\n    } else if (this.type === Tween.NONE) {\n        // no tween, set values directly and without wait\n        // maybe we'd like to do some basic linear transitioning\n        // in the future even if there is nothing set?\n        for (var key in data) {\n            this._target[key] = data[key];\n        }\n    }\n};\n\n/**\n * Stop the tween\n */\nTween.prototype.remove = function() {\n    if (this.type === Tween.PIXI_TWEEN && this._tween) {\n        PIXI.tween.TweenManager.removeTween(this._tween);\n    }\n    this._tween = null;\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/utils/Tween.js\n// module id = 26\n// module chunks = 0","/**\n * Utility functions\n *\n * @namespace GOWN.utils\n */\n\n/**\n * Mixin utility\n *\n * @function GOWN.utils.mixin\n * @param destination Destination object {Object}\n * @param source Source object{Object}\n * @return {Object}\n */\nmodule.exports = function(destination, source) {\n    for (var key in source) {\n        if (source.hasOwnProperty(key)) {\n            if(key === 'defineProperty') {\n                for (var name in source[key]) {\n                    var data = source[key][name];\n                    if (data.configurable === undefined) {\n                         // We change our default case, so that we can\n                         // overwrite properties later on\n                        data.configurable = true;\n                    }\n                    Object.defineProperty(destination, name, data);\n                }\n            } else {\n                destination[key] = source[key];\n            }\n        }\n    }\n    return destination;\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/utils/mixin.js\n// module id = 27\n// module chunks = 0","/**\n * Utility functions to position an element relative to its parent\n *\n * @namespace GOWN.utils.position\n */\n\n/**\n * Center an element on the parent vertically\n *\n * @memberOf GOWN.utils.position\n * @param elem The element {PIXI.Container}\n * @param [parent] The parent {PIXI.Container}\n */\nfunction centerVertical(elem, parent) {\n    parent = parent || elem.parent;\n    elem.y = Math.floor((parent.height - elem.height ) / 2);\n}\n\n/**\n * Center an element on the parent horizontally\n *\n * @memberOf GOWN.utils.position\n * @param elem The element {PIXI.Container}\n * @param [parent] The parent {PIXI.Container}\n */\nfunction centerHorizontal(elem, parent) {\n    parent = parent || elem.parent;\n    elem.x = Math.floor((parent.width - elem.width ) / 2);\n}\n\n/**\n * Center an element on the parent\n *\n * @memberOf GOWN.utils.position\n * @param elem The element {PIXI.Container}\n * @param [parent] The parent {PIXI.Container}\n */\nfunction center(elem, parent) {\n    centerVertical(elem, parent);\n    centerHorizontal(elem, parent);\n}\n\n/**\n * Put an element to the bottom of its parent\n *\n * @memberOf GOWN.utils.position\n * @param elem The element {PIXI.Container}\n * @param [parent] The parent {PIXI.Container}\n */\nfunction bottom(elem, parent) {\n    parent = parent || elem.parent;\n    elem.y = parent.height - elem.height;\n}\n\n/**\n * Put an element to the right of its parent.\n *\n * @memberOf GOWN.utils.position\n * @param elem The element {PIXI.Container}\n * @param [parent] The parent {PIXI.Container}\n */\nfunction right(elem, parent) {\n    parent = parent || elem.parent;\n    elem.x = parent.width - elem.width;\n}\n\nmodule.exports = {\n    centerHorizontal: centerHorizontal,\n    centerVertical: centerVertical,\n    center: center,\n    bottom: bottom,\n    right: right\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/utils/position.js\n// module id = 28\n// module chunks = 0","/**\n *\n *\n * @namespace GOWN.utils.resizeScaling\n */\nmodule.exports = {\n    /**\n     * This should be called from inside the constructor\n     *\n     * @function GOWN.utils.resizeScaling.initResizeScaling\n     */\n    initResizeScaling: function() {\n        this.resizeScaling = true; // resize instead of scale\n\n        this.minWidth = 1;\n        this.minHeight = 1;\n\n        // update dimension flag\n        this._lastWidth = NaN;\n        this._lastHeight = NaN;\n    },\n\n    /**\n     * Update before draw call.\n     * Redraw control for current state from theme\n     *\n     * @function GOWN.utils.resizeScaling.redraw\n     */\n    redraw: function() {\n        // remove last skin after new one has been added\n        // (just before rendering, otherwise we would see nothing for a frame)\n        if (this._lastSkin) {\n            //this.removeChild(this._lastSkin);\n            this._lastSkin.alpha = 0;\n            this._lastSkin = null;\n        }\n        if (this.invalidState) {\n            this.fromSkin(this._currentState, this.changeSkin);\n        }\n        var width = this.worldWidth;\n        var height = this.worldHeight;\n        if (this._currentSkin &&\n            (this._lastWidth !== width || this._lastHeight !== height) &&\n            width > 0 && height > 0) {\n\n            this._currentSkin.width = this._lastWidth = width;\n            this._currentSkin.height = this._lastHeight = height;\n            this.updateDimensions();\n        }\n    },\n\n    /**\n     * @function GOWN.utils.resizeScaling.updateDimensions\n     */\n    updateDimensions: function() {\n    },\n\n    /**\n     * @function GOWN.utils.resizeScaling.updateTransform\n     */\n    updateTransform: function() {\n        var wt = this.worldTransform;\n        var scaleX = 1;\n        var scaleY = 1;\n\n        if(this.redraw) {\n\n            if(this.resizeScaling) {\n                var pt = this.parent.worldTransform;\n\n                scaleX = Math.sqrt(Math.pow(pt.a, 2) + Math.pow(pt.b, 2));\n                scaleY = Math.sqrt(Math.pow(pt.c, 2) + Math.pow(pt.d, 2));\n            }\n\n            this.worldWidth = Math.round(Math.max(this._width * scaleX, this.minWidth));\n            this.worldHeight = Math.round(Math.max(this._height * scaleY, this.minHeight));\n            this.redraw();\n        }\n\n        // obmit Control.updateTransform as it calls redraw as well\n        if(!this.resizeScaling) {\n            PIXI.Container.prototype.updateTransform.call(this);\n        } else {\n            var updateTransformID = this.transform._worldID;\n            PIXI.DisplayObject.prototype.updateTransform.call(this);\n            \n            // Only revert scaling if something changed\n            if(updateTransformID != this.transform._worldID){\n                // revert scaling\n                var tx = wt.tx;\n                var ty = wt.ty;\n                scaleX = scaleX !== 0 ? 1/scaleX : 0;\n                scaleY = scaleY !== 0 ? 1/scaleY : 0;\n                wt.scale(scaleX, scaleY);\n                wt.tx = tx;\n                wt.ty = ty;\n            }\n\n            for (var i = 0, j = this.children.length; i < j; ++i) {\n                this.children[i].updateTransform();\n            }\n        }\n    },\n\n    /**\n     * @member GOWN.utils.resizeScaling.defineProperty\n     */\n    defineProperty: {\n        'height': {\n            get: function () {\n                return this._height\n            },\n            set: function (value) {\n                this._height = value\n                this.minHeight = Math.min(value, this.minHeight)\n            }\n        },\n        'width': {\n            get: function () {\n                return this._width\n            },\n            set: function (value) {\n                this._width = value\n                this.minWidth = Math.min(value, this.minWidth)\n            }\n        }\n    }\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/utils/resizeScaling.js\n// module id = 29\n// module chunks = 0","var g;\r\n\r\n// This works in non-strict mode\r\ng = (function() {\r\n\treturn this;\r\n})();\r\n\r\ntry {\r\n\t// This works if eval is allowed (see CSP)\r\n\tg = g || Function(\"return this\")() || (1,eval)(\"this\");\r\n} catch(e) {\r\n\t// This works if the window reference is available\r\n\tif(typeof window === \"object\")\r\n\t\tg = window;\r\n}\r\n\r\n// g can still be undefined, but nothing to do about it...\r\n// We return undefined, instead of nothing here, so it's\r\n// easier to handle this case. if(!global) { ...}\r\n\r\nmodule.exports = g;\r\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// (webpack)/buildin/global.js\n// module id = 30\n// module chunks = 0","var Control = require('../core/Control');\n\n/**\n * Entry point for your application, makes some assumptions, (e.g. that you\n * always want fullscreen) and shortcuts some fancy stuff like a gradient\n * background.\n *\n * @class Application\n * @extends GOWN.Control\n * @memberof GOWN\n * @constructor\n * @param [config] {Object} Equals the renderer config for pixi with an\n *  exception: the backgroundColor is an Array a of colors it will drawn as\n *  vertical gradient\n * @param [config.backgroundColor=0xffffff] {Number} Background color of the canvas\n * @param [screenMode=Application.SCREEN_MODE_RESIZE] {String} Screen mode of the canvas\n * @param [parentId] {String} DOM id of the canvas element\n * @param [width=800] {Number} Width of the canvas\n * @param [height=600] {Number} Height of the canvas\n * @param [renderer=PIXI.autoDetectRenderer()] {PIXI.WebGLRenderer|PIXI.CanvasRenderer} Renderer of the canvas\n * @param [stage=new PIXI.Container()] {PIXI.Container} Root container\n */\nfunction Application(config, screenMode, parentId, width, height, renderer, stage) {\n    screenMode = screenMode || Application.SCREEN_MODE_RESIZE;\n    var fullscreen = false;\n    var element = document.getElementById(parentId);\n    if (screenMode === Application.SCREEN_MODE_RESIZE) {\n        width = element.clientWidth;\n        height = element.clientHeight;\n    } else if (screenMode === Application.SCREEN_MODE_FULLSCREEN) {\n        width = window.innerWidth;\n        height = window.innerHeight;\n        fullscreen = true;\n    } else {\n        width = width || 800;\n        height = height || 600;\n    }\n\n    this.resizable = true;\n\n    if (!config) {\n        config = {\n            backgroundColor: 0xffffff\n        };\n    }\n\n    var _background; // to store background if it is an array because we want\n                     // to set the backgroundColor in config to a hex value\n    if (!stage || !renderer) {\n        stage = new PIXI.Container();\n        if (config.backgroundColor && config.backgroundColor instanceof Array) {\n            _background = config.backgroundColor;\n            config.backgroundColor = 0xffffff;\n        }\n        this._background = config.backgroundColor;\n        renderer = PIXI.autoDetectRenderer(width, height, config);\n        renderer.plugins.resize.element = element;\n        renderer.plugins.resize.fullscreen = fullscreen;\n        if (element && !fullscreen) {\n            element.appendChild(renderer.view);\n        } else {\n            document.body.appendChild(renderer.view);\n        }\n    }\n    /* jshint ignore:start */\n\n    /**\n     * Root container\n     *\n     * @private\n     * @type PIXI.Container\n     * @default new PIXI.Container()\n     */\n    this._stage = stage;\n\n    /**\n     * Canvas renderer\n     *\n     * @private\n     * @type PIXI.WebGLRenderer|PIXI.CanvasRenderer\n     */\n    this._renderer = renderer;\n\n    /* jshint ignore:end */\n\n    /**\n     * Width of the canvas\n     *\n     * @private\n     * @type Number\n     */\n    this._width = renderer.width;\n\n    /**\n     * Height of the canvas\n     *\n     * @private\n     * @type Number\n     */\n    this._height = renderer.height;\n\n    /**\n     * Screen mode of the canvas\n     *\n     * @private\n     * @type Number\n     */\n    this.screenMode = screenMode;\n\n    Control.call(this);\n\n    this.on('resize', this.onResize, this);\n\n    stage.addChild(this);\n\n    /**\n     * Overwrite layout before next draw call.\n     *\n     * @private\n     * @type bool\n     * @default true\n     */\n    this.layoutInvalid = true;\n\n    /**\n     * Set a layout to apply percentages on redraw etc.\n     *\n     * @private\n     * @default null\n     * @type GOWN.layout.Layout\n     */\n    this.layout = this.layout || null;\n\n    if (_background) {\n        this.background = _background;\n    }\n\n    this.animate();\n}\n\nApplication.prototype = Object.create( Control.prototype );\nApplication.prototype.constructor = Application;\nmodule.exports = Application;\n\n/**\n * Use fixed width/height in pixel.\n *\n * @static\n * @final\n * @type String\n */\nApplication.SCREEN_MODE_FIXED = 'screenModeFixed';\n\n/**\n * Use window.innerWidth/innerHeight to get the whole browser page width\n *\n * @static\n * @final\n * @type String\n */\nApplication.SCREEN_MODE_FULLSCREEN = 'screenModeFullscreen';\n\n/**\n * Use resize to parent div width/height\n *\n * @static\n * @final\n * @type String\n */\nApplication.SCREEN_MODE_RESIZE = 'screenModeResize';\n\n/* jshint ignore:start */\n\n/**\n * Call requestAnimationFrame to render the application at max. FPS\n */\nApplication.prototype.animate = function() {\n    var scope = this;\n    var animate = function() {\n        if (scope._stage) {\n            scope._renderer.render(scope._stage);\n            requestAnimationFrame(animate);\n        }\n    };\n    requestAnimationFrame(animate);\n};\n\n/* jshint ignore:end */\n\n/**\n * Creates a gradient rect that can for example be used as a background\n * (uses a separate canvas to create a new Texture)\n * TODO: check if this works outside the browser/in cordova or cocoon\n *\n * @private\n */\nApplication.prototype._createGradientRect = function(gradient, width, height) {\n    var bgCanvas = document.createElement('canvas');\n    bgCanvas.width = width || 256;\n    bgCanvas.height = height || 256;\n    var ctx = bgCanvas.getContext('2d');\n    var linearGradient = ctx.createLinearGradient(0, 0, 0, bgCanvas.height);\n    for (var i = 0; i < gradient.length; i++) {\n        var color = gradient[i];\n        if (typeof(color) === 'number') {\n            color = '#' +  gradient[i].toString(16);\n        }\n        linearGradient.addColorStop(i, color);\n    }\n    ctx.fillStyle = linearGradient;\n    ctx.fillRect(0, 0, bgCanvas.width, bgCanvas.height);\n    return PIXI.Texture.fromCanvas(bgCanvas);\n};\n\n/**\n * Clean application: remove event listener, free memory\n * (can also remove the canvas from the DOM tree if wanted)\n *\n * @param [destroyChildren=false] {boolean} if set to true, all the children will have their destroy method called as well\n * @param [removeCanvas=true] {boolean} destroys the canvas and remove it from the dom tree\n */\nApplication.prototype.destroy = function(destroyChildren, removeCanvas) {\n    removeCanvas = removeCanvas === undefined || removeCanvas;\n    this._removeBackground();\n    PIXI.Container.prototype.destroy.call(this, destroyChildren);\n    if (removeCanvas) {\n        document.body.removeChild(this._renderer.view);\n    }\n    this._stage = null;\n    this._renderer = null;\n};\n\n/**\n * Redraw scene, apply layout if required\n */\nApplication.prototype.redraw = function() {\n    if (this.layoutInvalid && this.layout) {\n        this.layout.layoutContainer(this);\n    }\n    this.layoutInvalid = false;\n};\n\n/**\n * called when the browser window / the application is resized\n * will set the dimensions of the canvas and layout children\n * (if it has a layout)\n */\nApplication.prototype.onResize = function(eventData) {\n    this._width = eventData.data.width;\n    this._height = eventData.data.height;\n    this._renderer.resize(this._width, this._height);\n    if (this.bg) {\n        // TODO: add special layout for this and use percentWidth/Height of 100\n        this.bg.width = this._width;\n        this.bg.height = this._height;\n    }\n    this.layoutInvalid = true;\n};\n\n/**\n * Allow layouting of children\n *\n * @name GOWN.Application#layout\n * @type GOWN.layout.Layout\n */\nObject.defineProperty(Application.prototype, 'layout', {\n    get: function() {\n        return this._layout;\n    },\n    set: function(value) {\n        if (value === this._layout) {\n            return;\n        }\n        this._layout = value;\n        this.layoutInvalid = true;\n    }\n});\n\n/**\n * Remove background\n *\n * @private\n */\nApplication.prototype._removeBackground = function() {\n    if (this.bg) {\n        this.removeChild(this.bg);\n        this.bg = null;\n    }\n};\n\n/**\n * Set the screen mode\n *\n * @name GOWN.Application#screenMode\n * @type String\n */\nObject.defineProperty(Application.prototype, 'screenMode', {\n    get: function() {\n        return this._screenMode;\n    },\n    set: function(value) {\n        if (value === Application.SCREEN_MODE_FULLSCREEN) {\n            this._renderer.view.style.top = 0;\n            this._renderer.view.style.left = 0;\n            this._renderer.view.style.right = 0;\n            this._renderer.view.style.bottom = 0;\n            this._renderer.view.style.position = 'absolute';\n        }\n        this._screenMode = value;\n    }\n});\n\n/**\n * Set and draw background. Create a gradient by passing an array of hex color numbers.\n *\n * @name GOWN.Application#background\n * @type Number|Number[]\n */\nObject.defineProperty(Application.prototype, 'background', {\n    get: function() {\n        return this._background;\n    },\n    set: function(value) {\n        if (value === this._background) {\n            return;\n        }\n        this._removeBackground();\n        if (value instanceof Array) {\n            this.bg = new PIXI.Sprite(this._createGradientRect(value));\n            this.bg.width = this._width;\n            this.bg.height = this._height;\n            this.addChildAt(this.bg, 0);\n        } else {\n            this._renderer.backgroundColor = value;\n        }\n        this._background = value;\n    }\n});\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/controls/Application.js\n// module id = 31\n// module chunks = 0","var InputControl = require('./InputControl'),\n    TextInput = require('./TextInput');\n\n/**\n * The basic AutoComplete. Needed for input with suggestions\n *\n * @class AutoComplete\n * @extends GOWN.TextInput\n * @memberof GOWN\n * @constructor\n * @param text Default display text {String}\n * @param [theme] theme for auto complete {GOWN.Theme}\n * @param [skinName=AutoComplete.SKIN_NAME] name of the auto complete skin {String}\n */\nfunction AutoComplete(text, theme, skinName) {\n    this.skinName = skinName || AutoComplete.SKIN_NAME;\n\n    /**\n     * The valid auto complete states\n     *\n     * @private\n     * @type String[]\n     * @default AutoComplete.stateNames\n     */\n    this._validStates = this._validStates || AutoComplete.stateNames;\n\n    /**\n     * Display the text as an password field\n     *\n     * @private\n     * @type bool\n     * @default false\n     */\n    this._displayAsPassword = false;\n\n    /**\n     * Result elements (source elements filtered by the text attribute)\n     *\n     * @private\n     * @type String[]\n     * @default []\n     */\n    this.results = [];\n\n    /**\n     * Source elements from which the auto complete filters the elements corresponding to the current text\n     *\n     * @private\n     * @type String[]\n     * @default []\n     */\n    this.source = [];\n\n    /**\n     * Hovered element text\n     *\n     * @type String\n     * @default null\n     * @private\n     */\n    this.hoveredElementText = null;\n\n    TextInput.call(this, theme, skinName);\n\n    /**\n     * The displayed text\n     *\n     * @type String\n     */\n    this.text = text;\n\n    /**\n     * The minimum number of entered characters required to request\n     * suggestions from the AutoCompleteList.\n     *\n     * @private\n     * @type Number\n     * @default 2\n     */\n    this._minAutoCompleteLength = 2;\n\n    /**\n     * The maximum number of suggestions that show at one time from the AutoCompleteList.\n     * If 0, all suggestions will be shown.\n     *\n     * @private\n     * @type Number\n     * @default 5\n     */\n    this._limitTo = 5;\n}\n\nAutoComplete.prototype = Object.create(TextInput.prototype);\nAutoComplete.prototype.constructor = AutoComplete;\nmodule.exports = AutoComplete;\n\n/**\n * Hover state\n *\n * @static\n * @final\n * @type String\n */\nAutoComplete.HOVER_CONTAINER = 'hoverContainer';\n\n/**\n * Click state\n *\n * @static\n * @final\n * @type String\n */\nAutoComplete.CLICKED = 'clicked';\n\n/**\n * Names of possible states for an auto complete element\n *\n * @static\n * @final\n * @type String[]\n * @private\n */\nAutoComplete.stateNames = InputControl.stateNames.concat([\n    AutoComplete.HOVER_CONTAINER, AutoComplete.CLICKED\n]);\n\n/**\n * Create a new suggestion item\n *\n * @param text Text of the suggestion item {String}\n * @param width Width of the suggestion item {Number}\n * @param height Height of the suggestion item {Number}\n * @returns {PIXI.Container}\n * @private\n */\nAutoComplete.prototype.createSuggestionItem = function (text, width, height) {\n    var itemText = new PIXI.Text(text, this.theme.textStyle ? this.theme.textStyle.clone() : {\n            font: '20px Arial',\n            fill: 0x4E5769\n        }); // use own styles\n    var container = new PIXI.Container();\n    if (this.hoveredElementText && this.hoveredElementText === itemText.text) {\n        var background = new PIXI.Graphics()\n            .beginFill(this.theme.hover ? this.theme.hover.color : 0xDDDDDD)\n            .drawRect(0, 0, width, height)\n            .endFill();\n        container.addChild(background);\n    }\n\n    itemText.x = this.textOffset.x;\n    itemText.y = this.textOffset.y;\n\n    container.hitArea = new PIXI.Rectangle(0, 0, width, height);\n\n    container.interactive = true;\n    container.click = this.selectResultElement.bind(this, itemText.text);\n    container.tap = this.selectResultElement.bind(this, itemText.text);\n    container.mouseover = this.hoverResultElement.bind(this, itemText.text);\n    container.mouseout = this.removeHoverResultElement.bind(this);\n\n    container.addChild(itemText);\n\n    return container;\n};\n\n/**\n * Draw the results\n *\n * @param text Text to filter the source elements {String}\n */\nAutoComplete.prototype.drawResults = function (text) {\n    if (text.length < this._minAutoCompleteLength) {\n        this.results = [];\n    } else {\n        var lowerCaseText = text.toString().toLowerCase();\n        var results = this.source.filter(function (el) {\n            var elementText = el.text.toString().toLowerCase();\n            return elementText.indexOf(lowerCaseText) >= 0;\n        });\n        if (results.length === 1 && results[0].text.toString() === text.toString()) {\n            results = [];\n        }\n        if (this.limitTo) {\n            results = results.slice(0, this.limitTo);\n        }\n        this.results = results;\n    }\n\n    var wrapper = new PIXI.Graphics();\n    wrapper.beginFill(this.theme.background ? this.theme.background.color : 0xFFFFFF, 1);\n    wrapper.lineStyle(1, this.theme.border ? this.theme.border.color : 0xDDDDDD);\n    wrapper.y = 20;\n    wrapper.moveTo(0, 0);\n    wrapper.lineTo(0, this.results.length * 20);\n    wrapper.lineTo(260, this.results.length * 20);\n    wrapper.lineTo(260, 0);\n    wrapper.lineTo(0, 0);\n    wrapper.endFill();\n\n    var inner = new PIXI.Container();\n\n    for (var i = 0; i < this.results.length; i++) {\n        var container = this.createSuggestionItem(this.results[i].text, 260, 20);\n        container.y = i * 20;\n        inner.addChild(container);\n    }\n    wrapper.addChild(inner);\n\n    this.wrapper = wrapper;\n    this.addChild(this.wrapper);\n};\n\n/**\n * Close results and set the text\n *\n * @param text Display text {String}\n */\nAutoComplete.prototype.selectResultElement = function (text) {\n    this.toggleResults();\n    this.text = text;\n};\n\n/**\n * Close the results\n */\nAutoComplete.prototype.toggleResults = function () {\n    this.results = [];\n    this.removeChild(this.wrapper);\n};\n\n/**\n * Update the hover result element\n * @param elementText\n */\nAutoComplete.prototype.hoverResultElement = function (elementText) {\n    if (elementText !== this.hoveredElementText) {\n        //this.currentState = AutoComplete.HOVER_CONTAINER;\n        this.hoveredElementText = elementText;\n        this.redrawResult();\n    }\n};\n\n/**\n * Remove the hover result element\n */\nAutoComplete.prototype.removeHoverResultElement = function () {\n    //this.currentState = AutoComplete.CLICKED;\n    this.hoveredElementText = null;\n    this.redrawResult();\n};\n\n/**\n * Redraw the results\n */\nAutoComplete.prototype.redrawResult = function () {\n    this.removeChild(this.wrapper);\n    this.drawResults(this.text);\n};\n\n/**\n * Closes the results when the mouse is released outside\n *\n * @protected\n */\nAutoComplete.prototype.onMouseUpOutside = function () {\n    if (this.hasFocus && !this._mouseDown) {\n        this.blur();\n    }\n    this._mouseDown = false;\n    this.toggleResults();\n};\n\n/**\n * Set the auto complete text. Draws the auto complete results afterwards.\n *\n * @param text The text to set {String}\n */\nAutoComplete.prototype.setText = function(text) {\n    TextInput.prototype.setText.call(this,text);\n    if (this._source) {\n        this.toggleResults();\n        this.drawResults(text);\n    }\n};\n\n/**\n * Source elements from which the auto complete filters the elements corresponding to the current text\n *\n * @name GOWN.AutoComplete#source\n * @type String[]\n * @default []\n */\nObject.defineProperty(AutoComplete.prototype, 'source', {\n    get: function () {\n        return this._source;\n    },\n    set: function (source) {\n        if (this._source === source) {\n            return;\n        }\n        this._source = source;\n    }\n});\n\n\n/**\n * Result elements (source elements filtered by the text attribute)\n *\n * @name GOWN.AutoComplete#results\n * @type String[]\n * @default []\n */\nObject.defineProperty(AutoComplete.prototype, 'results', {\n    get: function () {\n        return this._results;\n    },\n    set: function (results) {\n        if (this._results === results) {\n            return;\n        }\n        this._results = results;\n    }\n});\n\n/**\n * The minimum number of entered characters required to draw suggestions.\n *\n * @name GOWN.AutoComplete#minAutoCompleteLength\n * @type Number\n * @default 2\n */\nObject.defineProperty(AutoComplete.prototype, 'minAutoCompleteLength', {\n    get: function () {\n        return this._minAutoCompleteLength;\n    },\n    set: function (minAutoCompleteLength) {\n        if (this._minAutoCompleteLength === minAutoCompleteLength) {\n            return;\n        }\n        this._minAutoCompleteLength = minAutoCompleteLength;\n    }\n});\n\n/**\n * The maximum number of suggestions that show at one time.\n * If 0, all suggestions will be shown.\n *\n * @name GOWN.AutoComplete#limitTo\n * @type Number\n * @default 5\n */\nObject.defineProperty(AutoComplete.prototype, 'limitTo', {\n    get: function () {\n        return this._limitTo;\n    },\n    set: function (limitTo) {\n        if (this._limitTo === limitTo) {\n            return;\n        }\n        this._limitTo = limitTo;\n    }\n});\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/controls/AutoComplete.js\n// module id = 32\n// module chunks = 0","var ToggleButton = require('./ToggleButton');\n\n/**\n * A toggle control that contains a label and a box that may be checked\n * or not to indicate selection.\n *\n * @class Check\n * @extends GOWN.ToggleButton\n * @memberof GOWN\n * @constructor\n * @param [theme] theme for the button {GOWN.Theme}\n * @param [skinName=Check.SKIN_NAME] name of the check skin {String}\n */\nfunction Check(theme, skinName) {\n    // TODO: use and place Label from ToggleButton\n    skinName = skinName || Check.SKIN_NAME;\n    ToggleButton.call(this, theme, skinName);\n}\n\nCheck.prototype = Object.create( ToggleButton.prototype );\nCheck.prototype.constructor = Check;\nmodule.exports = Check;\n\n/**\n * Default check skin name\n *\n * @static\n * @final\n * @type String\n */\nCheck.SKIN_NAME = 'check';\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/controls/Check.js\n// module id = 33\n// module chunks = 0","var Control = require('../core/Control');\nvar ToggleButton = require('./ToggleButton');\nvar List = require('./List');\nvar Point = PIXI.Point;\n\n/**\n * PickerList allows the user to select an option from a list\n *\n * @class PickerList\n * @extends GOWN.Control\n * @memberof GOWN\n * @constructor\n * @param [theme] theme for the picker list {GOWN.Theme}\n */\nfunction PickerList(theme) {\n    this.theme = theme;\n\n    Control.call(this);\n\n    // TODO: Icons for Button\n\n    /**\n     * A function that is expected to return a new GOWN.List\n     *\n     * @private\n     * @type function\n     * @default this._defaultListFactory\n     */\n    this._listFactory = this._listFactory || this._defaultListFactory;\n\n    /**\n     * A function that is expected to return a new GOWN.ToggleButton\n     *\n     * @private\n     * @type function\n     * @default this._defaultButtonFactory\n     */\n    this._buttonFactory = this._buttonFactory || this._defaultButtonFactory;\n\n    // TODO: implement PopUpManager!\n    /**\n     * TODO\n     *\n     * @type GOWN.PickerList\n     * @default this\n     */\n    this.popUpParent = this;\n\n    /**\n     * Invalidate list so that it will be redrawn next time\n     *\n     * @private\n     * @type bool\n     * @default true\n     */\n    this.invalidList = true;\n\n    /**\n     * Invalidate button so that it will be redrawn next time\n     *\n     * @private\n     * @type bool\n     * @default true\n     */\n    this.invalidButton = true;\n}\n\nPickerList.prototype = Object.create( Control.prototype );\nPickerList.prototype.constructor = PickerList;\nmodule.exports = PickerList;\n\n/**\n * Default picker list skin name\n *\n * @static\n * @final\n * @type String\n */\nPickerList.SKIN_NAME = 'picker_list';\n\n/**\n * Toggle the list\n *\n * @private\n */\nPickerList.prototype._clickList = function() {\n    if (!this.open) {\n        this.openList();\n    } else {\n        this.closeList();\n    }\n};\n\n/**\n * Creates and adds the list sub-component and removes the old instance, if one exists.\n * Meant for internal use, and subclasses may override this function with a custom implementation.\n *\n * @param [theme] theme for the list {GOWN.Theme}\n * @private\n */\nPickerList.prototype._defaultListFactory = function(theme) {\n    return new List(theme);\n};\n\n/**\n * Creates and adds the button sub-component and removes the old instance, if one exists.\n * Meant for internal use, and subclasses may override this function with a custom implementation.\n *\n * @param [theme] theme for the list {GOWN.Theme}\n * @private\n */\nPickerList.prototype._defaultButtonFactory = function(theme) {\n    return new ToggleButton(theme);\n};\n\n/**\n * Opens the pop-up list, if it isn't already open.\n */\nPickerList.prototype.openList = function() {\n    if (this.popUpParent === this) {\n        this.list.y = this.height;\n    } else {\n        var pos = new Point(0, this.height);\n        pos = this.toGlobal(pos);\n        pos = this.popUpParent.toLocal(pos);\n        this.list.position = pos;\n    }\n    this.list.clippingInvalid = true;\n    this.popUpParent.addChild(this.list);\n    this.open = true;\n};\n\n/**\n * Closes the pop-up list, if it is open.\n */\nPickerList.prototype.closeList = function() {\n    this.popUpParent.removeChild(this.list);\n    this.open = false;\n};\n\n/**\n * Set item renderer factory for the GOWN.List\n *\n * @name GOWN.PickerList#itemRendererFactory\n * @type function\n */\nObject.defineProperty(PickerList.prototype, 'itemRendererFactory', {\n    set: function(itemRendererFactory) {\n        if (this.list) {\n            this.list.itemRendererFactory = itemRendererFactory;\n        }\n        this._itemRendererFactory = itemRendererFactory;\n    },\n    get: function() {\n        return this._itemRendererFactory;\n    }\n});\n\n/**\n * Set the data provider for the GOWN.List\n *\n * @name GOWN.PickerList#dataProvider\n * @type Array\n */\nObject.defineProperty(PickerList.prototype, 'dataProvider', {\n    set: function(dataProvider) {\n        if (this.list) {\n            this.list.dataProvider = dataProvider;\n        }\n        this._dataProvider = dataProvider;\n    },\n    get: function() {\n        return this._dataProvider;\n    }\n});\n\n/**\n * Set item renderer properties for the GOWN.List\n *\n * @name GOWN.List#itemRendererProperties\n * @type Object\n */\nObject.defineProperty(PickerList.prototype, 'itemRendererProperties', {\n    set: function(itemRendererProperties) {\n        if (this.list) {\n            this.list.itemRendererProperties = itemRendererProperties;\n        }\n        this._itemRendererProperties = itemRendererProperties;\n    },\n    get: function() {\n        return this._itemRendererProperties;\n    }\n});\n\n/**\n * Create the picker list button\n *\n * @private\n */\nPickerList.prototype.createButton = function() {\n    this.button = this._buttonFactory(this.theme);\n\n    this.button.width = this.width;\n    this.button.height = this.height;\n\n    this.button.on('mouseup', this._clickList, this);\n    this.button.on('touchend', this._clickList, this);\n\n    this.addChild(this.button);\n};\n\n/**\n * Create the picker list internal GOWN.List\n *\n * @private\n */\nPickerList.prototype.createList = function() {\n    this.list = this._listFactory(this.theme);\n    if (this.dataProvider) {\n        this.list._dataProvider = this.dataProvider;\n    }\n    if (this.itemRendererFactory) {\n        this.list.itemRendererFactory = this.itemRendererFactory;\n    }\n    if (this.itemRendererProperties) {\n        this.list.itemRendererProperties = this.itemRendererProperties;\n    }\n    // forward list events\n    this.list.on(List.CHANGE, this._listChange, this);\n};\n\n/**\n * Forward list events\n *\n * @param itemRenderer The item renderer {Array}\n * @param value {String}\n * @private\n */\nPickerList.prototype._listChange = function(itemRenderer, value) {\n    this.emit(List.CHANGE, itemRenderer, value);\n    if (this.button && value) {\n        this.button.label = itemRenderer.label;\n    }\n    this.closeList();\n};\n\n/**\n * Update before draw call\n *\n * @protected\n */\nPickerList.prototype.redraw = function() {\n    if (this.invalidButton) {\n        if (this.button) {\n            this.button.off('click', this._clickList, this);\n            this.button.off('tap', this._clickList, this);\n        }\n        this.createButton();\n        this.invalidButton = false;\n    }\n    if (this.invalidList) {\n        this.createList();\n        this.invalidList = false;\n    }\n};\n\n/**\n * Destroy button and list and remove button listeners\n */\nPickerList.prototype.destroy = function() {\n    if (this.button) {\n        this.button.off('click', this._clickList, this);\n        this.button.off('tap', this._clickList, this);\n    }\n    this.button.destroy();\n    if (this.list) {\n        this.list.destroy();\n    }\n};\n// TODO: setter/getter for List to get selectedItem\n// TODO: prompt\n// TODO: PopupManager (!)\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/controls/PickerList.js\n// module id = 34\n// module chunks = 0","var ToggleButton = require('./ToggleButton');\n\n/**\n * A toggleable control that exists in a set that requires a single, exclusive toggled item.\n *\n * @class Radio\n * @extends GOWN.ToggleButton\n * @memberof GOWN\n * @constructor\n * @param [theme] theme for the radio button {GOWN.Theme}\n * @param [skinName=Radio.SKIN_NAME] name of the radio button skin {String}\n */\nfunction Radio(theme, skinName) {\n    skinName = skinName || Radio.SKIN_NAME;\n    ToggleButton.call(this, theme, skinName);\n}\n\nRadio.prototype = Object.create( ToggleButton.prototype );\nRadio.prototype.constructor = Radio;\nmodule.exports = Radio;\n\n/**\n * Default radio button skin name\n *\n * @static\n * @final\n * @type String\n */\nRadio.SKIN_NAME = 'radio';\n\n/**\n * Set the toggle group and add this radio button to it\n *\n * @name GOWN.Radio#label\n * @type String\n */\nObject.defineProperty(Radio.prototype, 'toggleGroup', {\n    get: function() {\n        return this._toggleGroup;\n    },\n    set: function(toggleGroup) {\n        if(this._toggleGroup === toggleGroup) {\n            return;\n        }\n        this._toggleGroup = toggleGroup;\n        toggleGroup.addItem(this);\n    }\n});\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/controls/Radio.js\n// module id = 35\n// module chunks = 0","var Scroller = require('./Scroller');\n//var ScrollBar = require('./ScrollBar');\n\n/**\n * ScrollContainer (not implemented yet)\n *\n * @class ScrollContainer\n * @extends GOWN.Scroller\n * @memberof GOWN\n * @constructor\n * @param [theme] theme for the scroll container {GOWN.Theme}\n */\nfunction ScrollContainer(theme) {\n    Scroller.call(this, theme);\n}\n\nScrollContainer.prototype = Object.create( Scroller.prototype );\nScrollContainer.prototype.constructor = ScrollContainer;\nmodule.exports = ScrollContainer;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/controls/ScrollContainer.js\n// module id = 36\n// module chunks = 0","var Scrollable = require('./Scrollable');\n\n/**\n * Simple slider with min. and max. value\n *\n * @class Slider\n * @extends GOWN.Scrollable\n * @memberof GOWN\n * @constructor\n * @param [theme] theme for the slider {GOWN.Theme}\n */\n// TODO: move stuff from Scrollable back here?\nfunction Slider(theme) {\n    /**\n     * The skin name\n     *\n     * @private\n     * @type String\n     * @default Slider.SKIN_NAME\n     */\n    this._skinName = this._skinName || Slider.SKIN_NAME;\n\n    Scrollable.call(this, theme);\n}\n\nSlider.prototype = Object.create( Scrollable.prototype );\nSlider.prototype.constructor = Slider;\nmodule.exports = Slider;\n\n/**\n * Default slider skin name\n *\n * @static\n * @final\n * @type String\n */\nSlider.SKIN_NAME = 'scroll_bar';\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/controls/Slider.js\n// module id = 38\n// module chunks = 0","var InputControl = require('./InputControl');\n\n/**\n * A text entry control that allows users to enter and edit multiple lines of\n * uniformly-formatted text with the ability to scroll.\n *\n * @class TextInput\n * @extends GOWN.InputControl\n * @memberof GOWN\n * @constructor\n * @param [theme] theme for the text area {GOWN.Theme}\n * @param [skinName=TextArea.SKIN_NAME] name of the text area skin {String}\n */\nfunction TextArea(theme, skinName) {\n    // show and load background image as skin (exploiting skin states)\n    /**\n     * The skin name\n     *\n     * @type String\n     * @default TextArea.SKIN_NAME\n     */\n    this.skinName = skinName || TextArea.SKIN_NAME;\n\n    /**\n     * The valid text area states\n     *\n     * @private\n     * @type String[]\n     * @default InputControl.stateNames\n     */\n    this._validStates = this._validStates || InputControl.stateNames;\n\n    InputControl.call(this, theme);\n\n    /**\n     * @private\n     * @type PIXI.Point\n     */\n    this._fromPos = new PIXI.Point(0, 0);\n\n    /**\n     * @private\n     * @type PIXI.Point\n     */\n    this._toPos = new PIXI.Point(0, 0);\n\n    /**\n     * @private\n     * @type PIXI.Point\n     */\n    this._fromText = new PIXI.Point(0, 0);\n\n    /**\n     * @private\n     * @type PIXI.Point\n     */\n    this._toText = new PIXI.Point(0, 0);\n}\n\nTextArea.prototype = Object.create(InputControl.prototype);\nTextArea.prototype.constructor = TextArea;\nmodule.exports = TextArea;\n\n/**\n * Default text area skin name\n *\n * @static\n * @final\n * @type String\n */\nTextArea.SKIN_NAME = 'text_input';\n\n/**\n * Update the selection\n *\n * @private\n */\nTextArea.prototype.updateSelectionBg = function() {\n    var start = this.selection[0],\n        end = this.selection[1];\n    this.selectionBg.clear();\n    if (start === end) {\n        return;\n    }\n    if (start < end) {\n        this._drawSelectionBg(start, end);\n    } else if (start > end) {\n        this._drawSelectionBg(end, start);\n    }\n    this.selectionBg.x = this.pixiText.x;\n    this.selectionBg.y = this.pixiText.y;\n};\n\n/**\n * Calculate position in Text\n */\n\n/**\n * Calculate position in Text\n *\n * @param textPos Position in the text {Number}\n * @param [position] Position object that gets returned {PIXI.Point}\n * @returns {PIXI.Point} returns the Line and Position in line\n */\nTextArea.prototype.textToLinePos = function(textPos, position) {\n    var lines = this.getLines();\n    var x = 0;\n    for (var y = 0; y < lines.length; y++) {\n        var lineLength = lines[y].length;\n        if (lineLength < textPos) {\n            textPos -= lineLength + 1;\n        } else {\n            x = textPos;\n            break;\n        }\n    }\n\n    if (!position) {\n        position = new PIXI.Point(x, y);\n    } else {\n        position.x = x;\n        position.y = y;\n    }\n    return position;\n};\n\n/**\n * New selection over multiple lines\n *\n * @param fromTextPos Start position {Number}\n * @param toTextPos End position {Number}\n * @private\n */\nTextArea.prototype._drawSelectionBg = function (fromTextPos, toTextPos) {\n    this.textToPixelPos(fromTextPos, this._fromPos);\n    this.textToPixelPos(toTextPos, this._toPos);\n\n    this.selectionBg.beginFill(0x0080ff);\n    if (this._toPos.y === this._fromPos.y) {\n        this.selectionBg.drawRect(\n            this._fromPos.x,\n            this._fromPos.y,\n            this._toPos.x - this._fromPos.x,\n            this.lineHeight());\n        return;\n    }\n\n    this.textToLinePos(fromTextPos, this._fromText);\n    this.textToLinePos(toTextPos, this._toText);\n    var lines = this.getLines();\n    // draw till the end of the line\n    var startPos = this._fromText.x;\n    for (var i = this._fromText.y; i < this._toText.y; i++) {\n        var text = lines[i];\n        this.selectionBg.drawRect(\n            startPos > 0 ? this._fromPos.x : 0,\n            i * this.lineHeight(),\n            this.textWidth(text.substring(startPos, text.length)),\n            this.lineHeight());\n        startPos = 0;\n    }\n    this.selectionBg.drawRect(0,\n        this._toPos.y,\n        this._toPos.x,\n        this.lineHeight());\n};\n\n/**\n * Get the text lines as an array\n *\n * @returns {Array|*} Returns an array with one text line per array element\n */\nTextArea.prototype.getLines = function() {\n    var wrappedText = this.pixiText.wordWrap(this.text);\n    return wrappedText.split(/(?:\\r\\n|\\r|\\n)/);\n};\n\n/**\n * Width of the text area\n *\n * @name GOWN.TextArea#label\n * @type Number\n */\nObject.defineProperty(InputControl.prototype, 'width', {\n    get: function () {\n        return this._width;\n    },\n    set: function(value) {\n        this._width = value;\n        this.minWidth = Math.min(value, this.minWidth);\n        if (this.pixiText) {\n            this.pixiText.style.wordWrapWidth = value - this.textOffset.x * 2;\n            this._cursorNeedsUpdate = true;\n            this._selectionNeedsUpdate = true;\n        }\n    }\n});\n\n/**\n * Set the text style\n *\n * @name GOWN.TextArea#style\n * @type PIXI.TextStyle\n */\nObject.defineProperty(TextArea.prototype, 'style', {\n    get: function() {\n        return this.textStyle;\n    },\n    set: function(style) {\n        this.cursorStyle = style;\n        if (this.cursor) {\n            this.cursor.style = style;\n        }\n        style = style.clone();\n        style.wordWrap = true;\n        if (!style.wordWrapWidth && this.textOffset && this.width) {\n            style.wordWrapWidth = this.width - this.textOffset.x * 2;\n        }\n        this.textStyle = style;\n        if (this.pixiText) {\n            this.pixiText.style = style;\n        }\n        this._cursorNeedsUpdate = true;\n    }\n});\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/controls/TextArea.js\n// module id = 39\n// module chunks = 0","var EventEmitter = require('eventemitter3');\nvar ToggleButton = require('./ToggleButton');\n\n/**\n * Controls the selection of two or more toggles\n * (RadioButtons/ToggleButton/Check instances)\n * where only one may be selected at a time\n *\n * @class ToggleGroup\n * @extends EventEmitter\n * @memberof GOWN\n * @constructor\n */\nfunction ToggleGroup() {\n    /**\n     * List of toggles (RadioButtons/ToggleButton/Check) in the group\n     *\n     * @private\n     * @type GOWN.ToggleButton[]\n     * @default Button.stateNames\n     */\n\tthis._items = [];\n\n    /**\n     * The currently selected toggle.\n     *\n     * @private\n     * @type GOWN.Radio|GOWN.ToggleButton|GOWN.Check\n     */\n\tthis._selectedItem = null;\n\n    /**\n     * Determines if the user can deselect the currently selected item or not.\n     *\n     * @private\n     * @type bool\n     * @default true\n     */\n    this._isSelectionRequired = true;\n\n\tEventEmitter.call(this);\n}\n\nToggleGroup.prototype = Object.create( EventEmitter.prototype );\nToggleGroup.prototype.constructor = ToggleGroup;\nmodule.exports = ToggleGroup;\n\n/**\n * Dispatched when the toggle group selection changes.\n *\n * @static\n * @final\n * @type String\n */\nToggleGroup.CHANGE = 'change';\n\n/**\n * Add an toggle to the toggle group\n *\n * @param item The toggle to add to the toggle group {GOWN.ToggleButton}\n */\nToggleGroup.prototype.addItem = function(item) {\n    if (this._items.indexOf(item) === -1) {\n    \tthis._items.push(item);\n\t\titem.on(ToggleButton.CHANGE, this._toggleChanged, this);\n        // new radio button is selected, unselect the old one\n    \tif (item.selected) {\n    \t\tif (this.selectedItem) {\n    \t\t\tthis.selectedItem.setSelected(false);\n    \t\t}\n    \t\tthis.selectedItem = item;\n    \t}\n    }\n};\n\n/**\n * Change callback that updates the selection for the specific item\n *\n * @param item The item that emitted a change event {GOWN.ToggleButton}\n * @private\n */\nToggleGroup.prototype._toggleChanged = function(item) {\n\tif (item === this.selectedItem && this._isSelectionRequired && !item.selected) {\n\t\titem.setSelected(true);\n\t} else if (item.selected) {\n\t\tthis.selectedItem = item;\n\t}\n};\n\n/**\n * Remove an toggle from the toggle group\n *\n * @param item The toggle to add to the toggle group {GOWN.ToggleButton}\n */\nToggleGroup.prototype.removeItem = function(item) {\n\tvar index = this._items.indexOf(item);\n\tif (index !== -1) {\n\t\titem.off(ToggleButton.CHANGE, this._toggleChanged, this);\n\t\tthis._items.remove(index);\n        // removed item was selected!\n\t\tif (this.selectedItem === item) {\n\t\t\tthis.selectedItem = null;\n\t\t}\n\t}\n};\n\n/**\n * Remove all event listener, clear items-list and set selectedItem to null.\n */\nToggleGroup.prototype.destroy = function() {\n\twhile (this._items.length > 0) {\n\t\tvar item = this._items.pop();\n\t\titem.off(ToggleButton.CHANGE, this._toggleChanged, this);\n\t}\n\tthis.selectedItem = null;\n};\n\n/**\n * The currently selected toggle\n *\n * @name GOWN.ToggleGroup#selectedItem\n * @type GOWN.ToggleButton\n */\nObject.defineProperty(ToggleGroup.prototype, 'selectedItem', {\n    get: function() {\n        return this._selectedItem;\n    },\n    set: function(item) {\n        if (item === null && this._isSelectionRequired) {\n            // item is null, but we need to select something, so we assume\n            // the user wants to set the first item as selected instead\n            item = this._items[0];\n        } else if (this._items.indexOf(item) === -1) {\n            return;\n        }\n        if (item) {\n            item.setSelected(true);\n        }\n        // unselect any previously selected item\n        if (this.selectedItem) {\n\t        this._selectedItem.setSelected(false);\n        }\n\t\tthis._selectedItem = item;\n\t\tthis.emit(ToggleGroup.CHANGE, item);\n    }\n});\n\n/**\n * The index of the currently selected toggle.\n *\n * @name GOWN.ToggleGroup#selectedIndex\n * @type Number\n */\nObject.defineProperty(ToggleGroup.prototype, 'selectedIndex', {\n    get: function() {\n        return this._items.indexOf(this._selectedItem);\n    },\n    set: function(index) {\n        if (index >= 0 && index < this._items.length &&\n            this.selectedIndex !== index) {\n            this.selectedItem = this._items[index];\n        }\n    }\n});\n\n/**\n * Determines if the user can deselect the currently selected item or not.\n *\n * @name GOWN.ToggleGroup#isSelectionRequired\n * @type bool\n * @default true\n */\nObject.defineProperty(ToggleGroup.prototype, 'isSelectionRequired', {\n    get: function () {\n        return this._isSelectionRequired;\n    },\n    set: function(isSelectionRequired) {\n        if (isSelectionRequired && !this._selectedItem && this._items.length > 0) {\n            this.selectedItem = this._items[0];\n        }\n        this._isSelectionRequired = isSelectionRequired;\n    }\n});\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/controls/ToggleGroup.js\n// module id = 40\n// module chunks = 0","/**\n * @file        Main export of the gown.js core library\n * @author      Andreas Bresser <andreasbresser@gmail.com>\n * @copyright   2017 Andreas Bresser\n * @license     {@link https://github.com/GreyRook/gown.js/blob/master/LICENSE|Apache License}\n */\n\n/**\n * @namespace GOWN.core\n */\nmodule.exports = {\n    Control:        require('./Control'),\n    Skinable:       require('./Skinable'),\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/core/index.js\n// module id = 41\n// module chunks = 0","var EventEmitter = require('eventemitter3');\n\n/**\n * The keyboard manager deals with key events. Any DisplayObject can be interactive\n * if its interactive parameter is set to true (similar to the InteractionManager\n * in PIXI)\n *\n * @class\n * @extends EventEmitter\n * @memberof GOWN.interaction\n * @param renderer A reference to the current renderer {PIXI.CanvasRenderer|PIXI.WebGLRenderer}\n * @param [options] {object}\n * @param [options.autoPreventDefault=false] {boolean} Should the manager automatically prevent default browser actions.\n */\n// TODO (maybe): move this to an own external lib for PIXI-Keyboard interaction\n// TODO: show keyboard in Cocoon.io - see Cocoon.Dialog.showKeyboard\nfunction KeyboardManager(renderer, options) {\n    EventEmitter.call(this);\n\n    options = options || {};\n\n    /**\n     * The renderer this interaction manager works for.\n     *\n     * @type PIXI.SystemRenderer\n     */\n    this.renderer = renderer;\n\n    /**\n     * Should default browser actions automatically be prevented.\n     *\n     * @type bool\n     * @default false\n     */\n    this.autoPreventDefault = options.autoPreventDefault !== undefined ? options.autoPreventDefault : false;\n\n    /**\n     * An event data object to handle all the event tracking/dispatching\n     *\n     * @type Object\n     */\n    this.eventData = {\n        stopped: false,\n        target: null,\n        type: null,\n        data: {},\n        stopPropagation:function(){\n            this.stopped = true;\n        }\n    };\n\n    this.onKeyUp = this.onKeyUp.bind(this);\n    this.keyUpProcess = this.keyUpProcess.bind(this);\n\n    this.onKeyDown = this.onKeyDown.bind(this);\n    this.keyDownProcess = this.keyDownProcess.bind(this);\n\n    this.addEvents();\n}\n\nKeyboardManager.prototype = Object.create(EventEmitter.prototype);\nKeyboardManager.prototype.constructor = KeyboardManager;\nmodule.exports = KeyboardManager;\n\n /**\n * Registers all the DOM events\n *\n * @private\n */\nKeyboardManager.prototype.addEvents = function () {\n    if (window.document.body) {\n        // Ineternet Explorer only listens to key-events on a dom-object,\n        // it ignores them when we listen on document\n        window.document.body.addEventListener('keydown', this.onKeyDown, true);\n        window.document.body.addEventListener('keyup', this.onKeyUp, true);\n    } else {\n        window.document.addEventListener('keydown', this.onKeyDown, true);\n        window.document.addEventListener('keyup', this.onKeyUp, true);\n    }\n\n    this.eventsAdded = true;\n};\n\n/**\n * Removes all the DOM events that were previously registered\n *\n * @private\n */\nKeyboardManager.prototype.removeEvents = function () {\n    if (window.document.body) {\n\n        window.document.body.removeEventListener('keydown', this.onKeyDown, true);\n        window.document.body.removeEventListener('keyup', this.onKeyUp, true);\n    } else {\n        window.document.removeEventListener('keydown', this.onKeyDown, true);\n        window.document.removeEventListener('keyup', this.onKeyUp, true);\n    }\n    this.eventsAdded = false;\n};\n\n/**\n * Is called when the key is pressed down\n *\n * @param event The DOM event of a key being pressed down {Event}\n * @private\n */\nKeyboardManager.prototype.onKeyDown = function (event) {\n    if (this.autoPreventDefault) {\n        event.preventDefault();\n    }\n    this._keyEvent(event);\n    this.processInteractive(this.renderer._lastObjectRendered, this.keyDownProcess);\n    this.emit('keydown', this.eventData);\n};\n\n/**\n * Is called when the key is released\n *\n * @param event The DOM event of a key being released {Event}\n * @private\n */\nKeyboardManager.prototype.onKeyUp = function (event) {\n    if (this.autoPreventDefault) {\n        event.preventDefault();\n    }\n    this._keyEvent(event);\n    this.processInteractive(this.renderer._lastObjectRendered, this.keyUpProcess);\n    this.emit('keyup', this.eventData);\n};\n\n/**\n * Handle original key event and forward it to gown\n *\n * @param event The DOM event of a key being released {Event}\n * @private\n */\nKeyboardManager.prototype._keyEvent = function(event) {\n\n    this.eventData.stopped = false;\n    this.eventData.originalEvent = event;\n    this.eventData.data = this.getKeyData(event);\n\n    if (this.autoPreventDefault) {\n        event.preventDefault();\n    }\n};\n\n/**\n * Grabs the data from the keystroke\n *\n * @param event The event to get the key data from {Event}\n * @return {Object}\n * @private\n */\nKeyboardManager.prototype.getKeyData = function (event) {\n    return {\n        altKey: event.altKey,\n        ctrlKey: event.ctrlKey,\n        shiftKey: event.shiftKey,\n        key: event.key,\n        originalEvent: event\n    };\n};\n\n/**\n * Dispatches a key up event\n *\n * @param displayObject The object to dispatch the key event for {PIXI.DisplayObject}\n * @private\n */\nKeyboardManager.prototype.keyUpProcess = function(displayObject) {\n    this.dispatchEvent( displayObject, 'keyup', this.eventData );\n};\n\n/**\n * Dispatches a key down event\n *\n * @param displayObject The object to dispatch the key event for {PIXI.DisplayObject}\n * @private\n */\nKeyboardManager.prototype.keyDownProcess = function(displayObject) {\n    this.dispatchEvent( displayObject, 'keydown', this.eventData );\n};\n\n/**\n * Traverse through the scene graph to call the given function on all displayObjects\n * that can receive keys\n *\n * @param displayObject The displayObject that will be resized (recurcsivly crawls its children)\n * {PIXI.Container|PIXI.Sprite|PIXI.extras.TilingSprite}\n * @param [func] The function that will be called on each resizable object.\n * The displayObject will be passed to the function {Function}\n */\nKeyboardManager.prototype.processInteractive = function (displayObject, func) {\n    if(!displayObject || !displayObject.visible || displayObject.enabled === false)\n    {\n        return false;\n    }\n\n    var children = displayObject.children;\n\n    for (var i = children.length-1; i >= 0; i--) {\n        // unlike the InteractionManager we iterate over ALL children\n        // and check every one if it is resizable, because\n        // we assume that resize is something that could affect every component\n        // not only the one that has focus.\n        var child = children[i];\n        this.processInteractive(child, func);\n    }\n\n    // only the ones who can receive keys (e.g. InputControl) will listen to\n    if (displayObject.receiveKeys) {\n        func(displayObject);\n    }\n};\n\n/**\n * Dispatches an event on the display object that has resizable set to true\n *\n * @param displayObject The display object in question {PIXI.Container|PIXI.Sprite|PIXI.extras.TilingSprite}\n * @param eventString The name of the event (e.g, resize or orientation) {String}\n * @param eventData The event data object {Object}\n * @private\n */\nKeyboardManager.prototype.dispatchEvent = function ( displayObject, eventString, eventData )\n{\n    if(!eventData.stopped)\n    {\n        eventData.target = displayObject;\n        eventData.type = eventString;\n\n        displayObject.emit( eventString, eventData );\n\n        if( displayObject[eventString] )\n        {\n            displayObject[eventString]( eventData );\n        }\n    }\n};\n\n/**\n * Remove events and listener etc.\n */\nKeyboardManager.prototype.destroy = function(){\n    this.removeEvents();\n    this.removeAllListeners();\n    this.renderer = null;\n    this.eventData = null;\n    this.onKeyUp = null;\n    this.keyUpProcess = null;\n    this.onKeyDown = null;\n    this.keyDownProcess = null;\n};\n\nPIXI.WebGLRenderer.registerPlugin('keyboard', KeyboardManager);\nPIXI.CanvasRenderer.registerPlugin('keyboard', KeyboardManager);\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/interaction/KeyboardManager.js\n// module id = 42\n// module chunks = 0","var EventEmitter = require('eventemitter3');\n\n/**\n * The resize manager deals with changes in the Application size\n * e.g. if the browser window has been resized because the keyboard is shown\n * or the device has been rotated on mobile or the user resized it on the\n * desktop with his mouse.\n *\n * @class\n * @extends EventEmitter\n * @memberof GOWN.interaction\n * @param renderer A reference to the current renderer {PIXI.CanvasRenderer|PIXI.WebGLRenderer}\n * @param [options] {object}\n * @param [options.autoPreventDefault=true] Should the manager automatically prevent default browser actions. {boolean}\n * @param [options.fullscreen=false] Should we use the whole browser width/height (window.innerHeight/Width). {boolean}\n */\n // TODO: orientation change for cordova and cocoon ('orientationchange' and Cocoon.Device.getOrientation())\n // TODO: take a look at phaser ScaleManager - see https://github.com/photonstorm/phaser/blob/v2.4.2/src/core/ScaleManager.js\n // TODO: check single Canvas-DOM-Element, not only whole window (see https://github.com/marcj/css-element-queries )\nfunction ResizeManager(renderer, options) {\n    EventEmitter.call(this);\n\n    options = options || {};\n\n    /**\n     * The renderer this interaction manager works for.\n     *\n     * @type PIXI.SystemRenderer\n     */\n    this.renderer = renderer;\n\n    /**\n     * Should default browser actions automatically be prevented.\n     *\n     * @type bool\n     * @default true\n     */\n    this.autoPreventDefault = options.autoPreventDefault !== undefined ? options.autoPreventDefault : true;\n\n    /**\n     * Should we use the whole browser width/height (window.innerHeight/Width)\n     *\n     * @type bool\n     * @default false\n     */\n    this.fullscreen = options.fullscreen || false;\n\n    /**\n     * TODO\n     */\n    this.element = null;\n\n    /**\n     * Time to wait after every resize event to prevent flickering\n     *\n     * @type Number\n     * @default 0\n     */\n    this.resizeTimeout = 0;\n\n    /**\n     * Should the resize manager wait after every resize event\n     *\n     * @type bool\n     * @default true\n     */\n    this.useResizeDoneTimeout = options.useResizeDoneTimeout !== undefined ? options.useResizeDoneTimeout : true;\n\n    /**\n     * An event data object to handle all the event tracking/dispatching\n     *\n     * @type Object\n     */\n    this.eventData = {\n        stopped: false,\n        target: null,\n        type: null,\n        data: {},\n        stopPropagation:function(){\n            this.stopped = true;\n        }\n    };\n\n     this.onResize = this.onResize.bind(this);\n     this.processResize = this.processResize.bind(this);\n\n     this.addEvents();\n}\n\nResizeManager.prototype = Object.create(EventEmitter.prototype);\nResizeManager.prototype.constructor = ResizeManager;\nmodule.exports = ResizeManager;\n\n/**\n * The waiting time after the resize event before updating\n * (prevent the canvas from flickering when resizing)\n *\n * @static\n * @final\n * @type String\n */\nResizeManager.RESIZE_DONE_TIMEOUT = 100;\n\n /**\n * Registers all the DOM events\n *\n * @private\n */\nResizeManager.prototype.addEvents = function () {\n    window.addEventListener('resize', this.onResize, true);\n    this.eventsAdded = true;\n};\n\n/**\n * Removes all the DOM events that were previously registered\n *\n * @private\n */\nResizeManager.prototype.removeEvents = function () {\n    window.removeEventListener('resize', this.onResize, true);\n    this.eventsAdded = false;\n};\n\n/**\n * Is called when the application/browser window gets resized\n *\n * @param _event The DOM event {Event}\n * @private\n */\nResizeManager.prototype.onResize = function (_event) {\n    if (!this.element && this.fullscreen === false) {\n        // we assume you have a fixed size?!\n        // TODO: do not add resizeManager in the first place?\n        return;\n    }\n    if (this.autoPreventDefault) {\n        _event.preventDefault();\n    }\n\n    if (this.useResizeDoneTimeout) {\n        var scope = this;\n        if (this.resizeTimeout) {\n            clearInterval(this.resizeTimeout);\n        }\n        this.resizeTimeout = setInterval(function () {\n            clearInterval(scope.resizeTimeout);\n            scope._resizeEvent(_event);\n        }, ResizeManager.RESIZE_DONE_TIMEOUT);\n    } else {\n        this._resizeEvent(_event);\n    }\n\n};\n\n/**\n * Handle the original resize event and forward it\n *\n * @param event The DOM event {Event}\n * @private\n */\nResizeManager.prototype._resizeEvent = function(event) {\n    this.eventData.stopped = false;\n\n    this.eventData.data = this.getSizeData(event);\n\n    if (this.autoPreventDefault) {\n        event.preventDefault();\n    }\n\n    this.processInteractive(this.renderer._lastObjectRendered, this.processResize);\n    this.emit('resize', this.eventData);\n};\n\n/**\n * Grabs the size from the browser window\n *\n * @private\n */\nResizeManager.prototype.getSizeData = function (event) {\n    var eventData = {\n        originalEvent: event\n    };\n    if (this.fullscreen) {\n        eventData.width = window.innerWidth;\n        eventData.height = window.innerHeight;\n    } else {\n        eventData.width = this.element.clientWidth;\n        eventData.height = this.element.clientHeight;\n    }\n    return eventData;\n};\n\n/**\n * Dispatch a resize event for a given display object\n *\n * @param displayObject {PIXI.DisplayObject}\n * @private\n */\nResizeManager.prototype.processResize = function(displayObject) {\n    this.dispatchEvent( displayObject, 'resize', this.eventData );\n};\n\n/**\n * Dispatches an event on the display object that has resizable set to true\n *\n * @param displayObject The display object in question {PIXI.Container|PIXI.Sprite|PIXI.extras.TilingSprite}\n * @param eventString The name of the event (e.g, resize or orientation) {string}\n * @param eventData The event data object {object}\n * @private\n */\nResizeManager.prototype.dispatchEvent = function (displayObject, eventString, eventData) {\n    if (!eventData.stopped) {\n        eventData.target = displayObject;\n        eventData.type = eventString;\n\n        displayObject.emit(eventString, eventData);\n\n        if (displayObject[eventString]) {\n            displayObject[eventString](eventData);\n        }\n    }\n};\n\n/**\n * Traverse through the scene graph to call given function on all displayObjects\n * that are resizable\n *\n * @param displayObject the displayObject that will be resized (recursivly crawls its children)\n * {PIXI.Container|PIXI.Sprite|PIXI.extras.TilingSprite}\n * @param [func] the function that will be called on each resizable object. The displayObject will be passed to the function {Function}\n */\nResizeManager.prototype.processInteractive = function (displayObject, func)\n{\n    if(!displayObject || !displayObject.visible)\n    {\n        return false;\n    }\n\n    // resize parent first\n    if (displayObject.resizable) {\n        func(displayObject);\n    }\n\n    var children = displayObject.children;\n\n    for (var i = children.length-1; i >= 0; i--) {\n        // unlike the InteractionManager we iterate over ALL children\n        // and check every one if it is resizable, because\n        // we assume that resize is something that could affect every component\n        // not only the one that has focus.\n        var child = children[i];\n        this.processInteractive(child, func);\n    }\n};\n\n/**\n * Remove events and listener etc.\n */\nResizeManager.prototype.destroy = function(){\n    this.removeEvents();\n    this.removeAllListeners();\n    this.renderer = null;\n    this.eventData = null;\n    this.onResize = null;\n};\n\nPIXI.WebGLRenderer.registerPlugin('resize', ResizeManager);\nPIXI.CanvasRenderer.registerPlugin('resize', ResizeManager);\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/interaction/ResizeManager.js\n// module id = 43\n// module chunks = 0","var LayoutAlignment = require('./LayoutAlignment');\n\n/**\n * HorizontalLayout - just sets the alignment to\n * LayoutAlignment.HORIZONTAL_ALIGNMENT\n *\n * @class HorizontalLayout\n * @extends GOWN.layout.LayoutAlignment\n * @memberof GOWN.layout\n * @constructor\n */\nfunction HorizontalLayout() {\n    LayoutAlignment.call(this);\n\n    /**\n     * The alignment of the layout\n     *\n     * @type String\n     * @default LayoutAlignment.HORIZONTAL_ALIGNMENT\n     */\n    this.alignment = LayoutAlignment.HORIZONTAL_ALIGNMENT;\n}\n\nHorizontalLayout.prototype = Object.create( LayoutAlignment.prototype );\nHorizontalLayout.prototype.constructor = HorizontalLayout;\nmodule.exports = HorizontalLayout;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/layout/HorizontalLayout.js\n// module id = 44\n// module chunks = 0","var TiledLayout = require('./TiledLayout');\n\n/**\n * Tiled columns Layout\n * (roughly based on starling TiledColumnsLayout)\n *\n * @class TiledColumnsLayout\n * @extends GOWN.layout.TiledLayout\n * @memberof GOWN.layout\n * @constructor\n */\nfunction TiledColumnsLayout() {\n    TiledLayout.call(this);\n\n    this._paging = TiledLayout.PAGING_VERTICAL;\n    this._orientation = TiledLayout.ORIENTATION_COLUMNS;\n}\n\nTiledColumnsLayout.prototype = Object.create( TiledLayout.prototype );\nTiledColumnsLayout.prototype.constructor = TiledColumnsLayout;\nmodule.exports = TiledColumnsLayout;\n\n/**\n * Quickly sets both <code>horizontalGap</code> and <code>verticalGap</code>\n * to the same value. The <code>gap</code> getter always returns the\n * value of <code>verticalGap</code>, but the value of\n * <code>horizontalGap</code> may be different.\n *\n * @see #_horizontalGap\n * @see #_verticalGap\n *\n * @name GOWN.layout.TiledColumnsLayout#gap\n * @type Number\n * @default 0\n */\nObject.defineProperty(TiledColumnsLayout.prototype, 'gap', {\n    set: function(value) {\n        this._verticalGap = value;\n        this._horizontalGap = value;\n        this._needUpdate = true;\n    },\n    get: function() {\n        return this._verticalGap;\n    }\n});\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/layout/TiledColumnsLayout.js\n// module id = 45\n// module chunks = 0","var TiledLayout = require('./TiledLayout');\n\n/**\n * Tiled rows Layout\n * (roughly based on starling TiledRowsLayout)\n *\n * @class TiledRowsLayout\n * @extends GOWN.layout.TiledLayout\n * @memberof GOWN.layout\n * @constructor\n */\nfunction TiledRowsLayout() {\n    TiledLayout.call(this);\n\n    this._paging = TiledLayout.PAGING_HORIZONTAL;\n    this._orientation = TiledLayout.ORIENTATION_ROWS;\n}\n\nTiledRowsLayout.prototype = Object.create( TiledLayout.prototype );\nTiledRowsLayout.prototype.constructor = TiledRowsLayout;\nmodule.exports = TiledRowsLayout;\n\n/**\n * Quickly sets both <code>horizontalGap</code> and <code>verticalGap</code>\n * to the same value. The <code>gap</code> getter always returns the\n * value of <code>horizontalGap</code>, but the value of\n * <code>verticalGap</code> may be different.\n *\n * @see #_horizontalGap\n * @see #_verticalGap\n *\n * @name GOWN.layout.TiledRowsLayout#gap\n * @type Number\n * @default 0\n */\nObject.defineProperty(TiledRowsLayout.prototype, 'gap', {\n    get: function() {\n        return this._horizontalGap;\n    },\n    set: function(value) {\n        this._verticalGap = value;\n        this._horizontalGap = value;\n        this._needUpdate = true;\n    }\n});\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/layout/TiledRowsLayout.js\n// module id = 46\n// module chunks = 0","var LayoutAlignment = require('./LayoutAlignment');\n\n/**\n * VerticalLayout - just sets the alignment to\n * LayoutAlignment.VERTICAL_ALIGNMENT\n *\n * @class VerticalLayout\n * @extends GOWN.layout.LayoutAlignment\n * @memberof GOWN.layout\n * @constructor\n */\nfunction VerticalLayout() {\n    LayoutAlignment.call(this);\n\n    /**\n     * The alignment of the layout\n     *\n     * @type String\n     * @default LayoutAlignment.VERTICAL_ALIGNMENT\n     */\n    this.alignment = LayoutAlignment.VERTICAL_ALIGNMENT;\n}\n\nVerticalLayout.prototype = Object.create( LayoutAlignment.prototype );\nVerticalLayout.prototype.constructor = VerticalLayout;\nmodule.exports = VerticalLayout;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/layout/VerticalLayout.js\n// module id = 47\n// module chunks = 0","var Shape = require('./Shape');\n\n/**\n * Basic arrow shape\n *\n * @class Arrow\n * @extends GOWN.shapes.Shape\n * @memberof GOWN.shapes\n * @constructor\n * @param color Color of the arrow {Number}\n * @param alpha Alpha value of the arrow {Number}\n * @param tailWidth Tail width of the arrow {Number}\n * @param tailHeight Tail height of the arrow {Number}\n * @param width Width of the arrow {Number}\n * @param height Height of the arrow {Number}\n */\nfunction Arrow(color, alpha, tailWidth, tailHeight, width, height) {\n    /**\n     * Tail height of the arrow\n     *\n     * @private\n     * @type Number\n     */\n    this.tailHeight = tailHeight;\n\n    /**\n     * Tail width of the arrow\n     *\n     * @private\n     * @type Number\n     */\n    this.tailWidth = tailWidth;\n\n    Shape.call(this, color, alpha, width, height);\n}\n\nArrow.prototype = Object.create( Shape.prototype );\nArrow.prototype.constructor = Arrow;\nmodule.exports = Arrow;\n\n/**\n * Draw the arrow during redraw.\n *\n * @private\n */\nArrow.prototype._drawShape = function() {\n    // start y-positon of tail\n    var tailY = Math.floor((this._height-this.tailHeight)/2);\n    // draw arrow tail\n    this.moveTo(0, tailY)\n        .lineTo(this.tailWidth, tailY)\n        .lineTo(this.tailWidth, 0)\n        .lineTo(this._width, Math.floor(this._height/2))\n        .lineTo(this.tailWidth, this._height)\n        .lineTo(this.tailWidth, tailY+this.tailHeight)\n        .lineTo(0, tailY+this.tailHeight);\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/shapes/Arrow.js\n// module id = 48\n// module chunks = 0","var Shape = require('./Shape');\n\n/**\n * Basic diamond shape\n *\n * @class Diamond\n * @extends GOWN.shapes.Shape\n * @memberof GOWN.shapes\n * @constructor\n * @param color Color of the diamond shape {Number}\n * @param alpha Alpha value of the diamond shape {Number}\n * @param width Width of the diamond shape {Number}\n * @param height Height of the diamond shape {Number}\n */\nfunction Diamond(color, alpha, width, height) {\n    Shape.call(this, color, alpha, width, height);\n}\n\nDiamond.prototype = Object.create( Shape.prototype );\nDiamond.prototype.constructor = Diamond;\nmodule.exports = Diamond;\n\n/**\n * Draw the diamond during redraw.\n *\n * @private\n */\nDiamond.prototype._drawShape = function() {\n    this.moveTo(this._width/2, 0)\n        .lineTo(this._width, this._height/2)\n        .lineTo(this._width/2, this._height)\n        .lineTo(0, this._height/2)\n        .lineTo(this._width/2, 0);\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/shapes/Diamond.js\n// module id = 49\n// module chunks = 0","var Shape = require('./Shape');\n\n/**\n * Basic ellipse shape\n *\n * @class Ellipse\n * @extends PIXI.shape.Shape\n * @memberof PIXI.shape\n * @constructor\n * @param color Color of the ellipse shape {Number}\n * @param alpha Alpha value of the ellipse shape {Number}\n * @param width Width of the ellipse shape {Number}\n * @param height Height of the ellipse shape {Number}\n */\nfunction Ellipse(color, alpha, width, height) {\n    Shape.call(this, color, alpha, width, height);\n}\n\nEllipse.prototype = Object.create( Shape.prototype );\nEllipse.prototype.constructor = Ellipse;\nmodule.exports = Ellipse;\n\n/**\n * Draw the ellipse during redraw.\n *\n * @private\n */\nEllipse.prototype._drawShape = function() {\n    this.drawEllipse(this.width/2, this.height/2,\n        Math.abs(this.width/2),\n        Math.abs(this.height/2));\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/shapes/Ellipse.js\n// module id = 50\n// module chunks = 0","var Shape = require('./Shape');\n\n/**\n * Basic line\n *\n * @class Line\n * @extends PIXI.shape.Shape\n * @memberof PIXI.shape\n * @constructor\n * @param color Color of the line {Number}\n * @param alpha Alpha value of the line {Number}\n * @param width Width of the line {Number}\n * @param height Height of the line {Number}\n * @param [lineWidth=1] Width of the line {Number}\n * @param reverse\n */\nfunction Line(color, alpha, width, height, lineWidth, reverse) {\n    /**\n     * Reverse the line\n     *\n     * @private\n     * @type bool\n     */\n    this._reverse = reverse;\n\n    Shape.call(this, color, alpha, width, height);\n\n    /**\n     * The width of the line\n     *\n     * @type Number\n     * @default 1\n     */\n    this.lineWidth = lineWidth || 1;\n}\n\nLine.prototype = Object.create( Shape.prototype );\nLine.prototype.constructor = Line;\nmodule.exports = Line;\n\n/**\n * Draw the rect during redraw. Will use drawRoundRect if a radius is provided.\n *\n * @private\n */\nLine.prototype._drawShape = function() {\n    if (this.reverse) {\n        this.moveTo(this._width, 0);\n        this.lineTo(0, this._height);\n    } else {\n        this.moveTo(0, 0);\n        this.lineTo(this._width,this._height);\n    }\n};\n\n/**\n * Reverses the line\n *\n * @name GOWN.shapes.Line#reverse\n * @type bool\n */\nObject.defineProperty(Line.prototype, 'reverse', {\n    get: function() {\n        return this._reverse;\n    },\n    set: function(reverse) {\n        this._reverse = reverse;\n        this.invalid = true;\n    }\n});\n\n\n/**\n * Update before draw call.\n * Line has to be drawn different than other Shapes\n *\n * @private\n */\nLine.prototype.redraw = function() {\n    if(!this.invalid) {\n        return;\n    }\n\n    var lineWidth = this.lineWidth;\n    this.clear();\n    this.lineStyle(lineWidth, this.color);\n    this._drawShape();\n\n    this.invalid = false;\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/shapes/Line.js\n// module id = 51\n// module chunks = 0","var Shape = require('./Shape');\n\n/**\n * Basic rectangular shape\n *\n * @class Rect\n * @extends GOWN.shapes.Shape\n * @memberof GOWN.shapes\n * @constructor\n * @param color Color of the rectangular shape {Number}\n * @param alpha Alpha value of the rectangular shape {Number}\n * @param width Width of the rectangular shape {Number}\n * @param height Height of the rectangular shape {Number}\n * @param radius Radius of the rectangular shape {Number}\n */\nfunction Rect(color, alpha, width, height, radius) {\n    Shape.call(this, color, alpha, width, height);\n    this._radius = radius;\n}\n\nRect.prototype = Object.create( Shape.prototype );\nRect.prototype.constructor = Rect;\nmodule.exports = Rect;\n\n/**\n * Draw the rect during redraw. will use drawRoundRect if a radius is provided.\n *\n * @private\n */\nRect.prototype._drawShape = function() {\n    if (this.radius) {\n        this.drawRoundedRect(\n            Math.min(this._width, 0),\n            Math.min(this._height, 0),\n            Math.abs(this._width),\n            Math.abs(this._height),\n            this.radius);\n    } else {\n        this.drawRect(\n            Math.min(this._width, 0),\n            Math.min(this._height, 0),\n            Math.abs(this._width),\n            Math.abs(this._height));\n    }\n};\n\n/**\n * The radius of the rectangle border, setting this will redraw the component.\n *\n * @name GOWN.shapes.Rect#radius\n * @type Number\n */\nObject.defineProperty(Rect.prototype, 'radius', {\n    get: function() {\n        return this._radius;\n    },\n    set: function(radius) {\n        this._radius = radius;\n        this.invalid = true;\n    }\n});\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/shapes/Rect.js\n// module id = 52\n// module chunks = 0","var Theme = require('./Theme');\n\n/**\n * Load a theme from a .json file.\n *\n * @class Theme\n * @extends GOWN.Theme\n * @memberof GOWN\n * @constructor\n * @param jsonPath The path to the .json file {String}\n * @param [global=true] Set theme as the global GOWN.theme {bool}\n */\nfunction ThemeParser(jsonPath, global) {\n    Theme.call(this, global);\n\n    /**\n     * Components that show something and can be used as skin\n     *\n     * @see GOWN.shapes\n     * @type Object\n     */\n    this.skinComponents = this.skinComponents || this.getSkinComponents();\n\n    this.addThemeData(jsonPath);\n}\n\nThemeParser.prototype = Object.create( Theme.prototype );\nThemeParser.prototype.constructor = ThemeParser;\nmodule.exports = ThemeParser;\n\n//TODO\nThemeParser.DATA_LOADED = 'data_loaded';\n\n/**\n * Get the component classes that can create skins (in general all GOWN.shapes).\n * Note that image textures are not components\n *\n * @return Object\n */\nThemeParser.prototype.getSkinComponents = function () {\n    var cmps = {};\n    if (GOWN.shapes) {\n        cmps.rect = GOWN.shapes.Rect;\n        cmps.diamond = GOWN.shapes.Diamond;\n        cmps.ellipse = GOWN.shapes.Ellipse;\n        cmps.line = GOWN.shapes.Line;\n    }\n    return cmps;\n};\n\n/**\n * Executed when the image has been loaded.\n * Sets cache and and applies the theme.\n *\n * @see addImage\n * @see resource-loader https://github.com/englercj/resource-loader\n *\n * @param loader The loader {Loader}\n * @param resources The loaded resources {Object}\n */\nThemeParser.prototype.loadComplete = function(loader, resources) {\n    this.setCache(resources);\n\n    if (resources) {\n        var res = resources[this._jsonPath];\n        if (res) {\n            this.themeData = res.data;\n        }\n\n        this.applyTheme();\n        Theme.prototype.loadComplete.call(this, loader, resources);\n    }\n};\n\n/**\n * @private\n */\nThemeParser.prototype.themeApplyTheme = Theme.prototype.applyTheme;\n\n/**\n * Apply the theme to the controls\n * (normally executed only once after the texture has been loaded)\n */\nThemeParser.prototype.applyTheme = function() {\n    if (!this.themeData) {\n        return;\n    }\n    this.parseData(this.themeData);\n    this.themeApplyTheme();\n};\n\n/**\n * Get the scale9 grid data from the theme data\n *\n * @param scale Rectangle position and size {Number[]}\n * @return {PIXI.Rectangle}\n */\nThemeParser.prototype.getScale9 = function(scale) {\n    return new PIXI.Rectangle(\n        parseInt(scale[0])*this.themeScale, parseInt(scale[1])*this.themeScale,\n        parseInt(scale[2])*this.themeScale, parseInt(scale[3])*this.themeScale);\n};\n\n/**\n * Create a new skin from the theme data\n *\n * @param skinData The skin data {Object}\n * @param data The theme data {Object}\n * @returns {function} the skin function\n */\nThemeParser.prototype.skinFromData = function(skinData, data) {\n    if (skinData.type === 'texture') {\n        var scale9;\n        if (skinData.scale9 && skinData.scale9 in data.grids) {\n            scale9 = this.getScale9(data.grids[skinData.scale9]);\n        } else {\n            return this.getImage(skinData.texture);\n        }\n        if (!(skinData.texture in data.frames) && window.console) {\n            window.console.error('texture not found in texture atlas: ' +\n                skinData.texture + ' ' +\n                'please check ' + this._jsonPath);\n            return null;\n        }\n\n        return this.getScaleContainer(skinData.texture, scale9, skinData.middleWidth, skinData.centerHeight);\n    } else if (skinData.type in this.skinComponents) {\n        // keep component in scope\n        var CmpClass = this.skinComponents[skinData.type];\n        return function() {\n            var cmp = new CmpClass();\n            for (var key in skinData) {\n                if (key === 'type') {\n                    continue;\n                }\n                cmp[key] = skinData[key];\n            }\n            return cmp;\n        };\n    }\n};\n\n/**\n * Create a dictionary containing the skin data (including default values)\n *\n * @param stateName The name of the current state (e.g. GOWN.Button.UP) {String}\n * @param skinData The data gathered from previous runs {String}\n * @param data The new data that will be copied into skinData {Object}\n */\nThemeParser.prototype.getSkinData = function(stateName, skinData, data) {\n    if (!data) {\n        return;\n    }\n\n    var copyInto = function(source, target) {\n        if (!source) {\n            return;\n        }\n        for (var key in source) {\n            target[key] = source[key];\n        }\n    };\n\n    // get default skin for all states...\n    copyInto(data.all, skinData);\n\n    // ... override default values for current state\n    copyInto(data[stateName], skinData);\n};\n\n/**\n * Parse the theme data\n *\n * @param data The theme data {Object}\n */\nThemeParser.prototype.parseData = function(data) {\n    this.hoverSkin = data.hoverSkin;\n    this.thumbSkin = data.thumbSkin;\n    this.themeScale = data.themeScale || 1.0;\n\n    if (data.textStyle) {\n        this.textStyle.fill = data.textStyle.fill;\n        this.textStyle.fontFamily = data.textStyle.fontFamily;\n    }\n    if (!data.skins) {\n        return;\n    }\n\n    for (var componentName in data.skins) {\n        if (componentName === 'default') {\n            continue;\n        }\n        // create skin for componentName (e.g. button) from data\n\n        var states = data.skins[componentName];\n        //var skins = data.skins[componentName];\n        for (var stateName in states) {\n            if (stateName === 'all') {\n                continue;\n            }\n\n            var skinData = {};\n            // set defaults\n            this.getSkinData(stateName, skinData, data.skins.default);\n\n            // override defaults with component data\n            if (componentName in data.skins) {\n                this.getSkinData(stateName, skinData, data.skins[componentName]);\n            }\n\n            // create skin from skinData for current skin\n            var skin = this.skinFromData(skinData, data);\n            if (skin) {\n                // skin.minWidth\n                this.setSkin(componentName, stateName, skin);\n            }\n        }\n    }\n};\n\n/**\n * Adds the theme data located at the specified path\n *\n * @param jsonPath The path the .json file\n */\nThemeParser.prototype.addThemeData = function(jsonPath) {\n    this.addImage(jsonPath);\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/skin/ThemeParser.js\n// module id = 53\n// module chunks = 0","/**\n * @file        Main export of the gown.js util library\n * @author      Andreas Bresser <andreasbresser@gmail.com>\n * @copyright   2017 Andreas Bresser\n * @license     {@link https://github.com/GreyRook/gown.js/blob/master/LICENSE|Apache License}\n */\n\n/**\n * @namespace GOWN.util\n */\nmodule.exports = {\n    position:               require('./position'),\n    ScaleContainer:         require('./ScaleContainer'),\n    SliderData:             require('./SliderData'),\n    Tween:                  require('./Tween'),\n    resizeScaling:          require('./resizeScaling'),\n    roundToPrecision:       require('./roundToPrecision'),\n    roundToNearest:         require('./roundToNearest'),\n    roundDownToNearest:     require('./roundDownToNearest'),\n    roundUpToNearest:       require('./roundUpToNearest'),\n    mixin:                  require('./mixin')\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/utils/index.js\n// module id = 54\n// module chunks = 0","// full version of gown\n// (includes pixi-layout and pixi-shape, so you only need to add pixi.js\n//  and gown.js into your html file)\nif (typeof PIXI === 'undefined') {\n    if (window.console) {\n        window.console.warn('pixi.js has to be loaded before loading gown.js');\n    }\n} else {\n\n    var core = module.exports = require('./core');\n    // basic shapes\n    core.shapes = {\n        Shape:          require('./shapes/Shape'),\n        Arrow:          require('./shapes/Arrow'),\n        Diamond:        require('./shapes/Diamond'),\n        Ellipse:        require('./shapes/Ellipse'),\n        Line:           require('./shapes/Line'),\n        Rect:           require('./shapes/Rect')\n    };\n\n    // layouting\n    core.utils = {\n            itemDimensions:       require('./layout/utils/itemDimensions')\n    };\n\n    core.layout = {\n        HorizontalLayout:     require('./layout/HorizontalLayout'),\n        Layout:               require('./layout/Layout'),\n        LayoutAlignment:      require('./layout/LayoutAlignment'),\n        TiledColumnsLayout:   require('./layout/TiledColumnsLayout'),\n        TiledLayout:          require('./layout/TiledLayout'),\n        TiledRowsLayout:      require('./layout/TiledRowsLayout'),\n        VerticalLayout:       require('./layout/VerticalLayout')\n    };\n\n    // controls\n    core.Application =            require('./controls/Application');\n    core.AutoComplete =           require('./controls/AutoComplete');\n    core.Button =                 require('./controls/Button');\n    core.Check =                  require('./controls/Check');\n    core.InputControl =           require('./controls/InputControl');\n    core.LayoutGroup =            require('./controls/LayoutGroup');\n    core.List =                   require('./controls/List');\n    core.PickerList =             require('./controls/PickerList');\n    core.Radio =                  require('./controls/Radio');\n    core.Scrollable =             require('./controls/Scrollable');\n    core.ScrollBar =              require('./controls/ScrollBar');\n    core.ScrollContainer =        require('./controls/ScrollContainer');\n    core.Scroller =               require('./controls/Scroller');\n    core.ScrollText =             require('./controls/ScrollText');\n    core.ScrollThumb =            require('./controls/ScrollThumb');\n    core.Slider =                 require('./controls/Slider');\n    core.TextInput =              require('./controls/TextInput');\n    core.TextArea =               require('./controls/TextArea');\n    core.ToggleButton =           require('./controls/ToggleButton');\n    core.ToggleGroup =            require('./controls/ToggleGroup');\n\n    // data\n    core.ListCollection = require('./data/ListCollection');\n\n    // control renderer\n    core.DefaultListItemRenderer =  require('./controls/renderers/DefaultListItemRenderer');\n\n    // skin\n    core.Theme =           require('./skin/Theme');\n    core.ThemeFont =       require('./skin/ThemeFont');\n    core.ThemeParser =     require('./skin/ThemeParser');\n\n    // manager\n    core.ResizeManager =     require('./interaction/ResizeManager');\n    core.KeyboardManager =   require('./interaction/KeyboardManager');\n\n    // add core plugins.\n    core.utils = require('./utils');\n\n    // use default pixi loader\n    core.loader = PIXI.loader;\n\n    // export GOWN globally.\n    global.GOWN = core;\n}\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/index.js\n// module id = 55\n// module chunks = 0","var roundToPrecision = require('./roundToPrecision');\n\n/**\n * Rounds a Number <em>down</em> to the nearest multiple of an input. For example, by rounding\n * 16 down to the nearest 10, you will receive 10. Similar to the built-in function Math.floor().\n *\n * @see Math#floor\n *\n * @function GOWN.utils.roundDownToNearest\n * @param number The number to round down {Number}\n * @param nearest The number whose multiple must be found {Number}\n * @return {Number} The rounded number\n */\nmodule.exports = function(number, nearest) {\n    nearest = nearest || 1;\n    if(nearest === 0) {\n\t\treturn number;\n\t}\n\treturn Math.floor(roundToPrecision(number / nearest, 10)) * nearest;\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/utils/roundDownToNearest.js\n// module id = 56\n// module chunks = 0","var roundToPrecision = require('./roundToPrecision');\n\n/**\n * Rounds a Number to the nearest multiple of an input. For example, by rounding\n * 16 to the nearest 10, you will receive 20. Similar to the built-in function Math.round().\n *\n * @see Math#round\n *\n * @function GOWN.utils.roundToNearest\n * @param number The number to round {Number}\n * @param nearest The number whose multiple must be found {Number}\n * @return {Number} The rounded number\n */\nmodule.exports = function(number, nearest) {\n    nearest = nearest || 1;\n    if(nearest === 0) {\n\t\treturn number;\n\t}\n\tvar roundedNumber = Math.round(roundToPrecision(number / nearest, 10)) * nearest;\n    return roundToPrecision(roundedNumber, 10);\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/utils/roundToNearest.js\n// module id = 57\n// module chunks = 0","var roundToPrecision = require('./roundToPrecision');\n\n/**\n * Rounds a Number <em>up</em> to the nearest multiple of an input. For example, by rounding\n * 16 up to the nearest 10, you will receive 20. Similar to the built-in function Math.ceil().\n *\n * @see Math#ceil\n *\n * @function GOWN.utils.roundUpToNearest\n * @param number The number to round up {Number}\n * @param nearest The number whose multiple must be found {Number}\n * @return {Number} The rounded number\n */\nmodule.exports = function(number, nearest) {\n    nearest = nearest || 1;\n    if(nearest === 0) {\n\t\treturn number;\n\t}\n\treturn Math.ceil(roundToPrecision(number / nearest, 10)) * nearest;\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/utils/roundUpToNearest.js\n// module id = 58\n// module chunks = 0"],"sourceRoot":""}